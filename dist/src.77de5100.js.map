{"version":3,"sources":["../node_modules/immutable/dist/immutable.es.js","tiles/domain.ts","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/buffer/index.js","../node_modules/lodash/lodash.js","tiles/utility.ts","tiles/TileGraphics.ts","tiles/PanelGraphics.ts","tiles/TileGridGraphics.ts","tiles/TileBag.ts","../../src/thunk.ts","../../src/trampoline.ts","../../src/index.ts","tiles/TileGrid.ts","tiles/GameState.ts","tiles/Mouse.ts","tiles/GameLogic.ts","tiles/Button.ts","tiles/Score.ts","index.ts","../node_modules/parcel/src/builtins/hmr-runtime.js"],"names":["DELETE","SHIFT","SIZE","MASK","NOT_SET","MakeRef","value","SetRef","ref","OwnerID","ensureSize","iter","size","undefined","__iterate","returnTrue","wrapIndex","index","uint32Index","NaN","wholeSlice","begin","end","isNeg","resolveBegin","resolveIndex","resolveEnd","defaultIndex","Infinity","Math","max","min","IS_COLLECTION_SYMBOL","isCollection","maybeCollection","Boolean","IS_KEYED_SYMBOL","isKeyed","maybeKeyed","IS_INDEXED_SYMBOL","isIndexed","maybeIndexed","isAssociative","maybeAssociative","Collection","Seq","KeyedCollection","KeyedSeq","__proto__","prototype","Object","create","constructor","IndexedCollection","IndexedSeq","SetCollection","SetSeq","Keyed","Indexed","Set","IS_SEQ_SYMBOL","isSeq","maybeSeq","IS_RECORD_SYMBOL","isRecord","maybeRecord","isImmutable","maybeImmutable","IS_ORDERED_SYMBOL","isOrdered","maybeOrdered","ITERATE_KEYS","ITERATE_VALUES","ITERATE_ENTRIES","REAL_ITERATOR_SYMBOL","Symbol","iterator","FAUX_ITERATOR_SYMBOL","ITERATOR_SYMBOL","Iterator","next","toString","KEYS","VALUES","ENTRIES","inspect","toSource","iteratorValue","type","k","v","iteratorResult","done","iteratorDone","hasIterator","maybeIterable","Array","isArray","getIteratorFn","isIterator","maybeIterator","getIterator","iterable","iteratorFn","call","isEntriesIterable","entries","isKeysIterable","keys","hasOwnProperty","isArrayLike","Number","isInteger","length","emptySequence","toSeq","seqFromValue","__toString","cacheResult","_cache","__iterateUncached","entrySeq","toArray","fn","reverse","cache","i","entry","__iterator","__iteratorUncached","toKeyedSeq","fromEntrySeq","keyedSeqFromValue","toIndexedSeq","indexedSeqFromValue","of","arguments","toSetSeq","ArraySeq","array","_array","get","notSetValue","has","ii","ObjectSeq","object","_object","_keys","key","CollectionSeq","collection","_collection","iterations","step","EMPTY_SEQ","seq","maybeIndexedSeqFromValue","TypeError","IS_MAP_SYMBOL","isMap","maybeMap","isOrderedMap","maybeOrderedMap","isValueObject","maybeValue","equals","hashCode","is","valueA","valueB","valueOf","imul","a","b","c","d","smi","i32","defaultValueOf","hash","o","hashNullish","hashNumber","STRING_HASH_CACHE_MIN_STRLEN","cachedHashString","hashString","hashJSObj","hashSymbol","Error","nullish","n","string","hashed","stringHashCache","STRING_HASH_CACHE_SIZE","STRING_HASH_CACHE_MAX_SIZE","charCodeAt","sym","symbolMap","nextHash","obj","usingWeakMap","weakMap","UID_HASH_KEY","canDefineProperty","propertyIsEnumerable","getIENodeHash","set","isExtensible","defineProperty","enumerable","configurable","writable","apply","nodeType","e","node","uniqueID","documentElement","_objHashUID","WeakMap","ToKeyedSequence","indexed","useKeys","_iter","_useKeys","valueSeq","this$1$1","reversedSequence","reverseFactory","map","mapper","context","mappedSequence","mapFactory","ToIndexedSequence","includes","ToSetSequence","FromEntriesSequence","validateEntry","indexedCollection","cacheResultThrough","flipFactory","flipSequence","makeSequence","flip","filterFactory","predicate","filterSequence","countByFactory","grouper","groups","Map","asMutable","update","asImmutable","groupByFactory","isKeyedIter","OrderedMap","push","coerce","collectionClass","arr","reify","sliceFactory","originalSize","resolvedBegin","resolvedEnd","resolvedSize","sliceSize","sliceSeq","skipped","isSkipping","takeWhileFactory","takeSequence","iterating","skipWhileFactory","skipSequence","skipping","concatFactory","values","isKeyedCollection","iters","concat","filter","singleton","concatSeq","flatten","reduce","sum","flattenFactory","depth","flatSequence","stopped","flatDeep","currentDepth","stack","pop","flatMapFactory","interposeFactory","separator","interposedSequence","sortFactory","comparator","defaultComparator","sort","forEach","maxFactory","maxCompare","comp","zipWithFactory","keyIter","zipper","zipAll","zipSequence","sizes","iterators","isDone","steps","every","s","some","arrCopy","offset","len","newArr","invariant","condition","error","assertNotInfinite","coerceKeyPath","keyPath","isPlainObject","proto","getPrototypeOf","parentProto","nextProto","isDataStructure","quoteString","JSON","stringify","String","_ignoreError","shallowCopy","from","to","remove","collectionCopy","splice","updateIn$1","updater","updatedValue","updateInDeeply","inImmutable","existing","wasNotSet","existingValue","newValue","slice","nextExisting","nextUpdated","emptyMap","setIn$1","setIn","removeIn","deleteIn","update$1","updateIn","merge$1","mergeIntoKeyedWith","mergeWith$1","merger","collections","collection$1","__ownerID","withMutations","mergeIntoCollection","oldVal","merge","sources","mergeWithSources","mergeWith","mergeDeep$1","mergeDeepWithSources","mergeDeepWith$1","deepMergerWith","merged","mergeItem","hasVal","nextVal","deepMerger","oldValue","areMergeable","oldDataStructure","newDataStructure","oldSeq","newSeq","mergeDeep","mergeDeepWith","mergeIn","m","mergeDeepIn","mutable","wasAltered","__ensureOwner","__altered","keyValues","_root","updateMap","deleteAll","clear","__hash","sortBy","MapIterator","iterate","ownerID","makeMap","MapPrototype","removeAll","result","ArrayMapNode","shift","keyHash","didChangeSize","didAlter","removed","idx","exists","MAX_ARRAY_MAP_SIZE","createNodes","isEditable","newEntries","BitmapIndexedNode","bitmap","nodes","bit","popCount","keyHashFrag","newNode","updateNode","MAX_BITMAP_INDEXED_SIZE","expandNodes","isLeafNode","newBitmap","newNodes","setAt","spliceOut","spliceIn","HashArrayMapNode","count","newCount","MIN_HASH_ARRAY_MAP_SIZE","packNodes","HashCollisionNode","mergeIntoNode","ValueNode","keyMatch","maxIndex","_type","_reverse","_stack","mapIteratorFrame","mapIteratorValue","subNode","__prev","prev","root","EMPTY_MAP","newRoot","newSize","idx1","idx2","excluding","packedII","packedNodes","including","expandedNodes","x","val","canEdit","newArray","newLen","after","IS_LIST_SYMBOL","isList","maybeList","List","empty","emptyList","makeList","VNode","list","setSize","_origin","listNodeFor","updateList","insert","_capacity","_level","_tail","oldSize","setListBounds","unshift","arguments$1","seqs","argument","iterateList","DONE","ListPrototype","removeBefore","level","originIndex","removingFirst","newChild","oldChild","editable","editableVNode","removeAfter","sizeIndex","left","right","tailPos","getTailOffset","tail","iterateNodeOrLeaf","iterateLeaf","iterateNode","origin","capacity","EMPTY_LIST","newTail","updateVNode","nodeHas","lowerNode","newLowerNode","rawIndex","owner","oldOrigin","oldCapacity","newOrigin","newCapacity","newLevel","offsetShift","oldTailOffset","newTailOffset","oldTail","beginIndex","emptyOrderedMap","_map","_list","updateOrderedMap","newMap","newList","makeOrderedMap","omap","EMPTY_ORDERED_MAP","toMap","IS_STACK_SYMBOL","isStack","maybeStack","Stack","emptyStack","pushAll","head","_head","peek","makeStack","StackPrototype","unshiftAll","EMPTY_STACK","IS_SET_SYMBOL","isSet","maybeSet","isOrderedSet","maybeOrderedSet","deepEqual","notAssociative","flipped","_","allEqual","bSize","mixin","ctor","methods","keyCopier","getOwnPropertySymbols","toJS","result$1","emptySet","add","fromKeys","keySeq","intersect","sets","SetPrototype","union","updateSet","didChanges","mapEntries","mapped","toRemove","subtract","OrderedSet","__empty","__make","makeSet","EMPTY_SET","Range","start","abs","_start","_end","_step","ceil","EMPTY_RANGE","searchValue","possibleIndex","floor","indexOf","offsetValue","lastIndexOf","other","getIn$1","searchKeyPath","getIn","hasIn$1","hasIn","toObject","isIterable","useTuples","toJS$1","toOrderedMap","toOrderedSet","toSet","toStack","toList","__toStringMapper","join","returnValue","find","findEntry","sideEffect","bind","joined","isFirst","reduce$1","reducer","initialReduction","reduceRight","not","butLast","isEmpty","countBy","entriesSequence","entryMapper","filterNot","found","findKey","findLast","findLastEntry","findLastKey","first","flatMap","searchKey","groupBy","isSubset","isSuperset","keyOf","keyMapper","last","lastKeyOf","maxBy","neg","defaultNegComparator","minBy","rest","skip","amount","skipLast","skipWhile","skipUntil","take","takeLast","takeWhile","takeUntil","hashCollection","CollectionPrototype","toJSON","chain","contains","mapKeys","KeyedCollectionPrototype","findIndex","removeNum","numArgs","spliced","findLastIndex","interpose","interleave","zipped","interleaved","zip","defaultZipper","zipWith","IndexedCollectionPrototype","SetCollectionPrototype","reduction","useFirst","ordered","keyed","h","hashMerge","murmurHashOfSize","emptyOrderedSet","OrderedSetPrototype","makeOrderedSet","EMPTY_ORDERED_SET","throwOnInvalidDefaultValues","defaultValues","Record","name","hasInitialized","RecordType","indices","RecordTypePrototype","_indices","_name","_defaultValues","propName","console","warn","recordName","setProp","_values","l","RecordPrototype","displayName","str","recordSeq","newValues","makeRecord","getDescriptiveName","likeRecord","record","Repeat","times","_value","EMPTY_REPEAT","fromJS","converter","fromJSWith","defaultConverter","parentValue","converted","version","Immutable","Iterable","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","generated","js","hmrApply","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","message","overlay","createErrorOverlay","document","body","appendChild","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps","cached","cb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,MAAM,GAAG,QAAb,EAEA;;AACA,IAAIC,KAAK,GAAG,CAAZ,EAAe;;AACf,IAAIC,IAAI,GAAG,KAAKD,KAAhB;AACA,IAAIE,IAAI,GAAGD,IAAI,GAAG,CAAlB,EAEA;AACA;;AACA,IAAIE,OAAO,GAAG,EAAd,EAEA;;AACA,SAASC,OAAT,GAAmB;AACjB,SAAO;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAP;AACD;;AAED,SAASC,MAAT,CAAgBC,GAAhB,EAAqB;AACnB,MAAIA,GAAJ,EAAS;AACPA,IAAAA,GAAG,CAACF,KAAJ,GAAY,IAAZ;AACD;AACF,EAED;AACA;AACA;;;AACA,SAASG,OAAT,GAAmB,CAAE;;AAErB,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACxB,MAAIA,IAAI,CAACC,IAAL,KAAcC,SAAlB,EAA6B;AAC3BF,IAAAA,IAAI,CAACC,IAAL,GAAYD,IAAI,CAACG,SAAL,CAAeC,UAAf,CAAZ;AACD;;AACD,SAAOJ,IAAI,CAACC,IAAZ;AACD;;AAED,SAASI,SAAT,CAAmBL,IAAnB,EAAyBM,KAAzB,EAAgC;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,QAAIC,WAAW,GAAGD,KAAK,KAAK,CAA5B,CAD6B,CACE;;AAC/B,QAAI,KAAKC,WAAL,KAAqBD,KAArB,IAA8BC,WAAW,KAAK,UAAlD,EAA8D;AAC5D,aAAOC,GAAP;AACD;;AACDF,IAAAA,KAAK,GAAGC,WAAR;AACD;;AACD,SAAOD,KAAK,GAAG,CAAR,GAAYP,UAAU,CAACC,IAAD,CAAV,GAAmBM,KAA/B,GAAuCA,KAA9C;AACD;;AAED,SAASF,UAAT,GAAsB;AACpB,SAAO,IAAP;AACD;;AAED,SAASK,UAAT,CAAoBC,KAApB,EAA2BC,GAA3B,EAAgCV,IAAhC,EAAsC;AACpC,SACE,CAAES,KAAK,KAAK,CAAV,IAAe,CAACE,KAAK,CAACF,KAAD,CAAtB,IACET,IAAI,KAAKC,SAAT,IAAsBQ,KAAK,IAAI,CAACT,IADnC,MAECU,GAAG,KAAKT,SAAR,IAAsBD,IAAI,KAAKC,SAAT,IAAsBS,GAAG,IAAIV,IAFpD,CADF;AAKD;;AAED,SAASY,YAAT,CAAsBH,KAAtB,EAA6BT,IAA7B,EAAmC;AACjC,SAAOa,YAAY,CAACJ,KAAD,EAAQT,IAAR,EAAc,CAAd,CAAnB;AACD;;AAED,SAASc,UAAT,CAAoBJ,GAApB,EAAyBV,IAAzB,EAA+B;AAC7B,SAAOa,YAAY,CAACH,GAAD,EAAMV,IAAN,EAAYA,IAAZ,CAAnB;AACD;;AAED,SAASa,YAAT,CAAsBR,KAAtB,EAA6BL,IAA7B,EAAmCe,YAAnC,EAAiD;AAC/C;AACA;AACA,SAAOV,KAAK,KAAKJ,SAAV,GACHc,YADG,GAEHJ,KAAK,CAACN,KAAD,CAAL,GACAL,IAAI,KAAKgB,QAAT,GACEhB,IADF,GAEEiB,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYlB,IAAI,GAAGK,KAAnB,IAA4B,CAH9B,GAIAL,IAAI,KAAKC,SAAT,IAAsBD,IAAI,KAAKK,KAA/B,GACAA,KADA,GAEAY,IAAI,CAACE,GAAL,CAASnB,IAAT,EAAeK,KAAf,IAAwB,CAR5B;AASD;;AAED,SAASM,KAAT,CAAejB,KAAf,EAAsB;AACpB;AACA,SAAOA,KAAK,GAAG,CAAR,IAAcA,KAAK,KAAK,CAAV,IAAe,IAAIA,KAAJ,KAAc,CAACsB,QAAnD;AACD;;AAED,IAAII,oBAAoB,GAAG,4BAA3B;;AAEA,SAASC,YAAT,CAAsBC,eAAtB,EAAuC;AACrC,SAAOC,OAAO,CAACD,eAAe,IAAIA,eAAe,CAACF,oBAAD,CAAnC,CAAd;AACD;;AAED,IAAII,eAAe,GAAG,yBAAtB;;AAEA,SAASC,OAAT,CAAiBC,UAAjB,EAA6B;AAC3B,SAAOH,OAAO,CAACG,UAAU,IAAIA,UAAU,CAACF,eAAD,CAAzB,CAAd;AACD;;AAED,IAAIG,iBAAiB,GAAG,2BAAxB;;AAEA,SAASC,SAAT,CAAmBC,YAAnB,EAAiC;AAC/B,SAAON,OAAO,CAACM,YAAY,IAAIA,YAAY,CAACF,iBAAD,CAA7B,CAAd;AACD;;AAED,SAASG,aAAT,CAAuBC,gBAAvB,EAAyC;AACvC,SAAON,OAAO,CAACM,gBAAD,CAAP,IAA6BH,SAAS,CAACG,gBAAD,CAA7C;AACD;;AAED,IAAIC,UAAU,GAAG,SAASA,UAAT,CAAoBtC,KAApB,EAA2B;AAC1C,SAAO2B,YAAY,CAAC3B,KAAD,CAAZ,GAAsBA,KAAtB,GAA8BuC,GAAG,CAACvC,KAAD,CAAxC;AACD,CAFD;;;;AAIA,IAAIwC,eAAe,GAAG,aAAc,UAAUF,UAAV,EAAsB;AACxD,WAASE,eAAT,CAAyBxC,KAAzB,EAAgC;AAC9B,WAAO+B,OAAO,CAAC/B,KAAD,CAAP,GAAiBA,KAAjB,GAAyByC,QAAQ,CAACzC,KAAD,CAAxC;AACD;;AAED,MAAKsC,UAAL,EAAkBE,eAAe,CAACE,SAAhB,GAA4BJ,UAA5B;AAClBE,EAAAA,eAAe,CAACG,SAAhB,GAA4BC,MAAM,CAACC,MAAP,CAAeP,UAAU,IAAIA,UAAU,CAACK,SAAxC,CAA5B;AACAH,EAAAA,eAAe,CAACG,SAAhB,CAA0BG,WAA1B,GAAwCN,eAAxC;AAEA,SAAOA,eAAP;AACD,CAVmC,CAUlCF,UAVkC,CAApC;;AAYA,IAAIS,iBAAiB,GAAG,aAAc,UAAUT,UAAV,EAAsB;AAC1D,WAASS,iBAAT,CAA2B/C,KAA3B,EAAkC;AAChC,WAAOkC,SAAS,CAAClC,KAAD,CAAT,GAAmBA,KAAnB,GAA2BgD,UAAU,CAAChD,KAAD,CAA5C;AACD;;AAED,MAAKsC,UAAL,EAAkBS,iBAAiB,CAACL,SAAlB,GAA8BJ,UAA9B;AAClBS,EAAAA,iBAAiB,CAACJ,SAAlB,GAA8BC,MAAM,CAACC,MAAP,CAAeP,UAAU,IAAIA,UAAU,CAACK,SAAxC,CAA9B;AACAI,EAAAA,iBAAiB,CAACJ,SAAlB,CAA4BG,WAA5B,GAA0CC,iBAA1C;AAEA,SAAOA,iBAAP;AACD,CAVqC,CAUpCT,UAVoC,CAAtC;;AAYA,IAAIW,aAAa,GAAG,aAAc,UAAUX,UAAV,EAAsB;AACtD,WAASW,aAAT,CAAuBjD,KAAvB,EAA8B;AAC5B,WAAO2B,YAAY,CAAC3B,KAAD,CAAZ,IAAuB,CAACoC,aAAa,CAACpC,KAAD,CAArC,GAA+CA,KAA/C,GAAuDkD,MAAM,CAAClD,KAAD,CAApE;AACD;;AAED,MAAKsC,UAAL,EAAkBW,aAAa,CAACP,SAAd,GAA0BJ,UAA1B;AAClBW,EAAAA,aAAa,CAACN,SAAd,GAA0BC,MAAM,CAACC,MAAP,CAAeP,UAAU,IAAIA,UAAU,CAACK,SAAxC,CAA1B;AACAM,EAAAA,aAAa,CAACN,SAAd,CAAwBG,WAAxB,GAAsCG,aAAtC;AAEA,SAAOA,aAAP;AACD,CAViC,CAUhCX,UAVgC,CAAlC;;AAYAA,UAAU,CAACa,KAAX,GAAmBX,eAAnB;AACAF,UAAU,CAACc,OAAX,GAAqBL,iBAArB;AACAT,UAAU,CAACe,GAAX,GAAiBJ,aAAjB;AAEA,IAAIK,aAAa,GAAG,uBAApB;;AAEA,SAASC,KAAT,CAAeC,QAAf,EAAyB;AACvB,SAAO3B,OAAO,CAAC2B,QAAQ,IAAIA,QAAQ,CAACF,aAAD,CAArB,CAAd;AACD;;AAED,IAAIG,gBAAgB,GAAG,0BAAvB;;AAEA,SAASC,QAAT,CAAkBC,WAAlB,EAA+B;AAC7B,SAAO9B,OAAO,CAAC8B,WAAW,IAAIA,WAAW,CAACF,gBAAD,CAA3B,CAAd;AACD;;AAED,SAASG,WAAT,CAAqBC,cAArB,EAAqC;AACnC,SAAOlC,YAAY,CAACkC,cAAD,CAAZ,IAAgCH,QAAQ,CAACG,cAAD,CAA/C;AACD;;AAED,IAAIC,iBAAiB,GAAG,2BAAxB;;AAEA,SAASC,SAAT,CAAmBC,YAAnB,EAAiC;AAC/B,SAAOnC,OAAO,CAACmC,YAAY,IAAIA,YAAY,CAACF,iBAAD,CAA7B,CAAd;AACD;;AAED,IAAIG,YAAY,GAAG,CAAnB;AACA,IAAIC,cAAc,GAAG,CAArB;AACA,IAAIC,eAAe,GAAG,CAAtB;AAEA,IAAIC,oBAAoB,GAAG,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,QAAlE;AACA,IAAIC,oBAAoB,GAAG,YAA3B;AAEA,IAAIC,eAAe,GAAGJ,oBAAoB,IAAIG,oBAA9C;;AAEA,IAAIE,QAAQ,GAAG,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;AACrC,OAAKA,IAAL,GAAYA,IAAZ;AACD,CAFD;;AAIAD,QAAQ,CAAC9B,SAAT,CAAmBgC,QAAnB,GAA8B,SAASA,QAAT,GAAqB;AACjD,SAAO,YAAP;AACD,CAFD;;AAIAF,QAAQ,CAACG,IAAT,GAAgBX,YAAhB;AACAQ,QAAQ,CAACI,MAAT,GAAkBX,cAAlB;AACAO,QAAQ,CAACK,OAAT,GAAmBX,eAAnB;;AAEAM,QAAQ,CAAC9B,SAAT,CAAmBoC,OAAnB,GAA6BN,QAAQ,CAAC9B,SAAT,CAAmBqC,QAAnB,GAA8B,YAAY;AACrE,SAAO,KAAKL,QAAL,EAAP;AACD,CAFD;;AAGAF,QAAQ,CAAC9B,SAAT,CAAmB6B,eAAnB,IAAsC,YAAY;AAChD,SAAO,IAAP;AACD,CAFD;;AAIA,SAASS,aAAT,CAAuBC,IAAvB,EAA6BC,CAA7B,EAAgCC,CAAhC,EAAmCC,cAAnC,EAAmD;AACjD,MAAIrF,KAAK,GAAGkF,IAAI,KAAK,CAAT,GAAaC,CAAb,GAAiBD,IAAI,KAAK,CAAT,GAAaE,CAAb,GAAiB,CAACD,CAAD,EAAIC,CAAJ,CAA9C;AACAC,EAAAA,cAAc,GACTA,cAAc,CAACrF,KAAf,GAAuBA,KADd,GAETqF,cAAc,GAAG;AAChBrF,IAAAA,KAAK,EAAEA,KADS;AAEhBsF,IAAAA,IAAI,EAAE;AAFU,GAFtB;AAMA,SAAOD,cAAP;AACD;;AAED,SAASE,YAAT,GAAwB;AACtB,SAAO;AAAEvF,IAAAA,KAAK,EAAEO,SAAT;AAAoB+E,IAAAA,IAAI,EAAE;AAA1B,GAAP;AACD;;AAED,SAASE,WAAT,CAAqBC,aAArB,EAAoC;AAClC,MAAIC,KAAK,CAACC,OAAN,CAAcF,aAAd,CAAJ,EAAkC;AAChC;AACA,WAAO,IAAP;AACD;;AAED,SAAO,CAAC,CAACG,aAAa,CAACH,aAAD,CAAtB;AACD;;AAED,SAASI,UAAT,CAAoBC,aAApB,EAAmC;AACjC,SAAOA,aAAa,IAAI,OAAOA,aAAa,CAACpB,IAArB,KAA8B,UAAtD;AACD;;AAED,SAASqB,WAAT,CAAqBC,QAArB,EAA+B;AAC7B,MAAIC,UAAU,GAAGL,aAAa,CAACI,QAAD,CAA9B;AACA,SAAOC,UAAU,IAAIA,UAAU,CAACC,IAAX,CAAgBF,QAAhB,CAArB;AACD;;AAED,SAASJ,aAAT,CAAuBI,QAAvB,EAAiC;AAC/B,MAAIC,UAAU,GACZD,QAAQ,KACN5B,oBAAoB,IAAI4B,QAAQ,CAAC5B,oBAAD,CAAjC,IACC4B,QAAQ,CAACzB,oBAAD,CAFF,CADV;;AAIA,MAAI,OAAO0B,UAAP,KAAsB,UAA1B,EAAsC;AACpC,WAAOA,UAAP;AACD;AACF;;AAED,SAASE,iBAAT,CAA2BV,aAA3B,EAA0C;AACxC,MAAIQ,UAAU,GAAGL,aAAa,CAACH,aAAD,CAA9B;AACA,SAAOQ,UAAU,IAAIA,UAAU,KAAKR,aAAa,CAACW,OAAlD;AACD;;AAED,SAASC,cAAT,CAAwBZ,aAAxB,EAAuC;AACrC,MAAIQ,UAAU,GAAGL,aAAa,CAACH,aAAD,CAA9B;AACA,SAAOQ,UAAU,IAAIA,UAAU,KAAKR,aAAa,CAACa,IAAlD;AACD;;AAED,IAAIC,cAAc,GAAG3D,MAAM,CAACD,SAAP,CAAiB4D,cAAtC;;AAEA,SAASC,WAAT,CAAqBxG,KAArB,EAA4B;AAC1B,MAAI0F,KAAK,CAACC,OAAN,CAAc3F,KAAd,KAAwB,OAAOA,KAAP,KAAiB,QAA7C,EAAuD;AACrD,WAAO,IAAP;AACD;;AAED,SACEA,KAAK,IACL,OAAOA,KAAP,KAAiB,QADjB,IAEAyG,MAAM,CAACC,SAAP,CAAiB1G,KAAK,CAAC2G,MAAvB,CAFA,IAGA3G,KAAK,CAAC2G,MAAN,IAAgB,CAHhB,KAIC3G,KAAK,CAAC2G,MAAN,KAAiB,CAAjB,GACG;AACA/D,EAAAA,MAAM,CAAC0D,IAAP,CAAYtG,KAAZ,EAAmB2G,MAAnB,KAA8B,CAFjC,GAGG;AACA;AACA3G,EAAAA,KAAK,CAACuG,cAAN,CAAqBvG,KAAK,CAAC2G,MAAN,GAAe,CAApC,CATJ,CADF;AAYD;;AAED,IAAIpE,GAAG,GAAG,aAAc,UAAUD,UAAV,EAAsB;AAC5C,WAASC,GAAT,CAAavC,KAAb,EAAoB;AAClB,WAAOA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKO,SAA5B,GACHqG,aAAa,EADV,GAEHhD,WAAW,CAAC5D,KAAD,CAAX,GACAA,KAAK,CAAC6G,KAAN,EADA,GAEAC,YAAY,CAAC9G,KAAD,CAJhB;AAKD;;AAED,MAAKsC,UAAL,EAAkBC,GAAG,CAACG,SAAJ,GAAgBJ,UAAhB;AAClBC,EAAAA,GAAG,CAACI,SAAJ,GAAgBC,MAAM,CAACC,MAAP,CAAeP,UAAU,IAAIA,UAAU,CAACK,SAAxC,CAAhB;AACAJ,EAAAA,GAAG,CAACI,SAAJ,CAAcG,WAAd,GAA4BP,GAA5B;;AAEAA,EAAAA,GAAG,CAACI,SAAJ,CAAckE,KAAd,GAAsB,SAASA,KAAT,GAAkB;AACtC,WAAO,IAAP;AACD,GAFD;;AAIAtE,EAAAA,GAAG,CAACI,SAAJ,CAAcgC,QAAd,GAAyB,SAASA,QAAT,GAAqB;AAC5C,WAAO,KAAKoC,UAAL,CAAgB,OAAhB,EAAyB,GAAzB,CAAP;AACD,GAFD;;AAIAxE,EAAAA,GAAG,CAACI,SAAJ,CAAcqE,WAAd,GAA4B,SAASA,WAAT,GAAwB;AAClD,QAAI,CAAC,KAAKC,MAAN,IAAgB,KAAKC,iBAAzB,EAA4C;AAC1C,WAAKD,MAAL,GAAc,KAAKE,QAAL,GAAgBC,OAAhB,EAAd;AACA,WAAK9G,IAAL,GAAY,KAAK2G,MAAL,CAAYN,MAAxB;AACD;;AACD,WAAO,IAAP;AACD,GAND,CArB4C,CA6B5C;;;AAEApE,EAAAA,GAAG,CAACI,SAAJ,CAAcnC,SAAd,GAA0B,SAASA,SAAT,CAAoB6G,EAApB,EAAwBC,OAAxB,EAAiC;AACzD,QAAIC,KAAK,GAAG,KAAKN,MAAjB;;AACA,QAAIM,KAAJ,EAAW;AACT,UAAIjH,IAAI,GAAGiH,KAAK,CAACZ,MAAjB;AACA,UAAIa,CAAC,GAAG,CAAR;;AACA,aAAOA,CAAC,KAAKlH,IAAb,EAAmB;AACjB,YAAImH,KAAK,GAAGF,KAAK,CAACD,OAAO,GAAGhH,IAAI,GAAG,EAAEkH,CAAZ,GAAgBA,CAAC,EAAzB,CAAjB;;AACA,YAAIH,EAAE,CAACI,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,EAAqB,IAArB,CAAF,KAAiC,KAArC,EAA4C;AAC1C;AACD;AACF;;AACD,aAAOD,CAAP;AACD;;AACD,WAAO,KAAKN,iBAAL,CAAuBG,EAAvB,EAA2BC,OAA3B,CAAP;AACD,GAdD,CA/B4C,CA+C5C;;;AAEA/E,EAAAA,GAAG,CAACI,SAAJ,CAAc+E,UAAd,GAA2B,SAASA,UAAT,CAAqBxC,IAArB,EAA2BoC,OAA3B,EAAoC;AAC7D,QAAIC,KAAK,GAAG,KAAKN,MAAjB;;AACA,QAAIM,KAAJ,EAAW;AACT,UAAIjH,IAAI,GAAGiH,KAAK,CAACZ,MAAjB;AACA,UAAIa,CAAC,GAAG,CAAR;AACA,aAAO,IAAI/C,QAAJ,CAAa,YAAY;AAC9B,YAAI+C,CAAC,KAAKlH,IAAV,EAAgB;AACd,iBAAOiF,YAAY,EAAnB;AACD;;AACD,YAAIkC,KAAK,GAAGF,KAAK,CAACD,OAAO,GAAGhH,IAAI,GAAG,EAAEkH,CAAZ,GAAgBA,CAAC,EAAzB,CAAjB;AACA,eAAOvC,aAAa,CAACC,IAAD,EAAOuC,KAAK,CAAC,CAAD,CAAZ,EAAiBA,KAAK,CAAC,CAAD,CAAtB,CAApB;AACD,OANM,CAAP;AAOD;;AACD,WAAO,KAAKE,kBAAL,CAAwBzC,IAAxB,EAA8BoC,OAA9B,CAAP;AACD,GAdD;;AAgBA,SAAO/E,GAAP;AACD,CAlEuB,CAkEtBD,UAlEsB,CAAxB;;;;AAoEA,IAAIG,QAAQ,GAAG,aAAc,UAAUF,GAAV,EAAe;AAC1C,WAASE,QAAT,CAAkBzC,KAAlB,EAAyB;AACvB,WAAOA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKO,SAA5B,GACHqG,aAAa,GAAGgB,UAAhB,EADG,GAEHjG,YAAY,CAAC3B,KAAD,CAAZ,GACA+B,OAAO,CAAC/B,KAAD,CAAP,GACEA,KAAK,CAAC6G,KAAN,EADF,GAEE7G,KAAK,CAAC6H,YAAN,EAHF,GAIAnE,QAAQ,CAAC1D,KAAD,CAAR,GACAA,KAAK,CAAC6G,KAAN,EADA,GAEAiB,iBAAiB,CAAC9H,KAAD,CARrB;AASD;;AAED,MAAKuC,GAAL,EAAWE,QAAQ,CAACC,SAAT,GAAqBH,GAArB;AACXE,EAAAA,QAAQ,CAACE,SAAT,GAAqBC,MAAM,CAACC,MAAP,CAAeN,GAAG,IAAIA,GAAG,CAACI,SAA1B,CAArB;AACAF,EAAAA,QAAQ,CAACE,SAAT,CAAmBG,WAAnB,GAAiCL,QAAjC;;AAEAA,EAAAA,QAAQ,CAACE,SAAT,CAAmBiF,UAAnB,GAAgC,SAASA,UAAT,GAAuB;AACrD,WAAO,IAAP;AACD,GAFD;;AAIA,SAAOnF,QAAP;AACD,CAtB4B,CAsB3BF,GAtB2B,CAA7B;;AAwBA,IAAIS,UAAU,GAAG,aAAc,UAAUT,GAAV,EAAe;AAC5C,WAASS,UAAT,CAAoBhD,KAApB,EAA2B;AACzB,WAAOA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKO,SAA5B,GACHqG,aAAa,EADV,GAEHjF,YAAY,CAAC3B,KAAD,CAAZ,GACA+B,OAAO,CAAC/B,KAAD,CAAP,GACEA,KAAK,CAACmH,QAAN,EADF,GAEEnH,KAAK,CAAC+H,YAAN,EAHF,GAIArE,QAAQ,CAAC1D,KAAD,CAAR,GACAA,KAAK,CAAC6G,KAAN,GAAcM,QAAd,EADA,GAEAa,mBAAmB,CAAChI,KAAD,CARvB;AASD;;AAED,MAAKuC,GAAL,EAAWS,UAAU,CAACN,SAAX,GAAuBH,GAAvB;AACXS,EAAAA,UAAU,CAACL,SAAX,GAAuBC,MAAM,CAACC,MAAP,CAAeN,GAAG,IAAIA,GAAG,CAACI,SAA1B,CAAvB;AACAK,EAAAA,UAAU,CAACL,SAAX,CAAqBG,WAArB,GAAmCE,UAAnC;;AAEAA,EAAAA,UAAU,CAACiF,EAAX,GAAgB,SAASA,EAAT;AAAa;AAAe;AAC1C,WAAOjF,UAAU,CAACkF,SAAD,CAAjB;AACD,GAFD;;AAIAlF,EAAAA,UAAU,CAACL,SAAX,CAAqBoF,YAArB,GAAoC,SAASA,YAAT,GAAyB;AAC3D,WAAO,IAAP;AACD,GAFD;;AAIA/E,EAAAA,UAAU,CAACL,SAAX,CAAqBgC,QAArB,GAAgC,SAASA,QAAT,GAAqB;AACnD,WAAO,KAAKoC,UAAL,CAAgB,OAAhB,EAAyB,GAAzB,CAAP;AACD,GAFD;;AAIA,SAAO/D,UAAP;AACD,CA9B8B,CA8B7BT,GA9B6B,CAA/B;;AAgCA,IAAIW,MAAM,GAAG,aAAc,UAAUX,GAAV,EAAe;AACxC,WAASW,MAAT,CAAgBlD,KAAhB,EAAuB;AACrB,WAAO,CACL2B,YAAY,CAAC3B,KAAD,CAAZ,IAAuB,CAACoC,aAAa,CAACpC,KAAD,CAArC,GAA+CA,KAA/C,GAAuDgD,UAAU,CAAChD,KAAD,CAD5D,EAELmI,QAFK,EAAP;AAGD;;AAED,MAAK5F,GAAL,EAAWW,MAAM,CAACR,SAAP,GAAmBH,GAAnB;AACXW,EAAAA,MAAM,CAACP,SAAP,GAAmBC,MAAM,CAACC,MAAP,CAAeN,GAAG,IAAIA,GAAG,CAACI,SAA1B,CAAnB;AACAO,EAAAA,MAAM,CAACP,SAAP,CAAiBG,WAAjB,GAA+BI,MAA/B;;AAEAA,EAAAA,MAAM,CAAC+E,EAAP,GAAY,SAASA,EAAT;AAAa;AAAe;AACtC,WAAO/E,MAAM,CAACgF,SAAD,CAAb;AACD,GAFD;;AAIAhF,EAAAA,MAAM,CAACP,SAAP,CAAiBwF,QAAjB,GAA4B,SAASA,QAAT,GAAqB;AAC/C,WAAO,IAAP;AACD,GAFD;;AAIA,SAAOjF,MAAP;AACD,CApB0B,CAoBzBX,GApByB,CAA3B;;AAsBAA,GAAG,CAACgB,KAAJ,GAAYA,KAAZ;AACAhB,GAAG,CAACY,KAAJ,GAAYV,QAAZ;AACAF,GAAG,CAACc,GAAJ,GAAUH,MAAV;AACAX,GAAG,CAACa,OAAJ,GAAcJ,UAAd;AAEAT,GAAG,CAACI,SAAJ,CAAcW,aAAd,IAA+B,IAA/B,EAEA;;AAEA,IAAI8E,QAAQ,GAAG,aAAc,UAAUpF,UAAV,EAAsB;AACjD,WAASoF,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,SAAKC,MAAL,GAAcD,KAAd;AACA,SAAK/H,IAAL,GAAY+H,KAAK,CAAC1B,MAAlB;AACD;;AAED,MAAK3D,UAAL,EAAkBoF,QAAQ,CAAC1F,SAAT,GAAqBM,UAArB;AAClBoF,EAAAA,QAAQ,CAACzF,SAAT,GAAqBC,MAAM,CAACC,MAAP,CAAeG,UAAU,IAAIA,UAAU,CAACL,SAAxC,CAArB;AACAyF,EAAAA,QAAQ,CAACzF,SAAT,CAAmBG,WAAnB,GAAiCsF,QAAjC;;AAEAA,EAAAA,QAAQ,CAACzF,SAAT,CAAmB4F,GAAnB,GAAyB,SAASA,GAAT,CAAc5H,KAAd,EAAqB6H,WAArB,EAAkC;AACzD,WAAO,KAAKC,GAAL,CAAS9H,KAAT,IAAkB,KAAK2H,MAAL,CAAY5H,SAAS,CAAC,IAAD,EAAOC,KAAP,CAArB,CAAlB,GAAwD6H,WAA/D;AACD,GAFD;;AAIAJ,EAAAA,QAAQ,CAACzF,SAAT,CAAmBnC,SAAnB,GAA+B,SAASA,SAAT,CAAoB6G,EAApB,EAAwBC,OAAxB,EAAiC;AAC9D,QAAIe,KAAK,GAAG,KAAKC,MAAjB;AACA,QAAIhI,IAAI,GAAG+H,KAAK,CAAC1B,MAAjB;AACA,QAAIa,CAAC,GAAG,CAAR;;AACA,WAAOA,CAAC,KAAKlH,IAAb,EAAmB;AACjB,UAAIoI,EAAE,GAAGpB,OAAO,GAAGhH,IAAI,GAAG,EAAEkH,CAAZ,GAAgBA,CAAC,EAAjC;;AACA,UAAIH,EAAE,CAACgB,KAAK,CAACK,EAAD,CAAN,EAAYA,EAAZ,EAAgB,IAAhB,CAAF,KAA4B,KAAhC,EAAuC;AACrC;AACD;AACF;;AACD,WAAOlB,CAAP;AACD,GAXD;;AAaAY,EAAAA,QAAQ,CAACzF,SAAT,CAAmB+E,UAAnB,GAAgC,SAASA,UAAT,CAAqBxC,IAArB,EAA2BoC,OAA3B,EAAoC;AAClE,QAAIe,KAAK,GAAG,KAAKC,MAAjB;AACA,QAAIhI,IAAI,GAAG+H,KAAK,CAAC1B,MAAjB;AACA,QAAIa,CAAC,GAAG,CAAR;AACA,WAAO,IAAI/C,QAAJ,CAAa,YAAY;AAC9B,UAAI+C,CAAC,KAAKlH,IAAV,EAAgB;AACd,eAAOiF,YAAY,EAAnB;AACD;;AACD,UAAImD,EAAE,GAAGpB,OAAO,GAAGhH,IAAI,GAAG,EAAEkH,CAAZ,GAAgBA,CAAC,EAAjC;AACA,aAAOvC,aAAa,CAACC,IAAD,EAAOwD,EAAP,EAAWL,KAAK,CAACK,EAAD,CAAhB,CAApB;AACD,KANM,CAAP;AAOD,GAXD;;AAaA,SAAON,QAAP;AACD,CAzC4B,CAyC3BpF,UAzC2B,CAA7B;;AA2CA,IAAI2F,SAAS,GAAG,aAAc,UAAUlG,QAAV,EAAoB;AAChD,WAASkG,SAAT,CAAmBC,MAAnB,EAA2B;AACzB,QAAItC,IAAI,GAAG1D,MAAM,CAAC0D,IAAP,CAAYsC,MAAZ,CAAX;AACA,SAAKC,OAAL,GAAeD,MAAf;AACA,SAAKE,KAAL,GAAaxC,IAAb;AACA,SAAKhG,IAAL,GAAYgG,IAAI,CAACK,MAAjB;AACD;;AAED,MAAKlE,QAAL,EAAgBkG,SAAS,CAACjG,SAAV,GAAsBD,QAAtB;AAChBkG,EAAAA,SAAS,CAAChG,SAAV,GAAsBC,MAAM,CAACC,MAAP,CAAeJ,QAAQ,IAAIA,QAAQ,CAACE,SAApC,CAAtB;AACAgG,EAAAA,SAAS,CAAChG,SAAV,CAAoBG,WAApB,GAAkC6F,SAAlC;;AAEAA,EAAAA,SAAS,CAAChG,SAAV,CAAoB4F,GAApB,GAA0B,SAASA,GAAT,CAAcQ,GAAd,EAAmBP,WAAnB,EAAgC;AACxD,QAAIA,WAAW,KAAKjI,SAAhB,IAA6B,CAAC,KAAKkI,GAAL,CAASM,GAAT,CAAlC,EAAiD;AAC/C,aAAOP,WAAP;AACD;;AACD,WAAO,KAAKK,OAAL,CAAaE,GAAb,CAAP;AACD,GALD;;AAOAJ,EAAAA,SAAS,CAAChG,SAAV,CAAoB8F,GAApB,GAA0B,SAASA,GAAT,CAAcM,GAAd,EAAmB;AAC3C,WAAOxC,cAAc,CAACL,IAAf,CAAoB,KAAK2C,OAAzB,EAAkCE,GAAlC,CAAP;AACD,GAFD;;AAIAJ,EAAAA,SAAS,CAAChG,SAAV,CAAoBnC,SAApB,GAAgC,SAASA,SAAT,CAAoB6G,EAApB,EAAwBC,OAAxB,EAAiC;AAC/D,QAAIsB,MAAM,GAAG,KAAKC,OAAlB;AACA,QAAIvC,IAAI,GAAG,KAAKwC,KAAhB;AACA,QAAIxI,IAAI,GAAGgG,IAAI,CAACK,MAAhB;AACA,QAAIa,CAAC,GAAG,CAAR;;AACA,WAAOA,CAAC,KAAKlH,IAAb,EAAmB;AACjB,UAAIyI,GAAG,GAAGzC,IAAI,CAACgB,OAAO,GAAGhH,IAAI,GAAG,EAAEkH,CAAZ,GAAgBA,CAAC,EAAzB,CAAd;;AACA,UAAIH,EAAE,CAACuB,MAAM,CAACG,GAAD,CAAP,EAAcA,GAAd,EAAmB,IAAnB,CAAF,KAA+B,KAAnC,EAA0C;AACxC;AACD;AACF;;AACD,WAAOvB,CAAP;AACD,GAZD;;AAcAmB,EAAAA,SAAS,CAAChG,SAAV,CAAoB+E,UAApB,GAAiC,SAASA,UAAT,CAAqBxC,IAArB,EAA2BoC,OAA3B,EAAoC;AACnE,QAAIsB,MAAM,GAAG,KAAKC,OAAlB;AACA,QAAIvC,IAAI,GAAG,KAAKwC,KAAhB;AACA,QAAIxI,IAAI,GAAGgG,IAAI,CAACK,MAAhB;AACA,QAAIa,CAAC,GAAG,CAAR;AACA,WAAO,IAAI/C,QAAJ,CAAa,YAAY;AAC9B,UAAI+C,CAAC,KAAKlH,IAAV,EAAgB;AACd,eAAOiF,YAAY,EAAnB;AACD;;AACD,UAAIwD,GAAG,GAAGzC,IAAI,CAACgB,OAAO,GAAGhH,IAAI,GAAG,EAAEkH,CAAZ,GAAgBA,CAAC,EAAzB,CAAd;AACA,aAAOvC,aAAa,CAACC,IAAD,EAAO6D,GAAP,EAAYH,MAAM,CAACG,GAAD,CAAlB,CAApB;AACD,KANM,CAAP;AAOD,GAZD;;AAcA,SAAOJ,SAAP;AACD,CApD6B,CAoD5BlG,QApD4B,CAA9B;;AAqDAkG,SAAS,CAAChG,SAAV,CAAoBmB,iBAApB,IAAyC,IAAzC;;AAEA,IAAIkF,aAAa,GAAG,aAAc,UAAUhG,UAAV,EAAsB;AACtD,WAASgG,aAAT,CAAuBC,UAAvB,EAAmC;AACjC,SAAKC,WAAL,GAAmBD,UAAnB;AACA,SAAK3I,IAAL,GAAY2I,UAAU,CAACtC,MAAX,IAAqBsC,UAAU,CAAC3I,IAA5C;AACD;;AAED,MAAK0C,UAAL,EAAkBgG,aAAa,CAACtG,SAAd,GAA0BM,UAA1B;AAClBgG,EAAAA,aAAa,CAACrG,SAAd,GAA0BC,MAAM,CAACC,MAAP,CAAeG,UAAU,IAAIA,UAAU,CAACL,SAAxC,CAA1B;AACAqG,EAAAA,aAAa,CAACrG,SAAd,CAAwBG,WAAxB,GAAsCkG,aAAtC;;AAEAA,EAAAA,aAAa,CAACrG,SAAd,CAAwBuE,iBAAxB,GAA4C,SAASA,iBAAT,CAA4BG,EAA5B,EAAgCC,OAAhC,EAAyC;AACnF,QAAIA,OAAJ,EAAa;AACX,aAAO,KAAKN,WAAL,GAAmBxG,SAAnB,CAA6B6G,EAA7B,EAAiCC,OAAjC,CAAP;AACD;;AACD,QAAI2B,UAAU,GAAG,KAAKC,WAAtB;AACA,QAAI5E,QAAQ,GAAGyB,WAAW,CAACkD,UAAD,CAA1B;AACA,QAAIE,UAAU,GAAG,CAAjB;;AACA,QAAItD,UAAU,CAACvB,QAAD,CAAd,EAA0B;AACxB,UAAI8E,IAAJ;;AACA,aAAO,CAAC,CAACA,IAAI,GAAG9E,QAAQ,CAACI,IAAT,EAAR,EAAyBY,IAAjC,EAAuC;AACrC,YAAI+B,EAAE,CAAC+B,IAAI,CAACpJ,KAAN,EAAamJ,UAAU,EAAvB,EAA2B,IAA3B,CAAF,KAAuC,KAA3C,EAAkD;AAChD;AACD;AACF;AACF;;AACD,WAAOA,UAAP;AACD,GAhBD;;AAkBAH,EAAAA,aAAa,CAACrG,SAAd,CAAwBgF,kBAAxB,GAA6C,SAASA,kBAAT,CAA6BzC,IAA7B,EAAmCoC,OAAnC,EAA4C;AACvF,QAAIA,OAAJ,EAAa;AACX,aAAO,KAAKN,WAAL,GAAmBU,UAAnB,CAA8BxC,IAA9B,EAAoCoC,OAApC,CAAP;AACD;;AACD,QAAI2B,UAAU,GAAG,KAAKC,WAAtB;AACA,QAAI5E,QAAQ,GAAGyB,WAAW,CAACkD,UAAD,CAA1B;;AACA,QAAI,CAACpD,UAAU,CAACvB,QAAD,CAAf,EAA2B;AACzB,aAAO,IAAIG,QAAJ,CAAac,YAAb,CAAP;AACD;;AACD,QAAI4D,UAAU,GAAG,CAAjB;AACA,WAAO,IAAI1E,QAAJ,CAAa,YAAY;AAC9B,UAAI2E,IAAI,GAAG9E,QAAQ,CAACI,IAAT,EAAX;AACA,aAAO0E,IAAI,CAAC9D,IAAL,GAAY8D,IAAZ,GAAmBnE,aAAa,CAACC,IAAD,EAAOiE,UAAU,EAAjB,EAAqBC,IAAI,CAACpJ,KAA1B,CAAvC;AACD,KAHM,CAAP;AAID,GAdD;;AAgBA,SAAOgJ,aAAP;AACD,CA7CiC,CA6ChChG,UA7CgC,CAAlC,EA+CA;;;AAEA,IAAIqG,SAAJ;;AAEA,SAASzC,aAAT,GAAyB;AACvB,SAAOyC,SAAS,KAAKA,SAAS,GAAG,IAAIjB,QAAJ,CAAa,EAAb,CAAjB,CAAhB;AACD;;AAED,SAASN,iBAAT,CAA2B9H,KAA3B,EAAkC;AAChC,MAAIsJ,GAAG,GAAGC,wBAAwB,CAACvJ,KAAD,CAAlC;;AACA,MAAIsJ,GAAJ,EAAS;AACP,WAAOA,GAAG,CAACzB,YAAJ,EAAP;AACD;;AACD,MAAI,OAAO7H,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAO,IAAI2I,SAAJ,CAAc3I,KAAd,CAAP;AACD;;AACD,QAAM,IAAIwJ,SAAJ,CACJ,6EACExJ,KAFE,CAAN;AAID;;AAED,SAASgI,mBAAT,CAA6BhI,KAA7B,EAAoC;AAClC,MAAIsJ,GAAG,GAAGC,wBAAwB,CAACvJ,KAAD,CAAlC;;AACA,MAAIsJ,GAAJ,EAAS;AACP,WAAOA,GAAP;AACD;;AACD,QAAM,IAAIE,SAAJ,CACJ,oDAAoDxJ,KADhD,CAAN;AAGD;;AAED,SAAS8G,YAAT,CAAsB9G,KAAtB,EAA6B;AAC3B,MAAIsJ,GAAG,GAAGC,wBAAwB,CAACvJ,KAAD,CAAlC;;AACA,MAAIsJ,GAAJ,EAAS;AACP,WAAOnD,iBAAiB,CAACnG,KAAD,CAAjB,GACHsJ,GAAG,CAACzB,YAAJ,EADG,GAEHxB,cAAc,CAACrG,KAAD,CAAd,GACAsJ,GAAG,CAACnB,QAAJ,EADA,GAEAmB,GAJJ;AAKD;;AACD,MAAI,OAAOtJ,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAO,IAAI2I,SAAJ,CAAc3I,KAAd,CAAP;AACD;;AACD,QAAM,IAAIwJ,SAAJ,CACJ,qEAAqExJ,KADjE,CAAN;AAGD;;AAED,SAASuJ,wBAAT,CAAkCvJ,KAAlC,EAAyC;AACvC,SAAOwG,WAAW,CAACxG,KAAD,CAAX,GACH,IAAIoI,QAAJ,CAAapI,KAAb,CADG,GAEHwF,WAAW,CAACxF,KAAD,CAAX,GACA,IAAIgJ,aAAJ,CAAkBhJ,KAAlB,CADA,GAEAO,SAJJ;AAKD;;AAED,IAAIkJ,aAAa,GAAG,uBAApB;;AAEA,SAASC,KAAT,CAAeC,QAAf,EAAyB;AACvB,SAAO9H,OAAO,CAAC8H,QAAQ,IAAIA,QAAQ,CAACF,aAAD,CAArB,CAAd;AACD;;AAED,SAASG,YAAT,CAAsBC,eAAtB,EAAuC;AACrC,SAAOH,KAAK,CAACG,eAAD,CAAL,IAA0B9F,SAAS,CAAC8F,eAAD,CAA1C;AACD;;AAED,SAASC,aAAT,CAAuBC,UAAvB,EAAmC;AACjC,SAAOlI,OAAO,CACZkI,UAAU,IACR,OAAOA,UAAU,CAACC,MAAlB,KAA6B,UAD/B,IAEE,OAAOD,UAAU,CAACE,QAAlB,KAA+B,UAHrB,CAAd;AAKD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,EAAT,CAAYC,MAAZ,EAAoBC,MAApB,EAA4B;AAC1B,MAAID,MAAM,KAAKC,MAAX,IAAsBD,MAAM,KAAKA,MAAX,IAAqBC,MAAM,KAAKA,MAA1D,EAAmE;AACjE,WAAO,IAAP;AACD;;AACD,MAAI,CAACD,MAAD,IAAW,CAACC,MAAhB,EAAwB;AACtB,WAAO,KAAP;AACD;;AACD,MACE,OAAOD,MAAM,CAACE,OAAd,KAA0B,UAA1B,IACA,OAAOD,MAAM,CAACC,OAAd,KAA0B,UAF5B,EAGE;AACAF,IAAAA,MAAM,GAAGA,MAAM,CAACE,OAAP,EAAT;AACAD,IAAAA,MAAM,GAAGA,MAAM,CAACC,OAAP,EAAT;;AACA,QAAIF,MAAM,KAAKC,MAAX,IAAsBD,MAAM,KAAKA,MAAX,IAAqBC,MAAM,KAAKA,MAA1D,EAAmE;AACjE,aAAO,IAAP;AACD;;AACD,QAAI,CAACD,MAAD,IAAW,CAACC,MAAhB,EAAwB;AACtB,aAAO,KAAP;AACD;AACF;;AACD,SAAO,CAAC,EACNN,aAAa,CAACK,MAAD,CAAb,IACAL,aAAa,CAACM,MAAD,CADb,IAEAD,MAAM,CAACH,MAAP,CAAcI,MAAd,CAHM,CAAR;AAKD;;AAED,IAAIE,IAAI,GACN,OAAO/I,IAAI,CAAC+I,IAAZ,KAAqB,UAArB,IAAmC/I,IAAI,CAAC+I,IAAL,CAAU,UAAV,EAAsB,CAAtB,MAA6B,CAAC,CAAjE,GACI/I,IAAI,CAAC+I,IADT,GAEI,SAASA,IAAT,CAAcC,CAAd,EAAiBC,CAAjB,EAAoB;AAClBD,EAAAA,CAAC,IAAI,CAAL,CADkB,CACV;;AACRC,EAAAA,CAAC,IAAI,CAAL,CAFkB,CAEV;;AACR,MAAIC,CAAC,GAAGF,CAAC,GAAG,MAAZ;AACA,MAAIG,CAAC,GAAGF,CAAC,GAAG,MAAZ,CAJkB,CAKlB;;AACA,SAAQC,CAAC,GAAGC,CAAJ,IAAW,CAACH,CAAC,KAAK,EAAP,IAAaG,CAAb,GAAiBD,CAAC,IAAID,CAAC,KAAK,EAAV,CAAnB,IAAqC,EAAtC,KAA8C,CAAvD,CAAD,GAA8D,CAArE,CANkB,CAMsD;AACzE,CAVP,EAYA;AACA;AACA;AACA;;AACA,SAASG,GAAT,CAAaC,GAAb,EAAkB;AAChB,SAASA,GAAG,KAAK,CAAT,GAAc,UAAf,GAA8BA,GAAG,GAAG,UAA3C;AACD;;AAED,IAAIC,cAAc,GAAGjI,MAAM,CAACD,SAAP,CAAiB0H,OAAtC;;AAEA,SAASS,IAAT,CAAcC,CAAd,EAAiB;AACf,MAAIA,CAAC,IAAI,IAAT,EAAe;AACb,WAAOC,WAAW,CAACD,CAAD,CAAlB;AACD;;AAED,MAAI,OAAOA,CAAC,CAACd,QAAT,KAAsB,UAA1B,EAAsC;AACpC;AACA,WAAOU,GAAG,CAACI,CAAC,CAACd,QAAF,CAAWc,CAAX,CAAD,CAAV;AACD;;AAED,MAAI3F,CAAC,GAAGiF,OAAO,CAACU,CAAD,CAAf;;AAEA,MAAI3F,CAAC,IAAI,IAAT,EAAe;AACb,WAAO4F,WAAW,CAAC5F,CAAD,CAAlB;AACD;;AAED,UAAQ,OAAOA,CAAf;AACE,SAAK,SAAL;AACE;AACA;AACA;AACA,aAAOA,CAAC,GAAG,UAAH,GAAgB,UAAxB;;AACF,SAAK,QAAL;AACE,aAAO6F,UAAU,CAAC7F,CAAD,CAAjB;;AACF,SAAK,QAAL;AACE,aAAOA,CAAC,CAACuB,MAAF,GAAWuE,4BAAX,GACHC,gBAAgB,CAAC/F,CAAD,CADb,GAEHgG,UAAU,CAAChG,CAAD,CAFd;;AAGF,SAAK,QAAL;AACA,SAAK,UAAL;AACE,aAAOiG,SAAS,CAACjG,CAAD,CAAhB;;AACF,SAAK,QAAL;AACE,aAAOkG,UAAU,CAAClG,CAAD,CAAjB;;AACF;AACE,UAAI,OAAOA,CAAC,CAACT,QAAT,KAAsB,UAA1B,EAAsC;AACpC,eAAOyG,UAAU,CAAChG,CAAC,CAACT,QAAF,EAAD,CAAjB;AACD;;AACD,YAAM,IAAI4G,KAAJ,CAAU,gBAAgB,OAAOnG,CAAvB,GAA2B,oBAArC,CAAN;AArBJ;AAuBD;;AAED,SAAS4F,WAAT,CAAqBQ,OAArB,EAA8B;AAC5B,SAAOA,OAAO,KAAK,IAAZ,GAAmB,UAAnB;AAAgC;AAAgB,YAAvD;AACD,EAED;;;AACA,SAASP,UAAT,CAAoBQ,CAApB,EAAuB;AACrB,MAAIA,CAAC,KAAKA,CAAN,IAAWA,CAAC,KAAKnK,QAArB,EAA+B;AAC7B,WAAO,CAAP;AACD;;AACD,MAAIwJ,IAAI,GAAGW,CAAC,GAAG,CAAf;;AACA,MAAIX,IAAI,KAAKW,CAAb,EAAgB;AACdX,IAAAA,IAAI,IAAIW,CAAC,GAAG,UAAZ;AACD;;AACD,SAAOA,CAAC,GAAG,UAAX,EAAuB;AACrBA,IAAAA,CAAC,IAAI,UAAL;AACAX,IAAAA,IAAI,IAAIW,CAAR;AACD;;AACD,SAAOd,GAAG,CAACG,IAAD,CAAV;AACD;;AAED,SAASK,gBAAT,CAA0BO,MAA1B,EAAkC;AAChC,MAAIC,MAAM,GAAGC,eAAe,CAACF,MAAD,CAA5B;;AACA,MAAIC,MAAM,KAAKpL,SAAf,EAA0B;AACxBoL,IAAAA,MAAM,GAAGP,UAAU,CAACM,MAAD,CAAnB;;AACA,QAAIG,sBAAsB,KAAKC,0BAA/B,EAA2D;AACzDD,MAAAA,sBAAsB,GAAG,CAAzB;AACAD,MAAAA,eAAe,GAAG,EAAlB;AACD;;AACDC,IAAAA,sBAAsB;AACtBD,IAAAA,eAAe,CAACF,MAAD,CAAf,GAA0BC,MAA1B;AACD;;AACD,SAAOA,MAAP;AACD,EAED;;;AACA,SAASP,UAAT,CAAoBM,MAApB,EAA4B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,MAAIC,MAAM,GAAG,CAAb;;AACA,OAAK,IAAIjD,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGgD,MAAM,CAAC/E,MAA7B,EAAqC+B,EAAE,EAAvC,EAA2C;AACzCiD,IAAAA,MAAM,GAAI,KAAKA,MAAL,GAAcD,MAAM,CAACK,UAAP,CAAkBrD,EAAlB,CAAf,GAAwC,CAAjD;AACD;;AACD,SAAOiC,GAAG,CAACgB,MAAD,CAAV;AACD;;AAED,SAASL,UAAT,CAAoBU,GAApB,EAAyB;AACvB,MAAIL,MAAM,GAAGM,SAAS,CAACD,GAAD,CAAtB;;AACA,MAAIL,MAAM,KAAKpL,SAAf,EAA0B;AACxB,WAAOoL,MAAP;AACD;;AAEDA,EAAAA,MAAM,GAAGO,QAAQ,EAAjB;AAEAD,EAAAA,SAAS,CAACD,GAAD,CAAT,GAAiBL,MAAjB;AAEA,SAAOA,MAAP;AACD;;AAED,SAASN,SAAT,CAAmBc,GAAnB,EAAwB;AACtB,MAAIR,MAAJ;;AACA,MAAIS,YAAJ,EAAkB;AAChBT,IAAAA,MAAM,GAAGU,OAAO,CAAC9D,GAAR,CAAY4D,GAAZ,CAAT;;AACA,QAAIR,MAAM,KAAKpL,SAAf,EAA0B;AACxB,aAAOoL,MAAP;AACD;AACF;;AAEDA,EAAAA,MAAM,GAAGQ,GAAG,CAACG,YAAD,CAAZ;;AACA,MAAIX,MAAM,KAAKpL,SAAf,EAA0B;AACxB,WAAOoL,MAAP;AACD;;AAED,MAAI,CAACY,iBAAL,EAAwB;AACtBZ,IAAAA,MAAM,GAAGQ,GAAG,CAACK,oBAAJ,IAA4BL,GAAG,CAACK,oBAAJ,CAAyBF,YAAzB,CAArC;;AACA,QAAIX,MAAM,KAAKpL,SAAf,EAA0B;AACxB,aAAOoL,MAAP;AACD;;AAEDA,IAAAA,MAAM,GAAGc,aAAa,CAACN,GAAD,CAAtB;;AACA,QAAIR,MAAM,KAAKpL,SAAf,EAA0B;AACxB,aAAOoL,MAAP;AACD;AACF;;AAEDA,EAAAA,MAAM,GAAGO,QAAQ,EAAjB;;AAEA,MAAIE,YAAJ,EAAkB;AAChBC,IAAAA,OAAO,CAACK,GAAR,CAAYP,GAAZ,EAAiBR,MAAjB;AACD,GAFD,MAEO,IAAIgB,YAAY,KAAKpM,SAAjB,IAA8BoM,YAAY,CAACR,GAAD,CAAZ,KAAsB,KAAxD,EAA+D;AACpE,UAAM,IAAIZ,KAAJ,CAAU,iDAAV,CAAN;AACD,GAFM,MAEA,IAAIgB,iBAAJ,EAAuB;AAC5B3J,IAAAA,MAAM,CAACgK,cAAP,CAAsBT,GAAtB,EAA2BG,YAA3B,EAAyC;AACvCO,MAAAA,UAAU,EAAE,KAD2B;AAEvCC,MAAAA,YAAY,EAAE,KAFyB;AAGvCC,MAAAA,QAAQ,EAAE,KAH6B;AAIvC/M,MAAAA,KAAK,EAAE2L;AAJgC,KAAzC;AAMD,GAPM,MAOA,IACLQ,GAAG,CAACK,oBAAJ,KAA6BjM,SAA7B,IACA4L,GAAG,CAACK,oBAAJ,KAA6BL,GAAG,CAACrJ,WAAJ,CAAgBH,SAAhB,CAA0B6J,oBAFlD,EAGL;AACA;AACA;AACA;AACA;AACAL,IAAAA,GAAG,CAACK,oBAAJ,GAA2B,YAAY;AACrC,aAAO,KAAK1J,WAAL,CAAiBH,SAAjB,CAA2B6J,oBAA3B,CAAgDQ,KAAhD,CACL,IADK,EAEL9E,SAFK,CAAP;AAID,KALD;;AAMAiE,IAAAA,GAAG,CAACK,oBAAJ,CAAyBF,YAAzB,IAAyCX,MAAzC;AACD,GAfM,MAeA,IAAIQ,GAAG,CAACc,QAAJ,KAAiB1M,SAArB,EAAgC;AACrC;AACA;AACA;AACA;AACA4L,IAAAA,GAAG,CAACG,YAAD,CAAH,GAAoBX,MAApB;AACD,GANM,MAMA;AACL,UAAM,IAAIJ,KAAJ,CAAU,oDAAV,CAAN;AACD;;AAED,SAAOI,MAAP;AACD,EAED;;;AACA,IAAIgB,YAAY,GAAG/J,MAAM,CAAC+J,YAA1B,EAEA;;AACA,IAAIJ,iBAAiB,GAAI,YAAY;AACnC,MAAI;AACF3J,IAAAA,MAAM,CAACgK,cAAP,CAAsB,EAAtB,EAA0B,GAA1B,EAA+B,EAA/B;AACA,WAAO,IAAP;AACD,GAHD,CAGE,OAAOM,CAAP,EAAU;AACV,WAAO,KAAP;AACD;AACF,CAPuB,EAAxB,EASA;AACA;;;AACA,SAAST,aAAT,CAAuBU,IAAvB,EAA6B;AAC3B,MAAIA,IAAI,IAAIA,IAAI,CAACF,QAAL,GAAgB,CAA5B,EAA+B;AAC7B,YAAQE,IAAI,CAACF,QAAb;AACE,WAAK,CAAL;AAAQ;AACN,eAAOE,IAAI,CAACC,QAAZ;;AACF,WAAK,CAAL;AAAQ;AACN,eAAOD,IAAI,CAACE,eAAL,IAAwBF,IAAI,CAACE,eAAL,CAAqBD,QAApD;AAJJ;AAMD;AACF;;AAED,SAAS/C,OAAT,CAAiB8B,GAAjB,EAAsB;AACpB,SAAOA,GAAG,CAAC9B,OAAJ,KAAgBQ,cAAhB,IAAkC,OAAOsB,GAAG,CAAC9B,OAAX,KAAuB,UAAzD,GACH8B,GAAG,CAAC9B,OAAJ,CAAY8B,GAAZ,CADG,GAEHA,GAFJ;AAGD;;AAED,SAASD,QAAT,GAAoB;AAClB,MAAIA,QAAQ,GAAG,EAAEoB,WAAjB;;AACA,MAAIA,WAAW,GAAG,UAAlB,EAA8B;AAC5BA,IAAAA,WAAW,GAAG,CAAd;AACD;;AACD,SAAOpB,QAAP;AACD,EAED;;;AACA,IAAIE,YAAY,GAAG,OAAOmB,OAAP,KAAmB,UAAtC;AACA,IAAIlB,OAAJ;;AACA,IAAID,YAAJ,EAAkB;AAChBC,EAAAA,OAAO,GAAG,IAAIkB,OAAJ,EAAV;AACD;;AAED,IAAItB,SAAS,GAAGrJ,MAAM,CAACC,MAAP,CAAc,IAAd,CAAhB;AAEA,IAAIyK,WAAW,GAAG,CAAlB;AAEA,IAAIhB,YAAY,GAAG,mBAAnB;;AACA,IAAI,OAAOjI,MAAP,KAAkB,UAAtB,EAAkC;AAChCiI,EAAAA,YAAY,GAAGjI,MAAM,CAACiI,YAAD,CAArB;AACD;;AAED,IAAIpB,4BAA4B,GAAG,EAAnC;AACA,IAAIY,0BAA0B,GAAG,GAAjC;AACA,IAAID,sBAAsB,GAAG,CAA7B;AACA,IAAID,eAAe,GAAG,EAAtB;;AAEA,IAAI4B,eAAe,GAAG,aAAc,UAAU/K,QAAV,EAAoB;AACtD,WAAS+K,eAAT,CAAyBC,OAAzB,EAAkCC,OAAlC,EAA2C;AACzC,SAAKC,KAAL,GAAaF,OAAb;AACA,SAAKG,QAAL,GAAgBF,OAAhB;AACA,SAAKpN,IAAL,GAAYmN,OAAO,CAACnN,IAApB;AACD;;AAED,MAAKmC,QAAL,EAAgB+K,eAAe,CAAC9K,SAAhB,GAA4BD,QAA5B;AAChB+K,EAAAA,eAAe,CAAC7K,SAAhB,GAA4BC,MAAM,CAACC,MAAP,CAAeJ,QAAQ,IAAIA,QAAQ,CAACE,SAApC,CAA5B;AACA6K,EAAAA,eAAe,CAAC7K,SAAhB,CAA0BG,WAA1B,GAAwC0K,eAAxC;;AAEAA,EAAAA,eAAe,CAAC7K,SAAhB,CAA0B4F,GAA1B,GAAgC,SAASA,GAAT,CAAcQ,GAAd,EAAmBP,WAAnB,EAAgC;AAC9D,WAAO,KAAKmF,KAAL,CAAWpF,GAAX,CAAeQ,GAAf,EAAoBP,WAApB,CAAP;AACD,GAFD;;AAIAgF,EAAAA,eAAe,CAAC7K,SAAhB,CAA0B8F,GAA1B,GAAgC,SAASA,GAAT,CAAcM,GAAd,EAAmB;AACjD,WAAO,KAAK4E,KAAL,CAAWlF,GAAX,CAAeM,GAAf,CAAP;AACD,GAFD;;AAIAyE,EAAAA,eAAe,CAAC7K,SAAhB,CAA0BkL,QAA1B,GAAqC,SAASA,QAAT,GAAqB;AACxD,WAAO,KAAKF,KAAL,CAAWE,QAAX,EAAP;AACD,GAFD;;AAIAL,EAAAA,eAAe,CAAC7K,SAAhB,CAA0B2E,OAA1B,GAAoC,SAASA,OAAT,GAAoB;AACtD,QAAIwG,QAAQ,GAAG,IAAf;AAEA,QAAIC,gBAAgB,GAAGC,cAAc,CAAC,IAAD,EAAO,IAAP,CAArC;;AACA,QAAI,CAAC,KAAKJ,QAAV,EAAoB;AAClBG,MAAAA,gBAAgB,CAACF,QAAjB,GAA4B,YAAY;AAAE,eAAOC,QAAQ,CAACH,KAAT,CAAe9G,KAAf,GAAuBS,OAAvB,EAAP;AAA0C,OAApF;AACD;;AACD,WAAOyG,gBAAP;AACD,GARD;;AAUAP,EAAAA,eAAe,CAAC7K,SAAhB,CAA0BsL,GAA1B,GAAgC,SAASA,GAAT,CAAcC,MAAd,EAAsBC,OAAtB,EAA+B;AAC7D,QAAIL,QAAQ,GAAG,IAAf;AAEA,QAAIM,cAAc,GAAGC,UAAU,CAAC,IAAD,EAAOH,MAAP,EAAeC,OAAf,CAA/B;;AACA,QAAI,CAAC,KAAKP,QAAV,EAAoB;AAClBQ,MAAAA,cAAc,CAACP,QAAf,GAA0B,YAAY;AAAE,eAAOC,QAAQ,CAACH,KAAT,CAAe9G,KAAf,GAAuBoH,GAAvB,CAA2BC,MAA3B,EAAmCC,OAAnC,CAAP;AAAqD,OAA7F;AACD;;AACD,WAAOC,cAAP;AACD,GARD;;AAUAZ,EAAAA,eAAe,CAAC7K,SAAhB,CAA0BnC,SAA1B,GAAsC,SAASA,SAAT,CAAoB6G,EAApB,EAAwBC,OAAxB,EAAiC;AACrE,QAAIwG,QAAQ,GAAG,IAAf;AAEA,WAAO,KAAKH,KAAL,CAAWnN,SAAX,CAAqB,UAAU4E,CAAV,EAAaD,CAAb,EAAgB;AAAE,aAAOkC,EAAE,CAACjC,CAAD,EAAID,CAAJ,EAAO2I,QAAP,CAAT;AAA4B,KAAnE,EAAqExG,OAArE,CAAP;AACD,GAJD;;AAMAkG,EAAAA,eAAe,CAAC7K,SAAhB,CAA0B+E,UAA1B,GAAuC,SAASA,UAAT,CAAqBxC,IAArB,EAA2BoC,OAA3B,EAAoC;AACzE,WAAO,KAAKqG,KAAL,CAAWjG,UAAX,CAAsBxC,IAAtB,EAA4BoC,OAA5B,CAAP;AACD,GAFD;;AAIA,SAAOkG,eAAP;AACD,CAtDmC,CAsDlC/K,QAtDkC,CAApC;;AAuDA+K,eAAe,CAAC7K,SAAhB,CAA0BmB,iBAA1B,IAA+C,IAA/C;;AAEA,IAAIwK,iBAAiB,GAAG,aAAc,UAAUtL,UAAV,EAAsB;AAC1D,WAASsL,iBAAT,CAA2BjO,IAA3B,EAAiC;AAC/B,SAAKsN,KAAL,GAAatN,IAAb;AACA,SAAKC,IAAL,GAAYD,IAAI,CAACC,IAAjB;AACD;;AAED,MAAK0C,UAAL,EAAkBsL,iBAAiB,CAAC5L,SAAlB,GAA8BM,UAA9B;AAClBsL,EAAAA,iBAAiB,CAAC3L,SAAlB,GAA8BC,MAAM,CAACC,MAAP,CAAeG,UAAU,IAAIA,UAAU,CAACL,SAAxC,CAA9B;AACA2L,EAAAA,iBAAiB,CAAC3L,SAAlB,CAA4BG,WAA5B,GAA0CwL,iBAA1C;;AAEAA,EAAAA,iBAAiB,CAAC3L,SAAlB,CAA4B4L,QAA5B,GAAuC,SAASA,QAAT,CAAmBvO,KAAnB,EAA0B;AAC/D,WAAO,KAAK2N,KAAL,CAAWY,QAAX,CAAoBvO,KAApB,CAAP;AACD,GAFD;;AAIAsO,EAAAA,iBAAiB,CAAC3L,SAAlB,CAA4BnC,SAA5B,GAAwC,SAASA,SAAT,CAAoB6G,EAApB,EAAwBC,OAAxB,EAAiC;AACvE,QAAIwG,QAAQ,GAAG,IAAf;AAEA,QAAItG,CAAC,GAAG,CAAR;AACAF,IAAAA,OAAO,IAAIlH,UAAU,CAAC,IAAD,CAArB;AACA,WAAO,KAAKuN,KAAL,CAAWnN,SAAX,CACL,UAAU4E,CAAV,EAAa;AAAE,aAAOiC,EAAE,CAACjC,CAAD,EAAIkC,OAAO,GAAGwG,QAAQ,CAACxN,IAAT,GAAgB,EAAEkH,CAArB,GAAyBA,CAAC,EAArC,EAAyCsG,QAAzC,CAAT;AAA8D,KADxE,EAELxG,OAFK,CAAP;AAID,GATD;;AAWAgH,EAAAA,iBAAiB,CAAC3L,SAAlB,CAA4B+E,UAA5B,GAAyC,SAASA,UAAT,CAAqBxC,IAArB,EAA2BoC,OAA3B,EAAoC;AAC3E,QAAIwG,QAAQ,GAAG,IAAf;;AAEA,QAAIxJ,QAAQ,GAAG,KAAKqJ,KAAL,CAAWjG,UAAX,CAAsBxD,cAAtB,EAAsCoD,OAAtC,CAAf;;AACA,QAAIE,CAAC,GAAG,CAAR;AACAF,IAAAA,OAAO,IAAIlH,UAAU,CAAC,IAAD,CAArB;AACA,WAAO,IAAIqE,QAAJ,CAAa,YAAY;AAC9B,UAAI2E,IAAI,GAAG9E,QAAQ,CAACI,IAAT,EAAX;AACA,aAAO0E,IAAI,CAAC9D,IAAL,GACH8D,IADG,GAEHnE,aAAa,CACXC,IADW,EAEXoC,OAAO,GAAGwG,QAAQ,CAACxN,IAAT,GAAgB,EAAEkH,CAArB,GAAyBA,CAAC,EAFtB,EAGX4B,IAAI,CAACpJ,KAHM,EAIXoJ,IAJW,CAFjB;AAQD,KAVM,CAAP;AAWD,GAjBD;;AAmBA,SAAOkF,iBAAP;AACD,CA7CqC,CA6CpCtL,UA7CoC,CAAtC;;AA+CA,IAAIwL,aAAa,GAAG,aAAc,UAAUtL,MAAV,EAAkB;AAClD,WAASsL,aAAT,CAAuBnO,IAAvB,EAA6B;AAC3B,SAAKsN,KAAL,GAAatN,IAAb;AACA,SAAKC,IAAL,GAAYD,IAAI,CAACC,IAAjB;AACD;;AAED,MAAK4C,MAAL,EAAcsL,aAAa,CAAC9L,SAAd,GAA0BQ,MAA1B;AACdsL,EAAAA,aAAa,CAAC7L,SAAd,GAA0BC,MAAM,CAACC,MAAP,CAAeK,MAAM,IAAIA,MAAM,CAACP,SAAhC,CAA1B;AACA6L,EAAAA,aAAa,CAAC7L,SAAd,CAAwBG,WAAxB,GAAsC0L,aAAtC;;AAEAA,EAAAA,aAAa,CAAC7L,SAAd,CAAwB8F,GAAxB,GAA8B,SAASA,GAAT,CAAcM,GAAd,EAAmB;AAC/C,WAAO,KAAK4E,KAAL,CAAWY,QAAX,CAAoBxF,GAApB,CAAP;AACD,GAFD;;AAIAyF,EAAAA,aAAa,CAAC7L,SAAd,CAAwBnC,SAAxB,GAAoC,SAASA,SAAT,CAAoB6G,EAApB,EAAwBC,OAAxB,EAAiC;AACnE,QAAIwG,QAAQ,GAAG,IAAf;AAEA,WAAO,KAAKH,KAAL,CAAWnN,SAAX,CAAqB,UAAU4E,CAAV,EAAa;AAAE,aAAOiC,EAAE,CAACjC,CAAD,EAAIA,CAAJ,EAAO0I,QAAP,CAAT;AAA4B,KAAhE,EAAkExG,OAAlE,CAAP;AACD,GAJD;;AAMAkH,EAAAA,aAAa,CAAC7L,SAAd,CAAwB+E,UAAxB,GAAqC,SAASA,UAAT,CAAqBxC,IAArB,EAA2BoC,OAA3B,EAAoC;AACvE,QAAIhD,QAAQ,GAAG,KAAKqJ,KAAL,CAAWjG,UAAX,CAAsBxD,cAAtB,EAAsCoD,OAAtC,CAAf;;AACA,WAAO,IAAI7C,QAAJ,CAAa,YAAY;AAC9B,UAAI2E,IAAI,GAAG9E,QAAQ,CAACI,IAAT,EAAX;AACA,aAAO0E,IAAI,CAAC9D,IAAL,GACH8D,IADG,GAEHnE,aAAa,CAACC,IAAD,EAAOkE,IAAI,CAACpJ,KAAZ,EAAmBoJ,IAAI,CAACpJ,KAAxB,EAA+BoJ,IAA/B,CAFjB;AAGD,KALM,CAAP;AAMD,GARD;;AAUA,SAAOoF,aAAP;AACD,CA/BiC,CA+BhCtL,MA/BgC,CAAlC;;AAiCA,IAAIuL,mBAAmB,GAAG,aAAc,UAAUhM,QAAV,EAAoB;AAC1D,WAASgM,mBAAT,CAA6BrI,OAA7B,EAAsC;AACpC,SAAKuH,KAAL,GAAavH,OAAb;AACA,SAAK9F,IAAL,GAAY8F,OAAO,CAAC9F,IAApB;AACD;;AAED,MAAKmC,QAAL,EAAgBgM,mBAAmB,CAAC/L,SAApB,GAAgCD,QAAhC;AAChBgM,EAAAA,mBAAmB,CAAC9L,SAApB,GAAgCC,MAAM,CAACC,MAAP,CAAeJ,QAAQ,IAAIA,QAAQ,CAACE,SAApC,CAAhC;AACA8L,EAAAA,mBAAmB,CAAC9L,SAApB,CAA8BG,WAA9B,GAA4C2L,mBAA5C;;AAEAA,EAAAA,mBAAmB,CAAC9L,SAApB,CAA8BwE,QAA9B,GAAyC,SAASA,QAAT,GAAqB;AAC5D,WAAO,KAAKwG,KAAL,CAAW9G,KAAX,EAAP;AACD,GAFD;;AAIA4H,EAAAA,mBAAmB,CAAC9L,SAApB,CAA8BnC,SAA9B,GAA0C,SAASA,SAAT,CAAoB6G,EAApB,EAAwBC,OAAxB,EAAiC;AACzE,QAAIwG,QAAQ,GAAG,IAAf;AAEA,WAAO,KAAKH,KAAL,CAAWnN,SAAX,CAAqB,UAAUiH,KAAV,EAAiB;AAC3C;AACA;AACA,UAAIA,KAAJ,EAAW;AACTiH,QAAAA,aAAa,CAACjH,KAAD,CAAb;AACA,YAAIkH,iBAAiB,GAAGhN,YAAY,CAAC8F,KAAD,CAApC;AACA,eAAOJ,EAAE,CACPsH,iBAAiB,GAAGlH,KAAK,CAACc,GAAN,CAAU,CAAV,CAAH,GAAkBd,KAAK,CAAC,CAAD,CADjC,EAEPkH,iBAAiB,GAAGlH,KAAK,CAACc,GAAN,CAAU,CAAV,CAAH,GAAkBd,KAAK,CAAC,CAAD,CAFjC,EAGPqG,QAHO,CAAT;AAKD;AACF,KAZM,EAYJxG,OAZI,CAAP;AAaD,GAhBD;;AAkBAmH,EAAAA,mBAAmB,CAAC9L,SAApB,CAA8B+E,UAA9B,GAA2C,SAASA,UAAT,CAAqBxC,IAArB,EAA2BoC,OAA3B,EAAoC;AAC7E,QAAIhD,QAAQ,GAAG,KAAKqJ,KAAL,CAAWjG,UAAX,CAAsBxD,cAAtB,EAAsCoD,OAAtC,CAAf;;AACA,WAAO,IAAI7C,QAAJ,CAAa,YAAY;AAC9B,aAAO,IAAP,EAAa;AACX,YAAI2E,IAAI,GAAG9E,QAAQ,CAACI,IAAT,EAAX;;AACA,YAAI0E,IAAI,CAAC9D,IAAT,EAAe;AACb,iBAAO8D,IAAP;AACD;;AACD,YAAI3B,KAAK,GAAG2B,IAAI,CAACpJ,KAAjB,CALW,CAMX;AACA;;AACA,YAAIyH,KAAJ,EAAW;AACTiH,UAAAA,aAAa,CAACjH,KAAD,CAAb;AACA,cAAIkH,iBAAiB,GAAGhN,YAAY,CAAC8F,KAAD,CAApC;AACA,iBAAOxC,aAAa,CAClBC,IADkB,EAElByJ,iBAAiB,GAAGlH,KAAK,CAACc,GAAN,CAAU,CAAV,CAAH,GAAkBd,KAAK,CAAC,CAAD,CAFtB,EAGlBkH,iBAAiB,GAAGlH,KAAK,CAACc,GAAN,CAAU,CAAV,CAAH,GAAkBd,KAAK,CAAC,CAAD,CAHtB,EAIlB2B,IAJkB,CAApB;AAMD;AACF;AACF,KApBM,CAAP;AAqBD,GAvBD;;AAyBA,SAAOqF,mBAAP;AACD,CA1DuC,CA0DtChM,QA1DsC,CAAxC;;AA4DA6L,iBAAiB,CAAC3L,SAAlB,CAA4BqE,WAA5B,GACEwG,eAAe,CAAC7K,SAAhB,CAA0BqE,WAA1B,GACAwH,aAAa,CAAC7L,SAAd,CAAwBqE,WAAxB,GACAyH,mBAAmB,CAAC9L,SAApB,CAA8BqE,WAA9B,GACE4H,kBAJJ;;AAMA,SAASC,WAAT,CAAqB5F,UAArB,EAAiC;AAC/B,MAAI6F,YAAY,GAAGC,YAAY,CAAC9F,UAAD,CAA/B;AACA6F,EAAAA,YAAY,CAACnB,KAAb,GAAqB1E,UAArB;AACA6F,EAAAA,YAAY,CAACxO,IAAb,GAAoB2I,UAAU,CAAC3I,IAA/B;;AACAwO,EAAAA,YAAY,CAACE,IAAb,GAAoB,YAAY;AAAE,WAAO/F,UAAP;AAAoB,GAAtD;;AACA6F,EAAAA,YAAY,CAACxH,OAAb,GAAuB,YAAY;AACjC,QAAIyG,gBAAgB,GAAG9E,UAAU,CAAC3B,OAAX,CAAmB0F,KAAnB,CAAyB,IAAzB,CAAvB,CADiC,CACsB;;AACvDe,IAAAA,gBAAgB,CAACiB,IAAjB,GAAwB,YAAY;AAAE,aAAO/F,UAAU,CAAC3B,OAAX,EAAP;AAA8B,KAApE;;AACA,WAAOyG,gBAAP;AACD,GAJD;;AAKAe,EAAAA,YAAY,CAACrG,GAAb,GAAmB,UAAUM,GAAV,EAAe;AAAE,WAAOE,UAAU,CAACsF,QAAX,CAAoBxF,GAApB,CAAP;AAAkC,GAAtE;;AACA+F,EAAAA,YAAY,CAACP,QAAb,GAAwB,UAAUxF,GAAV,EAAe;AAAE,WAAOE,UAAU,CAACR,GAAX,CAAeM,GAAf,CAAP;AAA6B,GAAtE;;AACA+F,EAAAA,YAAY,CAAC9H,WAAb,GAA2B4H,kBAA3B;;AACAE,EAAAA,YAAY,CAAC5H,iBAAb,GAAiC,UAAUG,EAAV,EAAcC,OAAd,EAAuB;AACtD,QAAIwG,QAAQ,GAAG,IAAf;AAEA,WAAO7E,UAAU,CAACzI,SAAX,CAAqB,UAAU4E,CAAV,EAAaD,CAAb,EAAgB;AAAE,aAAOkC,EAAE,CAAClC,CAAD,EAAIC,CAAJ,EAAO0I,QAAP,CAAF,KAAuB,KAA9B;AAAsC,KAA7E,EAA+ExG,OAA/E,CAAP;AACD,GAJD;;AAKAwH,EAAAA,YAAY,CAACnH,kBAAb,GAAkC,UAAUzC,IAAV,EAAgBoC,OAAhB,EAAyB;AACzD,QAAIpC,IAAI,KAAKf,eAAb,EAA8B;AAC5B,UAAIG,QAAQ,GAAG2E,UAAU,CAACvB,UAAX,CAAsBxC,IAAtB,EAA4BoC,OAA5B,CAAf;;AACA,aAAO,IAAI7C,QAAJ,CAAa,YAAY;AAC9B,YAAI2E,IAAI,GAAG9E,QAAQ,CAACI,IAAT,EAAX;;AACA,YAAI,CAAC0E,IAAI,CAAC9D,IAAV,EAAgB;AACd,cAAIH,CAAC,GAAGiE,IAAI,CAACpJ,KAAL,CAAW,CAAX,CAAR;AACAoJ,UAAAA,IAAI,CAACpJ,KAAL,CAAW,CAAX,IAAgBoJ,IAAI,CAACpJ,KAAL,CAAW,CAAX,CAAhB;AACAoJ,UAAAA,IAAI,CAACpJ,KAAL,CAAW,CAAX,IAAgBmF,CAAhB;AACD;;AACD,eAAOiE,IAAP;AACD,OARM,CAAP;AASD;;AACD,WAAOH,UAAU,CAACvB,UAAX,CACLxC,IAAI,KAAKhB,cAAT,GAA0BD,YAA1B,GAAyCC,cADpC,EAELoD,OAFK,CAAP;AAID,GAjBD;;AAkBA,SAAOwH,YAAP;AACD;;AAED,SAAST,UAAT,CAAoBpF,UAApB,EAAgCiF,MAAhC,EAAwCC,OAAxC,EAAiD;AAC/C,MAAIC,cAAc,GAAGW,YAAY,CAAC9F,UAAD,CAAjC;AACAmF,EAAAA,cAAc,CAAC9N,IAAf,GAAsB2I,UAAU,CAAC3I,IAAjC;;AACA8N,EAAAA,cAAc,CAAC3F,GAAf,GAAqB,UAAUM,GAAV,EAAe;AAAE,WAAOE,UAAU,CAACR,GAAX,CAAeM,GAAf,CAAP;AAA6B,GAAnE;;AACAqF,EAAAA,cAAc,CAAC7F,GAAf,GAAqB,UAAUQ,GAAV,EAAeP,WAAf,EAA4B;AAC/C,QAAIpD,CAAC,GAAG6D,UAAU,CAACV,GAAX,CAAeQ,GAAf,EAAoBjJ,OAApB,CAAR;AACA,WAAOsF,CAAC,KAAKtF,OAAN,GACH0I,WADG,GAEH0F,MAAM,CAAChI,IAAP,CAAYiI,OAAZ,EAAqB/I,CAArB,EAAwB2D,GAAxB,EAA6BE,UAA7B,CAFJ;AAGD,GALD;;AAMAmF,EAAAA,cAAc,CAAClH,iBAAf,GAAmC,UAAUG,EAAV,EAAcC,OAAd,EAAuB;AACxD,QAAIwG,QAAQ,GAAG,IAAf;AAEA,WAAO7E,UAAU,CAACzI,SAAX,CACL,UAAU4E,CAAV,EAAaD,CAAb,EAAgBsF,CAAhB,EAAmB;AAAE,aAAOpD,EAAE,CAAC6G,MAAM,CAAChI,IAAP,CAAYiI,OAAZ,EAAqB/I,CAArB,EAAwBD,CAAxB,EAA2BsF,CAA3B,CAAD,EAAgCtF,CAAhC,EAAmC2I,QAAnC,CAAF,KAAmD,KAA1D;AAAkE,KADlF,EAELxG,OAFK,CAAP;AAID,GAPD;;AAQA8G,EAAAA,cAAc,CAACzG,kBAAf,GAAoC,UAAUzC,IAAV,EAAgBoC,OAAhB,EAAyB;AAC3D,QAAIhD,QAAQ,GAAG2E,UAAU,CAACvB,UAAX,CAAsBvD,eAAtB,EAAuCmD,OAAvC,CAAf;;AACA,WAAO,IAAI7C,QAAJ,CAAa,YAAY;AAC9B,UAAI2E,IAAI,GAAG9E,QAAQ,CAACI,IAAT,EAAX;;AACA,UAAI0E,IAAI,CAAC9D,IAAT,EAAe;AACb,eAAO8D,IAAP;AACD;;AACD,UAAI3B,KAAK,GAAG2B,IAAI,CAACpJ,KAAjB;AACA,UAAI+I,GAAG,GAAGtB,KAAK,CAAC,CAAD,CAAf;AACA,aAAOxC,aAAa,CAClBC,IADkB,EAElB6D,GAFkB,EAGlBmF,MAAM,CAAChI,IAAP,CAAYiI,OAAZ,EAAqB1G,KAAK,CAAC,CAAD,CAA1B,EAA+BsB,GAA/B,EAAoCE,UAApC,CAHkB,EAIlBG,IAJkB,CAApB;AAMD,KAbM,CAAP;AAcD,GAhBD;;AAiBA,SAAOgF,cAAP;AACD;;AAED,SAASJ,cAAT,CAAwB/E,UAAxB,EAAoCyE,OAApC,EAA6C;AAC3C,MAAII,QAAQ,GAAG,IAAf;AAEA,MAAIC,gBAAgB,GAAGgB,YAAY,CAAC9F,UAAD,CAAnC;AACA8E,EAAAA,gBAAgB,CAACJ,KAAjB,GAAyB1E,UAAzB;AACA8E,EAAAA,gBAAgB,CAACzN,IAAjB,GAAwB2I,UAAU,CAAC3I,IAAnC;;AACAyN,EAAAA,gBAAgB,CAACzG,OAAjB,GAA2B,YAAY;AAAE,WAAO2B,UAAP;AAAoB,GAA7D;;AACA,MAAIA,UAAU,CAAC+F,IAAf,EAAqB;AACnBjB,IAAAA,gBAAgB,CAACiB,IAAjB,GAAwB,YAAY;AAClC,UAAIF,YAAY,GAAGD,WAAW,CAAC5F,UAAD,CAA9B;;AACA6F,MAAAA,YAAY,CAACxH,OAAb,GAAuB,YAAY;AAAE,eAAO2B,UAAU,CAAC+F,IAAX,EAAP;AAA2B,OAAhE;;AACA,aAAOF,YAAP;AACD,KAJD;AAKD;;AACDf,EAAAA,gBAAgB,CAACxF,GAAjB,GAAuB,UAAUQ,GAAV,EAAeP,WAAf,EAA4B;AAAE,WAAOS,UAAU,CAACV,GAAX,CAAemF,OAAO,GAAG3E,GAAH,GAAS,CAAC,CAAD,GAAKA,GAApC,EAAyCP,WAAzC,CAAP;AAA+D,GAApH;;AACAuF,EAAAA,gBAAgB,CAACtF,GAAjB,GAAuB,UAAUM,GAAV,EAAe;AAAE,WAAOE,UAAU,CAACR,GAAX,CAAeiF,OAAO,GAAG3E,GAAH,GAAS,CAAC,CAAD,GAAKA,GAApC,CAAP;AAAkD,GAA1F;;AACAgF,EAAAA,gBAAgB,CAACQ,QAAjB,GAA4B,UAAUvO,KAAV,EAAiB;AAAE,WAAOiJ,UAAU,CAACsF,QAAX,CAAoBvO,KAApB,CAAP;AAAoC,GAAnF;;AACA+N,EAAAA,gBAAgB,CAAC/G,WAAjB,GAA+B4H,kBAA/B;;AACAb,EAAAA,gBAAgB,CAACvN,SAAjB,GAA6B,UAAU6G,EAAV,EAAcC,OAAd,EAAuB;AAClD,QAAIwG,QAAQ,GAAG,IAAf;AAEA,QAAItG,CAAC,GAAG,CAAR;AACAF,IAAAA,OAAO,IAAIlH,UAAU,CAAC6I,UAAD,CAArB;AACA,WAAOA,UAAU,CAACzI,SAAX,CACL,UAAU4E,CAAV,EAAaD,CAAb,EAAgB;AAAE,aAAOkC,EAAE,CAACjC,CAAD,EAAIsI,OAAO,GAAGvI,CAAH,GAAOmC,OAAO,GAAGwG,QAAQ,CAACxN,IAAT,GAAgB,EAAEkH,CAArB,GAAyBA,CAAC,EAAnD,EAAuDsG,QAAvD,CAAT;AAA4E,KADzF,EAEL,CAACxG,OAFI,CAAP;AAID,GATD;;AAUAyG,EAAAA,gBAAgB,CAACrG,UAAjB,GAA8B,UAAUxC,IAAV,EAAgBoC,OAAhB,EAAyB;AACrD,QAAIE,CAAC,GAAG,CAAR;AACAF,IAAAA,OAAO,IAAIlH,UAAU,CAAC6I,UAAD,CAArB;;AACA,QAAI3E,QAAQ,GAAG2E,UAAU,CAACvB,UAAX,CAAsBvD,eAAtB,EAAuC,CAACmD,OAAxC,CAAf;;AACA,WAAO,IAAI7C,QAAJ,CAAa,YAAY;AAC9B,UAAI2E,IAAI,GAAG9E,QAAQ,CAACI,IAAT,EAAX;;AACA,UAAI0E,IAAI,CAAC9D,IAAT,EAAe;AACb,eAAO8D,IAAP;AACD;;AACD,UAAI3B,KAAK,GAAG2B,IAAI,CAACpJ,KAAjB;AACA,aAAOiF,aAAa,CAClBC,IADkB,EAElBwI,OAAO,GAAGjG,KAAK,CAAC,CAAD,CAAR,GAAcH,OAAO,GAAGwG,QAAQ,CAACxN,IAAT,GAAgB,EAAEkH,CAArB,GAAyBA,CAAC,EAFpC,EAGlBC,KAAK,CAAC,CAAD,CAHa,EAIlB2B,IAJkB,CAApB;AAMD,KAZM,CAAP;AAaD,GAjBD;;AAkBA,SAAO2E,gBAAP;AACD;;AAED,SAASkB,aAAT,CAAuBhG,UAAvB,EAAmCiG,SAAnC,EAA8Cf,OAA9C,EAAuDT,OAAvD,EAAgE;AAC9D,MAAIyB,cAAc,GAAGJ,YAAY,CAAC9F,UAAD,CAAjC;;AACA,MAAIyE,OAAJ,EAAa;AACXyB,IAAAA,cAAc,CAAC1G,GAAf,GAAqB,UAAUM,GAAV,EAAe;AAClC,UAAI3D,CAAC,GAAG6D,UAAU,CAACV,GAAX,CAAeQ,GAAf,EAAoBjJ,OAApB,CAAR;AACA,aAAOsF,CAAC,KAAKtF,OAAN,IAAiB,CAAC,CAACoP,SAAS,CAAChJ,IAAV,CAAeiI,OAAf,EAAwB/I,CAAxB,EAA2B2D,GAA3B,EAAgCE,UAAhC,CAA1B;AACD,KAHD;;AAIAkG,IAAAA,cAAc,CAAC5G,GAAf,GAAqB,UAAUQ,GAAV,EAAeP,WAAf,EAA4B;AAC/C,UAAIpD,CAAC,GAAG6D,UAAU,CAACV,GAAX,CAAeQ,GAAf,EAAoBjJ,OAApB,CAAR;AACA,aAAOsF,CAAC,KAAKtF,OAAN,IAAiBoP,SAAS,CAAChJ,IAAV,CAAeiI,OAAf,EAAwB/I,CAAxB,EAA2B2D,GAA3B,EAAgCE,UAAhC,CAAjB,GACH7D,CADG,GAEHoD,WAFJ;AAGD,KALD;AAMD;;AACD2G,EAAAA,cAAc,CAACjI,iBAAf,GAAmC,UAAUG,EAAV,EAAcC,OAAd,EAAuB;AACxD,QAAIwG,QAAQ,GAAG,IAAf;AAEA,QAAI3E,UAAU,GAAG,CAAjB;;AACAF,IAAAA,UAAU,CAACzI,SAAX,CAAqB,UAAU4E,CAAV,EAAaD,CAAb,EAAgBsF,CAAhB,EAAmB;AACtC,UAAIyE,SAAS,CAAChJ,IAAV,CAAeiI,OAAf,EAAwB/I,CAAxB,EAA2BD,CAA3B,EAA8BsF,CAA9B,CAAJ,EAAsC;AACpCtB,QAAAA,UAAU;AACV,eAAO9B,EAAE,CAACjC,CAAD,EAAIsI,OAAO,GAAGvI,CAAH,GAAOgE,UAAU,GAAG,CAA/B,EAAkC2E,QAAlC,CAAT;AACD;AACF,KALD,EAKGxG,OALH;;AAMA,WAAO6B,UAAP;AACD,GAXD;;AAYAgG,EAAAA,cAAc,CAACxH,kBAAf,GAAoC,UAAUzC,IAAV,EAAgBoC,OAAhB,EAAyB;AAC3D,QAAIhD,QAAQ,GAAG2E,UAAU,CAACvB,UAAX,CAAsBvD,eAAtB,EAAuCmD,OAAvC,CAAf;;AACA,QAAI6B,UAAU,GAAG,CAAjB;AACA,WAAO,IAAI1E,QAAJ,CAAa,YAAY;AAC9B,aAAO,IAAP,EAAa;AACX,YAAI2E,IAAI,GAAG9E,QAAQ,CAACI,IAAT,EAAX;;AACA,YAAI0E,IAAI,CAAC9D,IAAT,EAAe;AACb,iBAAO8D,IAAP;AACD;;AACD,YAAI3B,KAAK,GAAG2B,IAAI,CAACpJ,KAAjB;AACA,YAAI+I,GAAG,GAAGtB,KAAK,CAAC,CAAD,CAAf;AACA,YAAIzH,KAAK,GAAGyH,KAAK,CAAC,CAAD,CAAjB;;AACA,YAAIyH,SAAS,CAAChJ,IAAV,CAAeiI,OAAf,EAAwBnO,KAAxB,EAA+B+I,GAA/B,EAAoCE,UAApC,CAAJ,EAAqD;AACnD,iBAAOhE,aAAa,CAACC,IAAD,EAAOwI,OAAO,GAAG3E,GAAH,GAASI,UAAU,EAAjC,EAAqCnJ,KAArC,EAA4CoJ,IAA5C,CAApB;AACD;AACF;AACF,KAbM,CAAP;AAcD,GAjBD;;AAkBA,SAAO+F,cAAP;AACD;;AAED,SAASC,cAAT,CAAwBnG,UAAxB,EAAoCoG,OAApC,EAA6ClB,OAA7C,EAAsD;AACpD,MAAImB,MAAM,GAAGC,GAAG,GAAGC,SAAN,EAAb;;AACAvG,EAAAA,UAAU,CAACzI,SAAX,CAAqB,UAAU4E,CAAV,EAAaD,CAAb,EAAgB;AACnCmK,IAAAA,MAAM,CAACG,MAAP,CAAcJ,OAAO,CAACnJ,IAAR,CAAaiI,OAAb,EAAsB/I,CAAtB,EAAyBD,CAAzB,EAA4B8D,UAA5B,CAAd,EAAuD,CAAvD,EAA0D,UAAUsB,CAAV,EAAa;AAAE,aAAOA,CAAC,GAAG,CAAX;AAAe,KAAxF;AACD,GAFD;;AAGA,SAAO+E,MAAM,CAACI,WAAP,EAAP;AACD;;AAED,SAASC,cAAT,CAAwB1G,UAAxB,EAAoCoG,OAApC,EAA6ClB,OAA7C,EAAsD;AACpD,MAAIyB,WAAW,GAAG7N,OAAO,CAACkH,UAAD,CAAzB;AACA,MAAIqG,MAAM,GAAG,CAACvL,SAAS,CAACkF,UAAD,CAAT,GAAwB4G,UAAU,EAAlC,GAAuCN,GAAG,EAA3C,EAA+CC,SAA/C,EAAb;;AACAvG,EAAAA,UAAU,CAACzI,SAAX,CAAqB,UAAU4E,CAAV,EAAaD,CAAb,EAAgB;AACnCmK,IAAAA,MAAM,CAACG,MAAP,CACEJ,OAAO,CAACnJ,IAAR,CAAaiI,OAAb,EAAsB/I,CAAtB,EAAyBD,CAAzB,EAA4B8D,UAA5B,CADF,EAEE,UAAUsB,CAAV,EAAa;AAAE,aAASA,CAAC,GAAGA,CAAC,IAAI,EAAV,EAAeA,CAAC,CAACuF,IAAF,CAAOF,WAAW,GAAG,CAACzK,CAAD,EAAIC,CAAJ,CAAH,GAAYA,CAA9B,CAAf,EAAiDmF,CAAzD;AAA8D,KAF/E;AAID,GALD;;AAMA,MAAIwF,MAAM,GAAGC,eAAe,CAAC/G,UAAD,CAA5B;AACA,SAAOqG,MAAM,CAACrB,GAAP,CAAW,UAAUgC,GAAV,EAAe;AAAE,WAAOC,KAAK,CAACjH,UAAD,EAAa8G,MAAM,CAACE,GAAD,CAAnB,CAAZ;AAAwC,GAApE,EAAsEP,WAAtE,EAAP;AACD;;AAED,SAASS,YAAT,CAAsBlH,UAAtB,EAAkClI,KAAlC,EAAyCC,GAAzC,EAA8C0M,OAA9C,EAAuD;AACrD,MAAI0C,YAAY,GAAGnH,UAAU,CAAC3I,IAA9B;;AAEA,MAAIQ,UAAU,CAACC,KAAD,EAAQC,GAAR,EAAaoP,YAAb,CAAd,EAA0C;AACxC,WAAOnH,UAAP;AACD;;AAED,MAAIoH,aAAa,GAAGnP,YAAY,CAACH,KAAD,EAAQqP,YAAR,CAAhC;AACA,MAAIE,WAAW,GAAGlP,UAAU,CAACJ,GAAD,EAAMoP,YAAN,CAA5B,CARqD,CAUrD;AACA;AACA;;AACA,MAAIC,aAAa,KAAKA,aAAlB,IAAmCC,WAAW,KAAKA,WAAvD,EAAoE;AAClE,WAAOH,YAAY,CAAClH,UAAU,CAACpC,KAAX,GAAmBG,WAAnB,EAAD,EAAmCjG,KAAnC,EAA0CC,GAA1C,EAA+C0M,OAA/C,CAAnB;AACD,GAfoD,CAiBrD;AACA;AACA;AACA;;;AACA,MAAI6C,YAAY,GAAGD,WAAW,GAAGD,aAAjC;AACA,MAAIG,SAAJ;;AACA,MAAID,YAAY,KAAKA,YAArB,EAAmC;AACjCC,IAAAA,SAAS,GAAGD,YAAY,GAAG,CAAf,GAAmB,CAAnB,GAAuBA,YAAnC;AACD;;AAED,MAAIE,QAAQ,GAAG1B,YAAY,CAAC9F,UAAD,CAA3B,CA3BqD,CA6BrD;AACA;;AACAwH,EAAAA,QAAQ,CAACnQ,IAAT,GACEkQ,SAAS,KAAK,CAAd,GAAkBA,SAAlB,GAA+BvH,UAAU,CAAC3I,IAAX,IAAmBkQ,SAApB,IAAkCjQ,SADlE;;AAGA,MAAI,CAACmN,OAAD,IAAYnK,KAAK,CAAC0F,UAAD,CAAjB,IAAiCuH,SAAS,IAAI,CAAlD,EAAqD;AACnDC,IAAAA,QAAQ,CAAClI,GAAT,GAAe,UAAU5H,KAAV,EAAiB6H,WAAjB,EAA8B;AAC3C7H,MAAAA,KAAK,GAAGD,SAAS,CAAC,IAAD,EAAOC,KAAP,CAAjB;AACA,aAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAG6P,SAAtB,GACHvH,UAAU,CAACV,GAAX,CAAe5H,KAAK,GAAG0P,aAAvB,EAAsC7H,WAAtC,CADG,GAEHA,WAFJ;AAGD,KALD;AAMD;;AAEDiI,EAAAA,QAAQ,CAACvJ,iBAAT,GAA6B,UAAUG,EAAV,EAAcC,OAAd,EAAuB;AAClD,QAAIwG,QAAQ,GAAG,IAAf;;AAEA,QAAI0C,SAAS,KAAK,CAAlB,EAAqB;AACnB,aAAO,CAAP;AACD;;AACD,QAAIlJ,OAAJ,EAAa;AACX,aAAO,KAAKN,WAAL,GAAmBxG,SAAnB,CAA6B6G,EAA7B,EAAiCC,OAAjC,CAAP;AACD;;AACD,QAAIoJ,OAAO,GAAG,CAAd;AACA,QAAIC,UAAU,GAAG,IAAjB;AACA,QAAIxH,UAAU,GAAG,CAAjB;;AACAF,IAAAA,UAAU,CAACzI,SAAX,CAAqB,UAAU4E,CAAV,EAAaD,CAAb,EAAgB;AACnC,UAAI,EAAEwL,UAAU,KAAKA,UAAU,GAAGD,OAAO,KAAKL,aAA9B,CAAZ,CAAJ,EAA+D;AAC7DlH,QAAAA,UAAU;AACV,eACE9B,EAAE,CAACjC,CAAD,EAAIsI,OAAO,GAAGvI,CAAH,GAAOgE,UAAU,GAAG,CAA/B,EAAkC2E,QAAlC,CAAF,KAAkD,KAAlD,IACA3E,UAAU,KAAKqH,SAFjB;AAID;AACF,KARD;;AASA,WAAOrH,UAAP;AACD,GAtBD;;AAwBAsH,EAAAA,QAAQ,CAAC9I,kBAAT,GAA8B,UAAUzC,IAAV,EAAgBoC,OAAhB,EAAyB;AACrD,QAAIkJ,SAAS,KAAK,CAAd,IAAmBlJ,OAAvB,EAAgC;AAC9B,aAAO,KAAKN,WAAL,GAAmBU,UAAnB,CAA8BxC,IAA9B,EAAoCoC,OAApC,CAAP;AACD,KAHoD,CAIrD;;;AACA,QAAIkJ,SAAS,KAAK,CAAlB,EAAqB;AACnB,aAAO,IAAI/L,QAAJ,CAAac,YAAb,CAAP;AACD;;AACD,QAAIjB,QAAQ,GAAG2E,UAAU,CAACvB,UAAX,CAAsBxC,IAAtB,EAA4BoC,OAA5B,CAAf;;AACA,QAAIoJ,OAAO,GAAG,CAAd;AACA,QAAIvH,UAAU,GAAG,CAAjB;AACA,WAAO,IAAI1E,QAAJ,CAAa,YAAY;AAC9B,aAAOiM,OAAO,KAAKL,aAAnB,EAAkC;AAChC/L,QAAAA,QAAQ,CAACI,IAAT;AACD;;AACD,UAAI,EAAEyE,UAAF,GAAeqH,SAAnB,EAA8B;AAC5B,eAAOjL,YAAY,EAAnB;AACD;;AACD,UAAI6D,IAAI,GAAG9E,QAAQ,CAACI,IAAT,EAAX;;AACA,UAAIgJ,OAAO,IAAIxI,IAAI,KAAKhB,cAApB,IAAsCkF,IAAI,CAAC9D,IAA/C,EAAqD;AACnD,eAAO8D,IAAP;AACD;;AACD,UAAIlE,IAAI,KAAKjB,YAAb,EAA2B;AACzB,eAAOgB,aAAa,CAACC,IAAD,EAAOiE,UAAU,GAAG,CAApB,EAAuB5I,SAAvB,EAAkC6I,IAAlC,CAApB;AACD;;AACD,aAAOnE,aAAa,CAACC,IAAD,EAAOiE,UAAU,GAAG,CAApB,EAAuBC,IAAI,CAACpJ,KAAL,CAAW,CAAX,CAAvB,EAAsCoJ,IAAtC,CAApB;AACD,KAfM,CAAP;AAgBD,GA3BD;;AA6BA,SAAOqH,QAAP;AACD;;AAED,SAASG,gBAAT,CAA0B3H,UAA1B,EAAsCiG,SAAtC,EAAiDf,OAAjD,EAA0D;AACxD,MAAI0C,YAAY,GAAG9B,YAAY,CAAC9F,UAAD,CAA/B;;AACA4H,EAAAA,YAAY,CAAC3J,iBAAb,GAAiC,UAAUG,EAAV,EAAcC,OAAd,EAAuB;AACtD,QAAIwG,QAAQ,GAAG,IAAf;;AAEA,QAAIxG,OAAJ,EAAa;AACX,aAAO,KAAKN,WAAL,GAAmBxG,SAAnB,CAA6B6G,EAA7B,EAAiCC,OAAjC,CAAP;AACD;;AACD,QAAI6B,UAAU,GAAG,CAAjB;;AACAF,IAAAA,UAAU,CAACzI,SAAX,CACE,UAAU4E,CAAV,EAAaD,CAAb,EAAgBsF,CAAhB,EAAmB;AAAE,aAAOyE,SAAS,CAAChJ,IAAV,CAAeiI,OAAf,EAAwB/I,CAAxB,EAA2BD,CAA3B,EAA8BsF,CAA9B,KAAoC,EAAEtB,UAAtC,IAAoD9B,EAAE,CAACjC,CAAD,EAAID,CAAJ,EAAO2I,QAAP,CAA7D;AAAgF,KADvG;;AAGA,WAAO3E,UAAP;AACD,GAXD;;AAYA0H,EAAAA,YAAY,CAAClJ,kBAAb,GAAkC,UAAUzC,IAAV,EAAgBoC,OAAhB,EAAyB;AACzD,QAAIwG,QAAQ,GAAG,IAAf;;AAEA,QAAIxG,OAAJ,EAAa;AACX,aAAO,KAAKN,WAAL,GAAmBU,UAAnB,CAA8BxC,IAA9B,EAAoCoC,OAApC,CAAP;AACD;;AACD,QAAIhD,QAAQ,GAAG2E,UAAU,CAACvB,UAAX,CAAsBvD,eAAtB,EAAuCmD,OAAvC,CAAf;;AACA,QAAIwJ,SAAS,GAAG,IAAhB;AACA,WAAO,IAAIrM,QAAJ,CAAa,YAAY;AAC9B,UAAI,CAACqM,SAAL,EAAgB;AACd,eAAOvL,YAAY,EAAnB;AACD;;AACD,UAAI6D,IAAI,GAAG9E,QAAQ,CAACI,IAAT,EAAX;;AACA,UAAI0E,IAAI,CAAC9D,IAAT,EAAe;AACb,eAAO8D,IAAP;AACD;;AACD,UAAI3B,KAAK,GAAG2B,IAAI,CAACpJ,KAAjB;AACA,UAAImF,CAAC,GAAGsC,KAAK,CAAC,CAAD,CAAb;AACA,UAAIrC,CAAC,GAAGqC,KAAK,CAAC,CAAD,CAAb;;AACA,UAAI,CAACyH,SAAS,CAAChJ,IAAV,CAAeiI,OAAf,EAAwB/I,CAAxB,EAA2BD,CAA3B,EAA8B2I,QAA9B,CAAL,EAA8C;AAC5CgD,QAAAA,SAAS,GAAG,KAAZ;AACA,eAAOvL,YAAY,EAAnB;AACD;;AACD,aAAOL,IAAI,KAAKf,eAAT,GAA2BiF,IAA3B,GAAkCnE,aAAa,CAACC,IAAD,EAAOC,CAAP,EAAUC,CAAV,EAAagE,IAAb,CAAtD;AACD,KAhBM,CAAP;AAiBD,GAzBD;;AA0BA,SAAOyH,YAAP;AACD;;AAED,SAASE,gBAAT,CAA0B9H,UAA1B,EAAsCiG,SAAtC,EAAiDf,OAAjD,EAA0DT,OAA1D,EAAmE;AACjE,MAAIsD,YAAY,GAAGjC,YAAY,CAAC9F,UAAD,CAA/B;;AACA+H,EAAAA,YAAY,CAAC9J,iBAAb,GAAiC,UAAUG,EAAV,EAAcC,OAAd,EAAuB;AACtD,QAAIwG,QAAQ,GAAG,IAAf;;AAEA,QAAIxG,OAAJ,EAAa;AACX,aAAO,KAAKN,WAAL,GAAmBxG,SAAnB,CAA6B6G,EAA7B,EAAiCC,OAAjC,CAAP;AACD;;AACD,QAAIqJ,UAAU,GAAG,IAAjB;AACA,QAAIxH,UAAU,GAAG,CAAjB;;AACAF,IAAAA,UAAU,CAACzI,SAAX,CAAqB,UAAU4E,CAAV,EAAaD,CAAb,EAAgBsF,CAAhB,EAAmB;AACtC,UAAI,EAAEkG,UAAU,KAAKA,UAAU,GAAGzB,SAAS,CAAChJ,IAAV,CAAeiI,OAAf,EAAwB/I,CAAxB,EAA2BD,CAA3B,EAA8BsF,CAA9B,CAAlB,CAAZ,CAAJ,EAAsE;AACpEtB,QAAAA,UAAU;AACV,eAAO9B,EAAE,CAACjC,CAAD,EAAIsI,OAAO,GAAGvI,CAAH,GAAOgE,UAAU,GAAG,CAA/B,EAAkC2E,QAAlC,CAAT;AACD;AACF,KALD;;AAMA,WAAO3E,UAAP;AACD,GAfD;;AAgBA6H,EAAAA,YAAY,CAACrJ,kBAAb,GAAkC,UAAUzC,IAAV,EAAgBoC,OAAhB,EAAyB;AACzD,QAAIwG,QAAQ,GAAG,IAAf;;AAEA,QAAIxG,OAAJ,EAAa;AACX,aAAO,KAAKN,WAAL,GAAmBU,UAAnB,CAA8BxC,IAA9B,EAAoCoC,OAApC,CAAP;AACD;;AACD,QAAIhD,QAAQ,GAAG2E,UAAU,CAACvB,UAAX,CAAsBvD,eAAtB,EAAuCmD,OAAvC,CAAf;;AACA,QAAI2J,QAAQ,GAAG,IAAf;AACA,QAAI9H,UAAU,GAAG,CAAjB;AACA,WAAO,IAAI1E,QAAJ,CAAa,YAAY;AAC9B,UAAI2E,IAAJ;AACA,UAAIjE,CAAJ;AACA,UAAIC,CAAJ;;AACA,SAAG;AACDgE,QAAAA,IAAI,GAAG9E,QAAQ,CAACI,IAAT,EAAP;;AACA,YAAI0E,IAAI,CAAC9D,IAAT,EAAe;AACb,cAAIoI,OAAO,IAAIxI,IAAI,KAAKhB,cAAxB,EAAwC;AACtC,mBAAOkF,IAAP;AACD;;AACD,cAAIlE,IAAI,KAAKjB,YAAb,EAA2B;AACzB,mBAAOgB,aAAa,CAACC,IAAD,EAAOiE,UAAU,EAAjB,EAAqB5I,SAArB,EAAgC6I,IAAhC,CAApB;AACD;;AACD,iBAAOnE,aAAa,CAACC,IAAD,EAAOiE,UAAU,EAAjB,EAAqBC,IAAI,CAACpJ,KAAL,CAAW,CAAX,CAArB,EAAoCoJ,IAApC,CAApB;AACD;;AACD,YAAI3B,KAAK,GAAG2B,IAAI,CAACpJ,KAAjB;AACAmF,QAAAA,CAAC,GAAGsC,KAAK,CAAC,CAAD,CAAT;AACArC,QAAAA,CAAC,GAAGqC,KAAK,CAAC,CAAD,CAAT;AACAwJ,QAAAA,QAAQ,KAAKA,QAAQ,GAAG/B,SAAS,CAAChJ,IAAV,CAAeiI,OAAf,EAAwB/I,CAAxB,EAA2BD,CAA3B,EAA8B2I,QAA9B,CAAhB,CAAR;AACD,OAfD,QAeSmD,QAfT;;AAgBA,aAAO/L,IAAI,KAAKf,eAAT,GAA2BiF,IAA3B,GAAkCnE,aAAa,CAACC,IAAD,EAAOC,CAAP,EAAUC,CAAV,EAAagE,IAAb,CAAtD;AACD,KArBM,CAAP;AAsBD,GA/BD;;AAgCA,SAAO4H,YAAP;AACD;;AAED,SAASE,aAAT,CAAuBjI,UAAvB,EAAmCkI,MAAnC,EAA2C;AACzC,MAAIC,iBAAiB,GAAGrP,OAAO,CAACkH,UAAD,CAA/B;AACA,MAAIoI,KAAK,GAAG,CAACpI,UAAD,EACTqI,MADS,CACFH,MADE,EAETlD,GAFS,CAEL,UAAU7I,CAAV,EAAa;AAChB,QAAI,CAACzD,YAAY,CAACyD,CAAD,CAAjB,EAAsB;AACpBA,MAAAA,CAAC,GAAGgM,iBAAiB,GACjBtJ,iBAAiB,CAAC1C,CAAD,CADA,GAEjB4C,mBAAmB,CAACtC,KAAK,CAACC,OAAN,CAAcP,CAAd,IAAmBA,CAAnB,GAAuB,CAACA,CAAD,CAAxB,CAFvB;AAGD,KAJD,MAIO,IAAIgM,iBAAJ,EAAuB;AAC5BhM,MAAAA,CAAC,GAAG5C,eAAe,CAAC4C,CAAD,CAAnB;AACD;;AACD,WAAOA,CAAP;AACD,GAXS,EAYTmM,MAZS,CAYF,UAAUnM,CAAV,EAAa;AAAE,WAAOA,CAAC,CAAC9E,IAAF,KAAW,CAAlB;AAAsB,GAZnC,CAAZ;;AAcA,MAAI+Q,KAAK,CAAC1K,MAAN,KAAiB,CAArB,EAAwB;AACtB,WAAOsC,UAAP;AACD;;AAED,MAAIoI,KAAK,CAAC1K,MAAN,KAAiB,CAArB,EAAwB;AACtB,QAAI6K,SAAS,GAAGH,KAAK,CAAC,CAAD,CAArB;;AACA,QACEG,SAAS,KAAKvI,UAAd,IACCmI,iBAAiB,IAAIrP,OAAO,CAACyP,SAAD,CAD7B,IAECtP,SAAS,CAAC+G,UAAD,CAAT,IAAyB/G,SAAS,CAACsP,SAAD,CAHrC,EAIE;AACA,aAAOA,SAAP;AACD;AACF;;AAED,MAAIC,SAAS,GAAG,IAAIrJ,QAAJ,CAAaiJ,KAAb,CAAhB;;AACA,MAAID,iBAAJ,EAAuB;AACrBK,IAAAA,SAAS,GAAGA,SAAS,CAAC7J,UAAV,EAAZ;AACD,GAFD,MAEO,IAAI,CAAC1F,SAAS,CAAC+G,UAAD,CAAd,EAA4B;AACjCwI,IAAAA,SAAS,GAAGA,SAAS,CAACtJ,QAAV,EAAZ;AACD;;AACDsJ,EAAAA,SAAS,GAAGA,SAAS,CAACC,OAAV,CAAkB,IAAlB,CAAZ;AACAD,EAAAA,SAAS,CAACnR,IAAV,GAAiB+Q,KAAK,CAACM,MAAN,CAAa,UAAUC,GAAV,EAAetI,GAAf,EAAoB;AAChD,QAAIsI,GAAG,KAAKrR,SAAZ,EAAuB;AACrB,UAAID,IAAI,GAAGgJ,GAAG,CAAChJ,IAAf;;AACA,UAAIA,IAAI,KAAKC,SAAb,EAAwB;AACtB,eAAOqR,GAAG,GAAGtR,IAAb;AACD;AACF;AACF,GAPgB,EAOd,CAPc,CAAjB;AAQA,SAAOmR,SAAP;AACD;;AAED,SAASI,cAAT,CAAwB5I,UAAxB,EAAoC6I,KAApC,EAA2CpE,OAA3C,EAAoD;AAClD,MAAIqE,YAAY,GAAGhD,YAAY,CAAC9F,UAAD,CAA/B;;AACA8I,EAAAA,YAAY,CAAC7K,iBAAb,GAAiC,UAAUG,EAAV,EAAcC,OAAd,EAAuB;AACtD,QAAIA,OAAJ,EAAa;AACX,aAAO,KAAKN,WAAL,GAAmBxG,SAAnB,CAA6B6G,EAA7B,EAAiCC,OAAjC,CAAP;AACD;;AACD,QAAI6B,UAAU,GAAG,CAAjB;AACA,QAAI6I,OAAO,GAAG,KAAd;;AACA,aAASC,QAAT,CAAkB5R,IAAlB,EAAwB6R,YAAxB,EAAsC;AACpC7R,MAAAA,IAAI,CAACG,SAAL,CAAe,UAAU4E,CAAV,EAAaD,CAAb,EAAgB;AAC7B,YAAI,CAAC,CAAC2M,KAAD,IAAUI,YAAY,GAAGJ,KAA1B,KAAoCnQ,YAAY,CAACyD,CAAD,CAApD,EAAyD;AACvD6M,UAAAA,QAAQ,CAAC7M,CAAD,EAAI8M,YAAY,GAAG,CAAnB,CAAR;AACD,SAFD,MAEO;AACL/I,UAAAA,UAAU;;AACV,cAAI9B,EAAE,CAACjC,CAAD,EAAIsI,OAAO,GAAGvI,CAAH,GAAOgE,UAAU,GAAG,CAA/B,EAAkC4I,YAAlC,CAAF,KAAsD,KAA1D,EAAiE;AAC/DC,YAAAA,OAAO,GAAG,IAAV;AACD;AACF;;AACD,eAAO,CAACA,OAAR;AACD,OAVD,EAUG1K,OAVH;AAWD;;AACD2K,IAAAA,QAAQ,CAAChJ,UAAD,EAAa,CAAb,CAAR;AACA,WAAOE,UAAP;AACD,GArBD;;AAsBA4I,EAAAA,YAAY,CAACpK,kBAAb,GAAkC,UAAUzC,IAAV,EAAgBoC,OAAhB,EAAyB;AACzD,QAAIA,OAAJ,EAAa;AACX,aAAO,KAAKN,WAAL,GAAmBU,UAAnB,CAA8BxC,IAA9B,EAAoCoC,OAApC,CAAP;AACD;;AACD,QAAIhD,QAAQ,GAAG2E,UAAU,CAACvB,UAAX,CAAsBxC,IAAtB,EAA4BoC,OAA5B,CAAf;;AACA,QAAI6K,KAAK,GAAG,EAAZ;AACA,QAAIhJ,UAAU,GAAG,CAAjB;AACA,WAAO,IAAI1E,QAAJ,CAAa,YAAY;AAC9B,aAAOH,QAAP,EAAiB;AACf,YAAI8E,IAAI,GAAG9E,QAAQ,CAACI,IAAT,EAAX;;AACA,YAAI0E,IAAI,CAAC9D,IAAL,KAAc,KAAlB,EAAyB;AACvBhB,UAAAA,QAAQ,GAAG6N,KAAK,CAACC,GAAN,EAAX;AACA;AACD;;AACD,YAAIhN,CAAC,GAAGgE,IAAI,CAACpJ,KAAb;;AACA,YAAIkF,IAAI,KAAKf,eAAb,EAA8B;AAC5BiB,UAAAA,CAAC,GAAGA,CAAC,CAAC,CAAD,CAAL;AACD;;AACD,YAAI,CAAC,CAAC0M,KAAD,IAAUK,KAAK,CAACxL,MAAN,GAAemL,KAA1B,KAAoCnQ,YAAY,CAACyD,CAAD,CAApD,EAAyD;AACvD+M,UAAAA,KAAK,CAACrC,IAAN,CAAWxL,QAAX;AACAA,UAAAA,QAAQ,GAAGc,CAAC,CAACsC,UAAF,CAAaxC,IAAb,EAAmBoC,OAAnB,CAAX;AACD,SAHD,MAGO;AACL,iBAAOoG,OAAO,GAAGtE,IAAH,GAAUnE,aAAa,CAACC,IAAD,EAAOiE,UAAU,EAAjB,EAAqB/D,CAArB,EAAwBgE,IAAxB,CAArC;AACD;AACF;;AACD,aAAO7D,YAAY,EAAnB;AACD,KAnBM,CAAP;AAoBD,GA3BD;;AA4BA,SAAOwM,YAAP;AACD;;AAED,SAASM,cAAT,CAAwBpJ,UAAxB,EAAoCiF,MAApC,EAA4CC,OAA5C,EAAqD;AACnD,MAAI4B,MAAM,GAAGC,eAAe,CAAC/G,UAAD,CAA5B;AACA,SAAOA,UAAU,CACdpC,KADI,GAEJoH,GAFI,CAEA,UAAU7I,CAAV,EAAaD,CAAb,EAAgB;AAAE,WAAO4K,MAAM,CAAC7B,MAAM,CAAChI,IAAP,CAAYiI,OAAZ,EAAqB/I,CAArB,EAAwBD,CAAxB,EAA2B8D,UAA3B,CAAD,CAAb;AAAwD,GAF1E,EAGJyI,OAHI,CAGI,IAHJ,CAAP;AAID;;AAED,SAASY,gBAAT,CAA0BrJ,UAA1B,EAAsCsJ,SAAtC,EAAiD;AAC/C,MAAIC,kBAAkB,GAAGzD,YAAY,CAAC9F,UAAD,CAArC;AACAuJ,EAAAA,kBAAkB,CAAClS,IAAnB,GAA0B2I,UAAU,CAAC3I,IAAX,IAAmB2I,UAAU,CAAC3I,IAAX,GAAkB,CAAlB,GAAsB,CAAnE;;AACAkS,EAAAA,kBAAkB,CAACtL,iBAAnB,GAAuC,UAAUG,EAAV,EAAcC,OAAd,EAAuB;AAC5D,QAAIwG,QAAQ,GAAG,IAAf;AAEA,QAAI3E,UAAU,GAAG,CAAjB;;AACAF,IAAAA,UAAU,CAACzI,SAAX,CACE,UAAU4E,CAAV,EAAa;AAAE,aAAO,CAAC,CAAC+D,UAAD,IAAe9B,EAAE,CAACkL,SAAD,EAAYpJ,UAAU,EAAtB,EAA0B2E,QAA1B,CAAF,KAA0C,KAA1D,KACpBzG,EAAE,CAACjC,CAAD,EAAI+D,UAAU,EAAd,EAAkB2E,QAAlB,CAAF,KAAkC,KADrB;AAC6B,KAF9C,EAGExG,OAHF;;AAKA,WAAO6B,UAAP;AACD,GAVD;;AAWAqJ,EAAAA,kBAAkB,CAAC7K,kBAAnB,GAAwC,UAAUzC,IAAV,EAAgBoC,OAAhB,EAAyB;AAC/D,QAAIhD,QAAQ,GAAG2E,UAAU,CAACvB,UAAX,CAAsBxD,cAAtB,EAAsCoD,OAAtC,CAAf;;AACA,QAAI6B,UAAU,GAAG,CAAjB;AACA,QAAIC,IAAJ;AACA,WAAO,IAAI3E,QAAJ,CAAa,YAAY;AAC9B,UAAI,CAAC2E,IAAD,IAASD,UAAU,GAAG,CAA1B,EAA6B;AAC3BC,QAAAA,IAAI,GAAG9E,QAAQ,CAACI,IAAT,EAAP;;AACA,YAAI0E,IAAI,CAAC9D,IAAT,EAAe;AACb,iBAAO8D,IAAP;AACD;AACF;;AACD,aAAOD,UAAU,GAAG,CAAb,GACHlE,aAAa,CAACC,IAAD,EAAOiE,UAAU,EAAjB,EAAqBoJ,SAArB,CADV,GAEHtN,aAAa,CAACC,IAAD,EAAOiE,UAAU,EAAjB,EAAqBC,IAAI,CAACpJ,KAA1B,EAAiCoJ,IAAjC,CAFjB;AAGD,KAVM,CAAP;AAWD,GAfD;;AAgBA,SAAOoJ,kBAAP;AACD;;AAED,SAASC,WAAT,CAAqBxJ,UAArB,EAAiCyJ,UAAjC,EAA6CxE,MAA7C,EAAqD;AACnD,MAAI,CAACwE,UAAL,EAAiB;AACfA,IAAAA,UAAU,GAAGC,iBAAb;AACD;;AACD,MAAIvB,iBAAiB,GAAGrP,OAAO,CAACkH,UAAD,CAA/B;AACA,MAAItI,KAAK,GAAG,CAAZ;AACA,MAAIyF,OAAO,GAAG6C,UAAU,CACrBpC,KADW,GAEXoH,GAFW,CAEP,UAAU7I,CAAV,EAAaD,CAAb,EAAgB;AAAE,WAAO,CAACA,CAAD,EAAIC,CAAJ,EAAOzE,KAAK,EAAZ,EAAgBuN,MAAM,GAAGA,MAAM,CAAC9I,CAAD,EAAID,CAAJ,EAAO8D,UAAP,CAAT,GAA8B7D,CAApD,CAAP;AAAgE,GAF3E,EAGXyI,QAHW,GAIXzG,OAJW,EAAd;AAKAhB,EAAAA,OAAO,CACJwM,IADH,CACQ,UAAUrI,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAOkI,UAAU,CAACnI,CAAC,CAAC,CAAD,CAAF,EAAOC,CAAC,CAAC,CAAD,CAAR,CAAV,IAA0BD,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAzC;AAA+C,GADzE,EAEGqI,OAFH,CAGIzB,iBAAiB,GACb,UAAUhM,CAAV,EAAaoC,CAAb,EAAgB;AACdpB,IAAAA,OAAO,CAACoB,CAAD,CAAP,CAAWb,MAAX,GAAoB,CAApB;AACD,GAHY,GAIb,UAAUvB,CAAV,EAAaoC,CAAb,EAAgB;AACdpB,IAAAA,OAAO,CAACoB,CAAD,CAAP,GAAapC,CAAC,CAAC,CAAD,CAAd;AACD,GATT;AAWA,SAAOgM,iBAAiB,GACpB3O,QAAQ,CAAC2D,OAAD,CADY,GAEpBlE,SAAS,CAAC+G,UAAD,CAAT,GACAjG,UAAU,CAACoD,OAAD,CADV,GAEAlD,MAAM,CAACkD,OAAD,CAJV;AAKD;;AAED,SAAS0M,UAAT,CAAoB7J,UAApB,EAAgCyJ,UAAhC,EAA4CxE,MAA5C,EAAoD;AAClD,MAAI,CAACwE,UAAL,EAAiB;AACfA,IAAAA,UAAU,GAAGC,iBAAb;AACD;;AACD,MAAIzE,MAAJ,EAAY;AACV,QAAIzG,KAAK,GAAGwB,UAAU,CACnBpC,KADS,GAEToH,GAFS,CAEL,UAAU7I,CAAV,EAAaD,CAAb,EAAgB;AAAE,aAAO,CAACC,CAAD,EAAI8I,MAAM,CAAC9I,CAAD,EAAID,CAAJ,EAAO8D,UAAP,CAAV,CAAP;AAAuC,KAFpD,EAGT0I,MAHS,CAGF,UAAUpH,CAAV,EAAaC,CAAb,EAAgB;AAAE,aAAQuI,UAAU,CAACL,UAAD,EAAanI,CAAC,CAAC,CAAD,CAAd,EAAmBC,CAAC,CAAC,CAAD,CAApB,CAAV,GAAqCA,CAArC,GAAyCD,CAAjD;AAAsD,KAHtE,CAAZ;AAIA,WAAO9C,KAAK,IAAIA,KAAK,CAAC,CAAD,CAArB;AACD;;AACD,SAAOwB,UAAU,CAAC0I,MAAX,CAAkB,UAAUpH,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAQuI,UAAU,CAACL,UAAD,EAAanI,CAAb,EAAgBC,CAAhB,CAAV,GAA+BA,CAA/B,GAAmCD,CAA3C;AAAgD,GAApF,CAAP;AACD;;AAED,SAASwI,UAAT,CAAoBL,UAApB,EAAgCnI,CAAhC,EAAmCC,CAAnC,EAAsC;AACpC,MAAIwI,IAAI,GAAGN,UAAU,CAAClI,CAAD,EAAID,CAAJ,CAArB,CADoC,CAEpC;AACA;;AACA,SACGyI,IAAI,KAAK,CAAT,IAAcxI,CAAC,KAAKD,CAApB,KAA0BC,CAAC,KAAKjK,SAAN,IAAmBiK,CAAC,KAAK,IAAzB,IAAiCA,CAAC,KAAKA,CAAjE,CAAD,IACAwI,IAAI,GAAG,CAFT;AAID;;AAED,SAASC,cAAT,CAAwBC,OAAxB,EAAiCC,MAAjC,EAAyC9B,KAAzC,EAAgD+B,MAAhD,EAAwD;AACtD,MAAIC,WAAW,GAAGtE,YAAY,CAACmE,OAAD,CAA9B;AACA,MAAII,KAAK,GAAG,IAAIlL,QAAJ,CAAaiJ,KAAb,EAAoBpD,GAApB,CAAwB,UAAUzG,CAAV,EAAa;AAAE,WAAOA,CAAC,CAAClH,IAAT;AAAgB,GAAvD,CAAZ;AACA+S,EAAAA,WAAW,CAAC/S,IAAZ,GAAmB8S,MAAM,GAAGE,KAAK,CAAC9R,GAAN,EAAH,GAAiB8R,KAAK,CAAC7R,GAAN,EAA1C,CAHsD,CAItD;AACA;;AACA4R,EAAAA,WAAW,CAAC7S,SAAZ,GAAwB,UAAU6G,EAAV,EAAcC,OAAd,EAAuB;AAC7C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA,QAAIhD,QAAQ,GAAG,KAAKoD,UAAL,CAAgBxD,cAAhB,EAAgCoD,OAAhC,CAAf;;AACA,QAAI8B,IAAJ;AACA,QAAID,UAAU,GAAG,CAAjB;;AACA,WAAO,CAAC,CAACC,IAAI,GAAG9E,QAAQ,CAACI,IAAT,EAAR,EAAyBY,IAAjC,EAAuC;AACrC,UAAI+B,EAAE,CAAC+B,IAAI,CAACpJ,KAAN,EAAamJ,UAAU,EAAvB,EAA2B,IAA3B,CAAF,KAAuC,KAA3C,EAAkD;AAChD;AACD;AACF;;AACD,WAAOA,UAAP;AACD,GAvBD;;AAwBAkK,EAAAA,WAAW,CAAC1L,kBAAZ,GAAiC,UAAUzC,IAAV,EAAgBoC,OAAhB,EAAyB;AACxD,QAAIiM,SAAS,GAAGlC,KAAK,CAACpD,GAAN,CACd,UAAUzG,CAAV,EAAa;AAAE,aAASA,CAAC,GAAGlF,UAAU,CAACkF,CAAD,CAAf,EAAqBzB,WAAW,CAACuB,OAAO,GAAGE,CAAC,CAACF,OAAF,EAAH,GAAiBE,CAAzB,CAAxC;AAAuE,KADxE,CAAhB;AAGA,QAAI2B,UAAU,GAAG,CAAjB;AACA,QAAIqK,MAAM,GAAG,KAAb;AACA,WAAO,IAAI/O,QAAJ,CAAa,YAAY;AAC9B,UAAIgP,KAAJ;;AACA,UAAI,CAACD,MAAL,EAAa;AACXC,QAAAA,KAAK,GAAGF,SAAS,CAACtF,GAAV,CAAc,UAAUzG,CAAV,EAAa;AAAE,iBAAOA,CAAC,CAAC9C,IAAF,EAAP;AAAkB,SAA/C,CAAR;AACA8O,QAAAA,MAAM,GAAGJ,MAAM,GAAGK,KAAK,CAACC,KAAN,CAAY,UAAUC,CAAV,EAAa;AAAE,iBAAOA,CAAC,CAACrO,IAAT;AAAgB,SAA3C,CAAH,GAAkDmO,KAAK,CAACG,IAAN,CAAW,UAAUD,CAAV,EAAa;AAAE,iBAAOA,CAAC,CAACrO,IAAT;AAAgB,SAA1C,CAAjE;AACD;;AACD,UAAIkO,MAAJ,EAAY;AACV,eAAOjO,YAAY,EAAnB;AACD;;AACD,aAAON,aAAa,CAClBC,IADkB,EAElBiE,UAAU,EAFQ,EAGlBgK,MAAM,CAACnG,KAAP,CACE,IADF,EAEEyG,KAAK,CAACxF,GAAN,CAAU,UAAU0F,CAAV,EAAa;AAAE,eAAOA,CAAC,CAAC3T,KAAT;AAAiB,OAA1C,CAFF,CAHkB,CAApB;AAQD,KAjBM,CAAP;AAkBD,GAxBD;;AAyBA,SAAOqT,WAAP;AACD,EAED;;;AAEA,SAASnD,KAAT,CAAe7P,IAAf,EAAqBiJ,GAArB,EAA0B;AACxB,SAAOjJ,IAAI,KAAKiJ,GAAT,GAAejJ,IAAf,GAAsBkD,KAAK,CAAClD,IAAD,CAAL,GAAciJ,GAAd,GAAoBjJ,IAAI,CAACyC,WAAL,CAAiBwG,GAAjB,CAAjD;AACD;;AAED,SAASoF,aAAT,CAAuBjH,KAAvB,EAA8B;AAC5B,MAAIA,KAAK,KAAK7E,MAAM,CAAC6E,KAAD,CAApB,EAA6B;AAC3B,UAAM,IAAI+B,SAAJ,CAAc,4BAA4B/B,KAA1C,CAAN;AACD;AACF;;AAED,SAASuI,eAAT,CAAyB/G,UAAzB,EAAqC;AACnC,SAAOlH,OAAO,CAACkH,UAAD,CAAP,GACHzG,eADG,GAEHN,SAAS,CAAC+G,UAAD,CAAT,GACAlG,iBADA,GAEAE,aAJJ;AAKD;;AAED,SAAS8L,YAAT,CAAsB9F,UAAtB,EAAkC;AAChC,SAAOrG,MAAM,CAACC,MAAP,CACL,CAACd,OAAO,CAACkH,UAAD,CAAP,GACGxG,QADH,GAEGP,SAAS,CAAC+G,UAAD,CAAT,GACAjG,UADA,GAEAE,MAJJ,EAKEP,SANG,CAAP;AAQD;;AAED,SAASiM,kBAAT,GAA8B;AAC5B,MAAI,KAAKjB,KAAL,CAAW3G,WAAf,EAA4B;AAC1B,SAAK2G,KAAL,CAAW3G,WAAX;;AACA,SAAK1G,IAAL,GAAY,KAAKqN,KAAL,CAAWrN,IAAvB;AACA,WAAO,IAAP;AACD;;AACD,SAAOiC,GAAG,CAACI,SAAJ,CAAcqE,WAAd,CAA0Bd,IAA1B,CAA+B,IAA/B,CAAP;AACD;;AAED,SAASyM,iBAAT,CAA2BpI,CAA3B,EAA8BC,CAA9B,EAAiC;AAC/B,MAAID,CAAC,KAAKhK,SAAN,IAAmBiK,CAAC,KAAKjK,SAA7B,EAAwC;AACtC,WAAO,CAAP;AACD;;AAED,MAAIgK,CAAC,KAAKhK,SAAV,EAAqB;AACnB,WAAO,CAAP;AACD;;AAED,MAAIiK,CAAC,KAAKjK,SAAV,EAAqB;AACnB,WAAO,CAAC,CAAR;AACD;;AAED,SAAOgK,CAAC,GAAGC,CAAJ,GAAQ,CAAR,GAAYD,CAAC,GAAGC,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAAhC;AACD;;AAED,SAASqJ,OAAT,CAAiB5D,GAAjB,EAAsB6D,MAAtB,EAA8B;AAC5BA,EAAAA,MAAM,GAAGA,MAAM,IAAI,CAAnB;AACA,MAAIC,GAAG,GAAGxS,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYyO,GAAG,CAACtJ,MAAJ,GAAamN,MAAzB,CAAV;AACA,MAAIE,MAAM,GAAG,IAAItO,KAAJ,CAAUqO,GAAV,CAAb;;AACA,OAAK,IAAIrL,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGqL,GAAtB,EAA2BrL,EAAE,EAA7B,EAAiC;AAC/BsL,IAAAA,MAAM,CAACtL,EAAD,CAAN,GAAauH,GAAG,CAACvH,EAAE,GAAGoL,MAAN,CAAhB;AACD;;AACD,SAAOE,MAAP;AACD;;AAED,SAASC,SAAT,CAAmBC,SAAnB,EAA8BC,KAA9B,EAAqC;AACnC,MAAI,CAACD,SAAL,EAAgB;AAAE,UAAM,IAAI3I,KAAJ,CAAU4I,KAAV,CAAN;AAAyB;AAC5C;;AAED,SAASC,iBAAT,CAA2B9T,IAA3B,EAAiC;AAC/B2T,EAAAA,SAAS,CACP3T,IAAI,KAAKgB,QADF,EAEP,mDAFO,CAAT;AAID;;AAED,SAAS+S,aAAT,CAAuBC,OAAvB,EAAgC;AAC9B,MAAI9N,WAAW,CAAC8N,OAAD,CAAX,IAAwB,OAAOA,OAAP,KAAmB,QAA/C,EAAyD;AACvD,WAAOA,OAAP;AACD;;AACD,MAAIvQ,SAAS,CAACuQ,OAAD,CAAb,EAAwB;AACtB,WAAOA,OAAO,CAAClN,OAAR,EAAP;AACD;;AACD,QAAM,IAAIoC,SAAJ,CACJ,4DAA4D8K,OADxD,CAAN;AAGD;;AAED,IAAI3P,QAAQ,GAAG/B,MAAM,CAACD,SAAP,CAAiBgC,QAAhC;;AAEA,SAAS4P,aAAT,CAAuBvU,KAAvB,EAA8B;AAC5B;AACA,MACE,CAACA,KAAD,IACA,OAAOA,KAAP,KAAiB,QADjB,IAEA2E,QAAQ,CAACuB,IAAT,CAAclG,KAAd,MAAyB,iBAH3B,EAIE;AACA,WAAO,KAAP;AACD;;AAED,MAAIwU,KAAK,GAAG5R,MAAM,CAAC6R,cAAP,CAAsBzU,KAAtB,CAAZ;;AACA,MAAIwU,KAAK,KAAK,IAAd,EAAoB;AAClB,WAAO,IAAP;AACD,GAb2B,CAe5B;;;AACA,MAAIE,WAAW,GAAGF,KAAlB;AACA,MAAIG,SAAS,GAAG/R,MAAM,CAAC6R,cAAP,CAAsBD,KAAtB,CAAhB;;AACA,SAAOG,SAAS,KAAK,IAArB,EAA2B;AACzBD,IAAAA,WAAW,GAAGC,SAAd;AACAA,IAAAA,SAAS,GAAG/R,MAAM,CAAC6R,cAAP,CAAsBC,WAAtB,CAAZ;AACD;;AACD,SAAOA,WAAW,KAAKF,KAAvB;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASI,eAAT,CAAyB5U,KAAzB,EAAgC;AAC9B,SACE,OAAOA,KAAP,KAAiB,QAAjB,KACC4D,WAAW,CAAC5D,KAAD,CAAX,IAAsB0F,KAAK,CAACC,OAAN,CAAc3F,KAAd,CAAtB,IAA8CuU,aAAa,CAACvU,KAAD,CAD5D,CADF;AAID;;AAED,SAAS6U,WAAT,CAAqB7U,KAArB,EAA4B;AAC1B,MAAI;AACF,WAAO,OAAOA,KAAP,KAAiB,QAAjB,GAA4B8U,IAAI,CAACC,SAAL,CAAe/U,KAAf,CAA5B,GAAoDgV,MAAM,CAAChV,KAAD,CAAjE;AACD,GAFD,CAEE,OAAOiV,YAAP,EAAqB;AACrB,WAAOH,IAAI,CAACC,SAAL,CAAe/U,KAAf,CAAP;AACD;AACF;;AAED,SAASyI,GAAT,CAAaQ,UAAb,EAAyBF,GAAzB,EAA8B;AAC5B,SAAOnF,WAAW,CAACqF,UAAD,CAAX,GACHA,UAAU,CAACR,GAAX,CAAeM,GAAf,CADG,GAEH6L,eAAe,CAAC3L,UAAD,CAAf,IAA+B1C,cAAc,CAACL,IAAf,CAAoB+C,UAApB,EAAgCF,GAAhC,CAFnC;AAGD;;AAED,SAASR,GAAT,CAAaU,UAAb,EAAyBF,GAAzB,EAA8BP,WAA9B,EAA2C;AACzC,SAAO5E,WAAW,CAACqF,UAAD,CAAX,GACHA,UAAU,CAACV,GAAX,CAAeQ,GAAf,EAAoBP,WAApB,CADG,GAEH,CAACC,GAAG,CAACQ,UAAD,EAAaF,GAAb,CAAJ,GACAP,WADA,GAEA,OAAOS,UAAU,CAACV,GAAlB,KAA0B,UAA1B,GACAU,UAAU,CAACV,GAAX,CAAeQ,GAAf,CADA,GAEAE,UAAU,CAACF,GAAD,CANd;AAOD;;AAED,SAASmM,WAAT,CAAqBC,IAArB,EAA2B;AACzB,MAAIzP,KAAK,CAACC,OAAN,CAAcwP,IAAd,CAAJ,EAAyB;AACvB,WAAOtB,OAAO,CAACsB,IAAD,CAAd;AACD;;AACD,MAAIC,EAAE,GAAG,EAAT;;AACA,OAAK,IAAIrM,GAAT,IAAgBoM,IAAhB,EAAsB;AACpB,QAAI5O,cAAc,CAACL,IAAf,CAAoBiP,IAApB,EAA0BpM,GAA1B,CAAJ,EAAoC;AAClCqM,MAAAA,EAAE,CAACrM,GAAD,CAAF,GAAUoM,IAAI,CAACpM,GAAD,CAAd;AACD;AACF;;AACD,SAAOqM,EAAP;AACD;;AAED,SAASC,MAAT,CAAgBpM,UAAhB,EAA4BF,GAA5B,EAAiC;AAC/B,MAAI,CAAC6L,eAAe,CAAC3L,UAAD,CAApB,EAAkC;AAChC,UAAM,IAAIO,SAAJ,CACJ,6CAA6CP,UADzC,CAAN;AAGD;;AACD,MAAIrF,WAAW,CAACqF,UAAD,CAAf,EAA6B;AAC3B,QAAI,CAACA,UAAU,CAACoM,MAAhB,EAAwB;AACtB,YAAM,IAAI7L,SAAJ,CACJ,6DAA6DP,UADzD,CAAN;AAGD;;AACD,WAAOA,UAAU,CAACoM,MAAX,CAAkBtM,GAAlB,CAAP;AACD;;AACD,MAAI,CAACxC,cAAc,CAACL,IAAf,CAAoB+C,UAApB,EAAgCF,GAAhC,CAAL,EAA2C;AACzC,WAAOE,UAAP;AACD;;AACD,MAAIqM,cAAc,GAAGJ,WAAW,CAACjM,UAAD,CAAhC;;AACA,MAAIvD,KAAK,CAACC,OAAN,CAAc2P,cAAd,CAAJ,EAAmC;AACjCA,IAAAA,cAAc,CAACC,MAAf,CAAsBxM,GAAtB,EAA2B,CAA3B;AACD,GAFD,MAEO;AACL,WAAOuM,cAAc,CAACvM,GAAD,CAArB;AACD;;AACD,SAAOuM,cAAP;AACD;;AAED,SAAS5I,GAAT,CAAazD,UAAb,EAAyBF,GAAzB,EAA8B/I,KAA9B,EAAqC;AACnC,MAAI,CAAC4U,eAAe,CAAC3L,UAAD,CAApB,EAAkC;AAChC,UAAM,IAAIO,SAAJ,CACJ,6CAA6CP,UADzC,CAAN;AAGD;;AACD,MAAIrF,WAAW,CAACqF,UAAD,CAAf,EAA6B;AAC3B,QAAI,CAACA,UAAU,CAACyD,GAAhB,EAAqB;AACnB,YAAM,IAAIlD,SAAJ,CACJ,0DAA0DP,UADtD,CAAN;AAGD;;AACD,WAAOA,UAAU,CAACyD,GAAX,CAAe3D,GAAf,EAAoB/I,KAApB,CAAP;AACD;;AACD,MAAIuG,cAAc,CAACL,IAAf,CAAoB+C,UAApB,EAAgCF,GAAhC,KAAwC/I,KAAK,KAAKiJ,UAAU,CAACF,GAAD,CAAhE,EAAuE;AACrE,WAAOE,UAAP;AACD;;AACD,MAAIqM,cAAc,GAAGJ,WAAW,CAACjM,UAAD,CAAhC;AACAqM,EAAAA,cAAc,CAACvM,GAAD,CAAd,GAAsB/I,KAAtB;AACA,SAAOsV,cAAP;AACD;;AAED,SAASE,UAAT,CAAoBvM,UAApB,EAAgCqL,OAAhC,EAAyC9L,WAAzC,EAAsDiN,OAAtD,EAA+D;AAC7D,MAAI,CAACA,OAAL,EAAc;AACZA,IAAAA,OAAO,GAAGjN,WAAV;AACAA,IAAAA,WAAW,GAAGjI,SAAd;AACD;;AACD,MAAImV,YAAY,GAAGC,cAAc,CAC/B/R,WAAW,CAACqF,UAAD,CADoB,EAE/BA,UAF+B,EAG/BoL,aAAa,CAACC,OAAD,CAHkB,EAI/B,CAJ+B,EAK/B9L,WAL+B,EAM/BiN,OAN+B,CAAjC;AAQA,SAAOC,YAAY,KAAK5V,OAAjB,GAA2B0I,WAA3B,GAAyCkN,YAAhD;AACD;;AAED,SAASC,cAAT,CACEC,WADF,EAEEC,QAFF,EAGEvB,OAHF,EAIE9M,CAJF,EAKEgB,WALF,EAMEiN,OANF,EAOE;AACA,MAAIK,SAAS,GAAGD,QAAQ,KAAK/V,OAA7B;;AACA,MAAI0H,CAAC,KAAK8M,OAAO,CAAC3N,MAAlB,EAA0B;AACxB,QAAIoP,aAAa,GAAGD,SAAS,GAAGtN,WAAH,GAAiBqN,QAA9C;AACA,QAAIG,QAAQ,GAAGP,OAAO,CAACM,aAAD,CAAtB;AACA,WAAOC,QAAQ,KAAKD,aAAb,GAA6BF,QAA7B,GAAwCG,QAA/C;AACD;;AACD,MAAI,CAACF,SAAD,IAAc,CAAClB,eAAe,CAACiB,QAAD,CAAlC,EAA8C;AAC5C,UAAM,IAAIrM,SAAJ,CACJ,4DACE8K,OAAO,CAAC2B,KAAR,CAAc,CAAd,EAAiBzO,CAAjB,EAAoByG,GAApB,CAAwB4G,WAAxB,CADF,GAEE,KAFF,GAGEgB,QAJE,CAAN;AAMD;;AACD,MAAI9M,GAAG,GAAGuL,OAAO,CAAC9M,CAAD,CAAjB;AACA,MAAI0O,YAAY,GAAGJ,SAAS,GAAGhW,OAAH,GAAayI,GAAG,CAACsN,QAAD,EAAW9M,GAAX,EAAgBjJ,OAAhB,CAA5C;AACA,MAAIqW,WAAW,GAAGR,cAAc,CAC9BO,YAAY,KAAKpW,OAAjB,GAA2B8V,WAA3B,GAAyChS,WAAW,CAACsS,YAAD,CADtB,EAE9BA,YAF8B,EAG9B5B,OAH8B,EAI9B9M,CAAC,GAAG,CAJ0B,EAK9BgB,WAL8B,EAM9BiN,OAN8B,CAAhC;AAQA,SAAOU,WAAW,KAAKD,YAAhB,GACHL,QADG,GAEHM,WAAW,KAAKrW,OAAhB,GACAuV,MAAM,CAACQ,QAAD,EAAW9M,GAAX,CADN,GAEA2D,GAAG,CACDoJ,SAAS,GAAIF,WAAW,GAAGQ,QAAQ,EAAX,GAAgB,EAA/B,GAAqCP,QAD7C,EAED9M,GAFC,EAGDoN,WAHC,CAJP;AASD;;AAED,SAASE,OAAT,CAAiBpN,UAAjB,EAA6BqL,OAA7B,EAAsCtU,KAAtC,EAA6C;AAC3C,SAAOwV,UAAU,CAACvM,UAAD,EAAaqL,OAAb,EAAsBxU,OAAtB,EAA+B,YAAY;AAAE,WAAOE,KAAP;AAAe,GAA5D,CAAjB;AACD;;AAED,SAASsW,KAAT,CAAehC,OAAf,EAAwBlP,CAAxB,EAA2B;AACzB,SAAOiR,OAAO,CAAC,IAAD,EAAO/B,OAAP,EAAgBlP,CAAhB,CAAd;AACD;;AAED,SAASmR,QAAT,CAAkBtN,UAAlB,EAA8BqL,OAA9B,EAAuC;AACrC,SAAOkB,UAAU,CAACvM,UAAD,EAAaqL,OAAb,EAAsB,YAAY;AAAE,WAAOxU,OAAP;AAAiB,GAArD,CAAjB;AACD;;AAED,SAAS0W,QAAT,CAAkBlC,OAAlB,EAA2B;AACzB,SAAOiC,QAAQ,CAAC,IAAD,EAAOjC,OAAP,CAAf;AACD;;AAED,SAASmC,QAAT,CAAkBxN,UAAlB,EAA8BF,GAA9B,EAAmCP,WAAnC,EAAgDiN,OAAhD,EAAyD;AACvD,SAAOD,UAAU,CAACvM,UAAD,EAAa,CAACF,GAAD,CAAb,EAAoBP,WAApB,EAAiCiN,OAAjC,CAAjB;AACD;;AAED,SAAShG,MAAT,CAAgB1G,GAAhB,EAAqBP,WAArB,EAAkCiN,OAAlC,EAA2C;AACzC,SAAOvN,SAAS,CAACvB,MAAV,KAAqB,CAArB,GACHoC,GAAG,CAAC,IAAD,CADA,GAEH0N,QAAQ,CAAC,IAAD,EAAO1N,GAAP,EAAYP,WAAZ,EAAyBiN,OAAzB,CAFZ;AAGD;;AAED,SAASiB,QAAT,CAAkBpC,OAAlB,EAA2B9L,WAA3B,EAAwCiN,OAAxC,EAAiD;AAC/C,SAAOD,UAAU,CAAC,IAAD,EAAOlB,OAAP,EAAgB9L,WAAhB,EAA6BiN,OAA7B,CAAjB;AACD;;AAED,SAASkB,OAAT,GAAmB;AACjB,MAAItF,KAAK,GAAG,EAAZ;AAAA,MAAgB0C,GAAG,GAAG7L,SAAS,CAACvB,MAAhC;;AACA,SAAQoN,GAAG,EAAX,EAAgB1C,KAAK,CAAE0C,GAAF,CAAL,GAAe7L,SAAS,CAAE6L,GAAF,CAAxB;;AAEhB,SAAO6C,kBAAkB,CAAC,IAAD,EAAOvF,KAAP,CAAzB;AACD;;AAED,SAASwF,WAAT,CAAqBC,MAArB,EAA6B;AAC3B,MAAIzF,KAAK,GAAG,EAAZ;AAAA,MAAgB0C,GAAG,GAAG7L,SAAS,CAACvB,MAAV,GAAmB,CAAzC;;AACA,SAAQoN,GAAG,KAAK,CAAhB,EAAoB1C,KAAK,CAAE0C,GAAF,CAAL,GAAe7L,SAAS,CAAE6L,GAAG,GAAG,CAAR,CAAxB;;AAEpB,MAAI,OAAO+C,MAAP,KAAkB,UAAtB,EAAkC;AAChC,UAAM,IAAItN,SAAJ,CAAc,8BAA8BsN,MAA5C,CAAN;AACD;;AACD,SAAOF,kBAAkB,CAAC,IAAD,EAAOvF,KAAP,EAAcyF,MAAd,CAAzB;AACD;;AAED,SAASF,kBAAT,CAA4B3N,UAA5B,EAAwC8N,WAAxC,EAAqDD,MAArD,EAA6D;AAC3D,MAAIzF,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAI3I,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGqO,WAAW,CAACpQ,MAAlC,EAA0C+B,EAAE,EAA5C,EAAgD;AAC9C,QAAIsO,YAAY,GAAGxU,eAAe,CAACuU,WAAW,CAACrO,EAAD,CAAZ,CAAlC;;AACA,QAAIsO,YAAY,CAAC1W,IAAb,KAAsB,CAA1B,EAA6B;AAC3B+Q,MAAAA,KAAK,CAACvB,IAAN,CAAWkH,YAAX;AACD;AACF;;AACD,MAAI3F,KAAK,CAAC1K,MAAN,KAAiB,CAArB,EAAwB;AACtB,WAAOsC,UAAP;AACD;;AACD,MACEA,UAAU,CAACpC,KAAX,GAAmBvG,IAAnB,KAA4B,CAA5B,IACA,CAAC2I,UAAU,CAACgO,SADZ,IAEA5F,KAAK,CAAC1K,MAAN,KAAiB,CAHnB,EAIE;AACA,WAAOsC,UAAU,CAACnG,WAAX,CAAuBuO,KAAK,CAAC,CAAD,CAA5B,CAAP;AACD;;AACD,SAAOpI,UAAU,CAACiO,aAAX,CAAyB,UAAUjO,UAAV,EAAsB;AACpD,QAAIkO,mBAAmB,GAAGL,MAAM,GAC5B,UAAU9W,KAAV,EAAiB+I,GAAjB,EAAsB;AACpB0N,MAAAA,QAAQ,CAACxN,UAAD,EAAaF,GAAb,EAAkBjJ,OAAlB,EAA2B,UAAUsX,MAAV,EAAkB;AAAE,eAAOA,MAAM,KAAKtX,OAAX,GAAqBE,KAArB,GAA6B8W,MAAM,CAACM,MAAD,EAASpX,KAAT,EAAgB+I,GAAhB,CAA1C;AAAiE,OAAhH,CAAR;AAED,KAJ2B,GAK5B,UAAU/I,KAAV,EAAiB+I,GAAjB,EAAsB;AACpBE,MAAAA,UAAU,CAACyD,GAAX,CAAe3D,GAAf,EAAoB/I,KAApB;AACD,KAPL;;AAQA,SAAK,IAAI0I,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAG2I,KAAK,CAAC1K,MAA5B,EAAoC+B,EAAE,EAAtC,EAA0C;AACxC2I,MAAAA,KAAK,CAAC3I,EAAD,CAAL,CAAUmK,OAAV,CAAkBsE,mBAAlB;AACD;AACF,GAZM,CAAP;AAaD;;AAED,SAASE,KAAT,CAAepO,UAAf,EAA2B;AACzB,MAAIqO,OAAO,GAAG,EAAd;AAAA,MAAkBvD,GAAG,GAAG7L,SAAS,CAACvB,MAAV,GAAmB,CAA3C;;AACA,SAAQoN,GAAG,KAAK,CAAhB,EAAoBuD,OAAO,CAAEvD,GAAF,CAAP,GAAiB7L,SAAS,CAAE6L,GAAG,GAAG,CAAR,CAA1B;;AAEpB,SAAOwD,gBAAgB,CAACtO,UAAD,EAAaqO,OAAb,CAAvB;AACD;;AAED,SAASE,SAAT,CAAmBV,MAAnB,EAA2B7N,UAA3B,EAAuC;AACrC,MAAIqO,OAAO,GAAG,EAAd;AAAA,MAAkBvD,GAAG,GAAG7L,SAAS,CAACvB,MAAV,GAAmB,CAA3C;;AACA,SAAQoN,GAAG,KAAK,CAAhB,EAAoBuD,OAAO,CAAEvD,GAAF,CAAP,GAAiB7L,SAAS,CAAE6L,GAAG,GAAG,CAAR,CAA1B;;AAEpB,SAAOwD,gBAAgB,CAACtO,UAAD,EAAaqO,OAAb,EAAsBR,MAAtB,CAAvB;AACD;;AAED,SAASW,WAAT,CAAqBxO,UAArB,EAAiC;AAC/B,MAAIqO,OAAO,GAAG,EAAd;AAAA,MAAkBvD,GAAG,GAAG7L,SAAS,CAACvB,MAAV,GAAmB,CAA3C;;AACA,SAAQoN,GAAG,KAAK,CAAhB,EAAoBuD,OAAO,CAAEvD,GAAF,CAAP,GAAiB7L,SAAS,CAAE6L,GAAG,GAAG,CAAR,CAA1B;;AAEpB,SAAO2D,oBAAoB,CAACzO,UAAD,EAAaqO,OAAb,CAA3B;AACD;;AAED,SAASK,eAAT,CAAyBb,MAAzB,EAAiC7N,UAAjC,EAA6C;AAC3C,MAAIqO,OAAO,GAAG,EAAd;AAAA,MAAkBvD,GAAG,GAAG7L,SAAS,CAACvB,MAAV,GAAmB,CAA3C;;AACA,SAAQoN,GAAG,KAAK,CAAhB,EAAoBuD,OAAO,CAAEvD,GAAF,CAAP,GAAiB7L,SAAS,CAAE6L,GAAG,GAAG,CAAR,CAA1B;;AAEpB,SAAO2D,oBAAoB,CAACzO,UAAD,EAAaqO,OAAb,EAAsBR,MAAtB,CAA3B;AACD;;AAED,SAASY,oBAAT,CAA8BzO,UAA9B,EAA0CqO,OAA1C,EAAmDR,MAAnD,EAA2D;AACzD,SAAOS,gBAAgB,CAACtO,UAAD,EAAaqO,OAAb,EAAsBM,cAAc,CAACd,MAAD,CAApC,CAAvB;AACD;;AAED,SAASS,gBAAT,CAA0BtO,UAA1B,EAAsCqO,OAAtC,EAA+CR,MAA/C,EAAuD;AACrD,MAAI,CAAClC,eAAe,CAAC3L,UAAD,CAApB,EAAkC;AAChC,UAAM,IAAIO,SAAJ,CACJ,iDAAiDP,UAD7C,CAAN;AAGD;;AACD,MAAIrF,WAAW,CAACqF,UAAD,CAAf,EAA6B;AAC3B,WAAO,OAAO6N,MAAP,KAAkB,UAAlB,IAAgC7N,UAAU,CAACuO,SAA3C,GACHvO,UAAU,CAACuO,SAAX,CAAqBxK,KAArB,CAA2B/D,UAA3B,EAAuC,CAAE6N,MAAF,EAAWxF,MAAX,CAAmBgG,OAAnB,CAAvC,CADG,GAEHrO,UAAU,CAACoO,KAAX,GACApO,UAAU,CAACoO,KAAX,CAAiBrK,KAAjB,CAAuB/D,UAAvB,EAAmCqO,OAAnC,CADA,GAEArO,UAAU,CAACqI,MAAX,CAAkBtE,KAAlB,CAAwB/D,UAAxB,EAAoCqO,OAApC,CAJJ;AAKD;;AACD,MAAI3R,OAAO,GAAGD,KAAK,CAACC,OAAN,CAAcsD,UAAd,CAAd;AACA,MAAI4O,MAAM,GAAG5O,UAAb;AACA,MAAI3G,UAAU,GAAGqD,OAAO,GAAG5C,iBAAH,GAAuBP,eAA/C;AACA,MAAIsV,SAAS,GAAGnS,OAAO,GACnB,UAAU3F,KAAV,EAAiB;AACf;AACA,QAAI6X,MAAM,KAAK5O,UAAf,EAA2B;AACzB4O,MAAAA,MAAM,GAAG3C,WAAW,CAAC2C,MAAD,CAApB;AACD;;AACDA,IAAAA,MAAM,CAAC/H,IAAP,CAAY9P,KAAZ;AACD,GAPkB,GAQnB,UAAUA,KAAV,EAAiB+I,GAAjB,EAAsB;AACpB,QAAIgP,MAAM,GAAGxR,cAAc,CAACL,IAAf,CAAoB2R,MAApB,EAA4B9O,GAA5B,CAAb;AACA,QAAIiP,OAAO,GACTD,MAAM,IAAIjB,MAAV,GAAmBA,MAAM,CAACe,MAAM,CAAC9O,GAAD,CAAP,EAAc/I,KAAd,EAAqB+I,GAArB,CAAzB,GAAqD/I,KADvD;;AAEA,QAAI,CAAC+X,MAAD,IAAWC,OAAO,KAAKH,MAAM,CAAC9O,GAAD,CAAjC,EAAwC;AACtC;AACA,UAAI8O,MAAM,KAAK5O,UAAf,EAA2B;AACzB4O,QAAAA,MAAM,GAAG3C,WAAW,CAAC2C,MAAD,CAApB;AACD;;AACDA,MAAAA,MAAM,CAAC9O,GAAD,CAAN,GAAciP,OAAd;AACD;AACF,GAnBL;;AAoBA,OAAK,IAAIxQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8P,OAAO,CAAC3Q,MAA5B,EAAoCa,CAAC,EAArC,EAAyC;AACvClF,IAAAA,UAAU,CAACgV,OAAO,CAAC9P,CAAD,CAAR,CAAV,CAAuBqL,OAAvB,CAA+BiF,SAA/B;AACD;;AACD,SAAOD,MAAP;AACD;;AAED,SAASD,cAAT,CAAwBd,MAAxB,EAAgC;AAC9B,WAASmB,UAAT,CAAoBC,QAApB,EAA8BlC,QAA9B,EAAwCjN,GAAxC,EAA6C;AAC3C,WAAO6L,eAAe,CAACsD,QAAD,CAAf,IACLtD,eAAe,CAACoB,QAAD,CADV,IAELmC,YAAY,CAACD,QAAD,EAAWlC,QAAX,CAFP,GAGHuB,gBAAgB,CAACW,QAAD,EAAW,CAAClC,QAAD,CAAX,EAAuBiC,UAAvB,CAHb,GAIHnB,MAAM,GACNA,MAAM,CAACoB,QAAD,EAAWlC,QAAX,EAAqBjN,GAArB,CADA,GAENiN,QANJ;AAOD;;AACD,SAAOiC,UAAP;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASE,YAAT,CAAsBC,gBAAtB,EAAwCC,gBAAxC,EAA0D;AACxD,MAAIC,MAAM,GAAG/V,GAAG,CAAC6V,gBAAD,CAAhB;AACA,MAAIG,MAAM,GAAGhW,GAAG,CAAC8V,gBAAD,CAAhB,CAFwD,CAGxD;AACA;;AACA,SACEnW,SAAS,CAACoW,MAAD,CAAT,KAAsBpW,SAAS,CAACqW,MAAD,CAA/B,IACAxW,OAAO,CAACuW,MAAD,CAAP,KAAoBvW,OAAO,CAACwW,MAAD,CAF7B;AAID;;AAED,SAASC,SAAT,GAAqB;AACnB,MAAInH,KAAK,GAAG,EAAZ;AAAA,MAAgB0C,GAAG,GAAG7L,SAAS,CAACvB,MAAhC;;AACA,SAAQoN,GAAG,EAAX,EAAgB1C,KAAK,CAAE0C,GAAF,CAAL,GAAe7L,SAAS,CAAE6L,GAAF,CAAxB;;AAEhB,SAAO2D,oBAAoB,CAAC,IAAD,EAAOrG,KAAP,CAA3B;AACD;;AAED,SAASoH,aAAT,CAAuB3B,MAAvB,EAA+B;AAC7B,MAAIzF,KAAK,GAAG,EAAZ;AAAA,MAAgB0C,GAAG,GAAG7L,SAAS,CAACvB,MAAV,GAAmB,CAAzC;;AACA,SAAQoN,GAAG,KAAK,CAAhB,EAAoB1C,KAAK,CAAE0C,GAAF,CAAL,GAAe7L,SAAS,CAAE6L,GAAG,GAAG,CAAR,CAAxB;;AAEpB,SAAO2D,oBAAoB,CAAC,IAAD,EAAOrG,KAAP,EAAcyF,MAAd,CAA3B;AACD;;AAED,SAAS4B,OAAT,CAAiBpE,OAAjB,EAA0B;AACxB,MAAIjD,KAAK,GAAG,EAAZ;AAAA,MAAgB0C,GAAG,GAAG7L,SAAS,CAACvB,MAAV,GAAmB,CAAzC;;AACA,SAAQoN,GAAG,KAAK,CAAhB,EAAoB1C,KAAK,CAAE0C,GAAF,CAAL,GAAe7L,SAAS,CAAE6L,GAAG,GAAG,CAAR,CAAxB;;AAEpB,SAAOyB,UAAU,CAAC,IAAD,EAAOlB,OAAP,EAAgB8B,QAAQ,EAAxB,EAA4B,UAAUuC,CAAV,EAAa;AAAE,WAAOpB,gBAAgB,CAACoB,CAAD,EAAItH,KAAJ,CAAvB;AAAoC,GAA/E,CAAjB;AACD;;AAED,SAASuH,WAAT,CAAqBtE,OAArB,EAA8B;AAC5B,MAAIjD,KAAK,GAAG,EAAZ;AAAA,MAAgB0C,GAAG,GAAG7L,SAAS,CAACvB,MAAV,GAAmB,CAAzC;;AACA,SAAQoN,GAAG,KAAK,CAAhB,EAAoB1C,KAAK,CAAE0C,GAAF,CAAL,GAAe7L,SAAS,CAAE6L,GAAG,GAAG,CAAR,CAAxB;;AAEpB,SAAOyB,UAAU,CAAC,IAAD,EAAOlB,OAAP,EAAgB8B,QAAQ,EAAxB,EAA4B,UAAUuC,CAAV,EAAa;AAAE,WAAOjB,oBAAoB,CAACiB,CAAD,EAAItH,KAAJ,CAA3B;AAAwC,GAAnF,CAAjB;AAED;;AAED,SAAS6F,aAAT,CAAuB7P,EAAvB,EAA2B;AACzB,MAAIwR,OAAO,GAAG,KAAKrJ,SAAL,EAAd;AACAnI,EAAAA,EAAE,CAACwR,OAAD,CAAF;AACA,SAAOA,OAAO,CAACC,UAAR,KAAuBD,OAAO,CAACE,aAAR,CAAsB,KAAK9B,SAA3B,CAAvB,GAA+D,IAAtE;AACD;;AAED,SAASzH,SAAT,GAAqB;AACnB,SAAO,KAAKyH,SAAL,GAAiB,IAAjB,GAAwB,KAAK8B,aAAL,CAAmB,IAAI5Y,OAAJ,EAAnB,CAA/B;AACD;;AAED,SAASuP,WAAT,GAAuB;AACrB,SAAO,KAAKqJ,aAAL,EAAP;AACD;;AAED,SAASD,UAAT,GAAsB;AACpB,SAAO,KAAKE,SAAZ;AACD;;AAED,IAAIzJ,GAAG,GAAG,aAAc,UAAU/M,eAAV,EAA2B;AACjD,WAAS+M,GAAT,CAAavP,KAAb,EAAoB;AAClB,WAAOA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKO,SAA5B,GACH6V,QAAQ,EADL,GAEH1M,KAAK,CAAC1J,KAAD,CAAL,IAAgB,CAAC+D,SAAS,CAAC/D,KAAD,CAA1B,GACAA,KADA,GAEAoW,QAAQ,GAAGc,aAAX,CAAyB,UAAUjJ,GAAV,EAAe;AACtC,UAAI5N,IAAI,GAAGmC,eAAe,CAACxC,KAAD,CAA1B;AACAoU,MAAAA,iBAAiB,CAAC/T,IAAI,CAACC,IAAN,CAAjB;AACAD,MAAAA,IAAI,CAACwS,OAAL,CAAa,UAAUzN,CAAV,EAAaD,CAAb,EAAgB;AAAE,eAAO8I,GAAG,CAACvB,GAAJ,CAAQvH,CAAR,EAAWC,CAAX,CAAP;AAAuB,OAAtD;AACD,KAJD,CAJJ;AASD;;AAED,MAAK5C,eAAL,EAAuB+M,GAAG,CAAC7M,SAAJ,GAAgBF,eAAhB;AACvB+M,EAAAA,GAAG,CAAC5M,SAAJ,GAAgBC,MAAM,CAACC,MAAP,CAAeL,eAAe,IAAIA,eAAe,CAACG,SAAlD,CAAhB;AACA4M,EAAAA,GAAG,CAAC5M,SAAJ,CAAcG,WAAd,GAA4ByM,GAA5B;;AAEAA,EAAAA,GAAG,CAACtH,EAAJ,GAAS,SAASA,EAAT,GAAe;AACtB,QAAIgR,SAAS,GAAG,EAAhB;AAAA,QAAoBlF,GAAG,GAAG7L,SAAS,CAACvB,MAApC;;AACA,WAAQoN,GAAG,EAAX,EAAgBkF,SAAS,CAAElF,GAAF,CAAT,GAAmB7L,SAAS,CAAE6L,GAAF,CAA5B;;AAEhB,WAAOqC,QAAQ,GAAGc,aAAX,CAAyB,UAAUjJ,GAAV,EAAe;AAC7C,WAAK,IAAIzG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyR,SAAS,CAACtS,MAA9B,EAAsCa,CAAC,IAAI,CAA3C,EAA8C;AAC5C,YAAIA,CAAC,GAAG,CAAJ,IAASyR,SAAS,CAACtS,MAAvB,EAA+B;AAC7B,gBAAM,IAAI4E,KAAJ,CAAU,4BAA4B0N,SAAS,CAACzR,CAAD,CAA/C,CAAN;AACD;;AACDyG,QAAAA,GAAG,CAACvB,GAAJ,CAAQuM,SAAS,CAACzR,CAAD,CAAjB,EAAsByR,SAAS,CAACzR,CAAC,GAAG,CAAL,CAA/B;AACD;AACF,KAPM,CAAP;AAQD,GAZD;;AAcA+H,EAAAA,GAAG,CAAC5M,SAAJ,CAAcgC,QAAd,GAAyB,SAASA,QAAT,GAAqB;AAC5C,WAAO,KAAKoC,UAAL,CAAgB,OAAhB,EAAyB,GAAzB,CAAP;AACD,GAFD,CA/BiD,CAmCjD;;;AAEAwI,EAAAA,GAAG,CAAC5M,SAAJ,CAAc4F,GAAd,GAAoB,SAASA,GAAT,CAAcpD,CAAd,EAAiBqD,WAAjB,EAA8B;AAChD,WAAO,KAAK0Q,KAAL,GACH,KAAKA,KAAL,CAAW3Q,GAAX,CAAe,CAAf,EAAkBhI,SAAlB,EAA6B4E,CAA7B,EAAgCqD,WAAhC,CADG,GAEHA,WAFJ;AAGD,GAJD,CArCiD,CA2CjD;;;AAEA+G,EAAAA,GAAG,CAAC5M,SAAJ,CAAc+J,GAAd,GAAoB,SAASA,GAAT,CAAcvH,CAAd,EAAiBC,CAAjB,EAAoB;AACtC,WAAO+T,SAAS,CAAC,IAAD,EAAOhU,CAAP,EAAUC,CAAV,CAAhB;AACD,GAFD;;AAIAmK,EAAAA,GAAG,CAAC5M,SAAJ,CAAc0S,MAAd,GAAuB,SAASA,MAAT,CAAiBlQ,CAAjB,EAAoB;AACzC,WAAOgU,SAAS,CAAC,IAAD,EAAOhU,CAAP,EAAUrF,OAAV,CAAhB;AACD,GAFD;;AAIAyP,EAAAA,GAAG,CAAC5M,SAAJ,CAAcyW,SAAd,GAA0B,SAASA,SAAT,CAAoB9S,IAApB,EAA0B;AAClD,QAAI2C,UAAU,GAAG3G,UAAU,CAACgE,IAAD,CAA3B;;AAEA,QAAI2C,UAAU,CAAC3I,IAAX,KAAoB,CAAxB,EAA2B;AACzB,aAAO,IAAP;AACD;;AAED,WAAO,KAAK4W,aAAL,CAAmB,UAAUjJ,GAAV,EAAe;AACvChF,MAAAA,UAAU,CAAC4J,OAAX,CAAmB,UAAU9J,GAAV,EAAe;AAAE,eAAOkF,GAAG,CAACoH,MAAJ,CAAWtM,GAAX,CAAP;AAAyB,OAA7D;AACD,KAFM,CAAP;AAGD,GAVD;;AAYAwG,EAAAA,GAAG,CAAC5M,SAAJ,CAAc0W,KAAd,GAAsB,SAASA,KAAT,GAAkB;AACtC,QAAI,KAAK/Y,IAAL,KAAc,CAAlB,EAAqB;AACnB,aAAO,IAAP;AACD;;AACD,QAAI,KAAK2W,SAAT,EAAoB;AAClB,WAAK3W,IAAL,GAAY,CAAZ;AACA,WAAK4Y,KAAL,GAAa,IAAb;AACA,WAAKI,MAAL,GAAc/Y,SAAd;AACA,WAAKyY,SAAL,GAAiB,IAAjB;AACA,aAAO,IAAP;AACD;;AACD,WAAO5C,QAAQ,EAAf;AACD,GAZD,CAjEiD,CA+EjD;;;AAEA7G,EAAAA,GAAG,CAAC5M,SAAJ,CAAciQ,IAAd,GAAqB,SAASA,IAAT,CAAeF,UAAf,EAA2B;AAC9C;AACA,WAAO7C,UAAU,CAAC4C,WAAW,CAAC,IAAD,EAAOC,UAAP,CAAZ,CAAjB;AACD,GAHD;;AAKAnD,EAAAA,GAAG,CAAC5M,SAAJ,CAAc4W,MAAd,GAAuB,SAASA,MAAT,CAAiBrL,MAAjB,EAAyBwE,UAAzB,EAAqC;AAC1D;AACA,WAAO7C,UAAU,CAAC4C,WAAW,CAAC,IAAD,EAAOC,UAAP,EAAmBxE,MAAnB,CAAZ,CAAjB;AACD,GAHD;;AAKAqB,EAAAA,GAAG,CAAC5M,SAAJ,CAAcsL,GAAd,GAAoB,SAASA,GAAT,CAAcC,MAAd,EAAsBC,OAAtB,EAA+B;AACjD,QAAIL,QAAQ,GAAG,IAAf;AAEA,WAAO,KAAKoJ,aAAL,CAAmB,UAAUjJ,GAAV,EAAe;AACvCA,MAAAA,GAAG,CAAC4E,OAAJ,CAAY,UAAU7S,KAAV,EAAiB+I,GAAjB,EAAsB;AAChCkF,QAAAA,GAAG,CAACvB,GAAJ,CAAQ3D,GAAR,EAAamF,MAAM,CAAChI,IAAP,CAAYiI,OAAZ,EAAqBnO,KAArB,EAA4B+I,GAA5B,EAAiC+E,QAAjC,CAAb;AACD,OAFD;AAGD,KAJM,CAAP;AAKD,GARD,CA3FiD,CAqGjD;;;AAEAyB,EAAAA,GAAG,CAAC5M,SAAJ,CAAc+E,UAAd,GAA2B,SAASA,UAAT,CAAqBxC,IAArB,EAA2BoC,OAA3B,EAAoC;AAC7D,WAAO,IAAIkS,WAAJ,CAAgB,IAAhB,EAAsBtU,IAAtB,EAA4BoC,OAA5B,CAAP;AACD,GAFD;;AAIAiI,EAAAA,GAAG,CAAC5M,SAAJ,CAAcnC,SAAd,GAA0B,SAASA,SAAT,CAAoB6G,EAApB,EAAwBC,OAAxB,EAAiC;AACzD,QAAIwG,QAAQ,GAAG,IAAf;AAEA,QAAI3E,UAAU,GAAG,CAAjB;AACA,SAAK+P,KAAL,IACE,KAAKA,KAAL,CAAWO,OAAX,CAAmB,UAAUhS,KAAV,EAAiB;AAClC0B,MAAAA,UAAU;AACV,aAAO9B,EAAE,CAACI,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,EAAqBqG,QAArB,CAAT;AACD,KAHD,EAGGxG,OAHH,CADF;AAKA,WAAO6B,UAAP;AACD,GAVD;;AAYAoG,EAAAA,GAAG,CAAC5M,SAAJ,CAAcoW,aAAd,GAA8B,SAASA,aAAT,CAAwBW,OAAxB,EAAiC;AAC7D,QAAIA,OAAO,KAAK,KAAKzC,SAArB,EAAgC;AAC9B,aAAO,IAAP;AACD;;AACD,QAAI,CAACyC,OAAL,EAAc;AACZ,UAAI,KAAKpZ,IAAL,KAAc,CAAlB,EAAqB;AACnB,eAAO8V,QAAQ,EAAf;AACD;;AACD,WAAKa,SAAL,GAAiByC,OAAjB;AACA,WAAKV,SAAL,GAAiB,KAAjB;AACA,aAAO,IAAP;AACD;;AACD,WAAOW,OAAO,CAAC,KAAKrZ,IAAN,EAAY,KAAK4Y,KAAjB,EAAwBQ,OAAxB,EAAiC,KAAKJ,MAAtC,CAAd;AACD,GAbD;;AAeA,SAAO/J,GAAP;AACD,CAvIuB,CAuItB/M,eAvIsB,CAAxB;;;AAyIA+M,GAAG,CAAC7F,KAAJ,GAAYA,KAAZ;AAEA,IAAIkQ,YAAY,GAAGrK,GAAG,CAAC5M,SAAvB;AACAiX,YAAY,CAACnQ,aAAD,CAAZ,GAA8B,IAA9B;AACAmQ,YAAY,CAACla,MAAD,CAAZ,GAAuBka,YAAY,CAACvE,MAApC;AACAuE,YAAY,CAACC,SAAb,GAAyBD,YAAY,CAACR,SAAtC;AACAQ,YAAY,CAACtD,KAAb,GAAqBA,KAArB;AACAsD,YAAY,CAACrD,QAAb,GAAwBqD,YAAY,CAACpD,QAAb,GAAwBA,QAAhD;AACAoD,YAAY,CAACnK,MAAb,GAAsBA,MAAtB;AACAmK,YAAY,CAAClD,QAAb,GAAwBA,QAAxB;AACAkD,YAAY,CAACvC,KAAb,GAAqBuC,YAAY,CAACtI,MAAb,GAAsBqF,OAA3C;AACAiD,YAAY,CAACpC,SAAb,GAAyBX,WAAzB;AACA+C,YAAY,CAACpB,SAAb,GAAyBA,SAAzB;AACAoB,YAAY,CAACnB,aAAb,GAA6BA,aAA7B;AACAmB,YAAY,CAAClB,OAAb,GAAuBA,OAAvB;AACAkB,YAAY,CAAChB,WAAb,GAA2BA,WAA3B;AACAgB,YAAY,CAAC1C,aAAb,GAA6BA,aAA7B;AACA0C,YAAY,CAACd,UAAb,GAA0BA,UAA1B;AACAc,YAAY,CAAClK,WAAb,GAA2BA,WAA3B;AACAkK,YAAY,CAAC,mBAAD,CAAZ,GAAoCA,YAAY,CAACpK,SAAb,GAAyBA,SAA7D;;AACAoK,YAAY,CAAC,mBAAD,CAAZ,GAAoC,UAAUE,MAAV,EAAkB7J,GAAlB,EAAuB;AACzD,SAAO6J,MAAM,CAACpN,GAAP,CAAWuD,GAAG,CAAC,CAAD,CAAd,EAAmBA,GAAG,CAAC,CAAD,CAAtB,CAAP;AACD,CAFD;;AAGA2J,YAAY,CAAC,qBAAD,CAAZ,GAAsC,UAAUzN,GAAV,EAAe;AACnD,SAAOA,GAAG,CAACuD,WAAJ,EAAP;AACD,CAFD,EAIA;;;AAEA,IAAIqK,YAAY,GAAG,SAASA,YAAT,CAAsBL,OAAtB,EAA+BtT,OAA/B,EAAwC;AACzD,OAAKsT,OAAL,GAAeA,OAAf;AACA,OAAKtT,OAAL,GAAeA,OAAf;AACD,CAHD;;AAKA2T,YAAY,CAACpX,SAAb,CAAuB4F,GAAvB,GAA6B,SAASA,GAAT,CAAcyR,KAAd,EAAqBC,OAArB,EAA8BlR,GAA9B,EAAmCP,WAAnC,EAAgD;AAC3E,MAAIpC,OAAO,GAAG,KAAKA,OAAnB;;AACA,OAAK,IAAIsC,EAAE,GAAG,CAAT,EAAYqL,GAAG,GAAG3N,OAAO,CAACO,MAA/B,EAAuC+B,EAAE,GAAGqL,GAA5C,EAAiDrL,EAAE,EAAnD,EAAuD;AACrD,QAAIwB,EAAE,CAACnB,GAAD,EAAM3C,OAAO,CAACsC,EAAD,CAAP,CAAY,CAAZ,CAAN,CAAN,EAA6B;AAC3B,aAAOtC,OAAO,CAACsC,EAAD,CAAP,CAAY,CAAZ,CAAP;AACD;AACF;;AACD,SAAOF,WAAP;AACD,CARD;;AAUAuR,YAAY,CAACpX,SAAb,CAAuB8M,MAAvB,GAAgC,SAASA,MAAT,CAAiBiK,OAAjB,EAA0BM,KAA1B,EAAiCC,OAAjC,EAA0ClR,GAA1C,EAA+C/I,KAA/C,EAAsDka,aAAtD,EAAqEC,QAArE,EAA+E;AAC7G,MAAIC,OAAO,GAAGpa,KAAK,KAAKF,OAAxB;AAEA,MAAIsG,OAAO,GAAG,KAAKA,OAAnB;AACA,MAAIiU,GAAG,GAAG,CAAV;AACA,MAAItG,GAAG,GAAG3N,OAAO,CAACO,MAAlB;;AACA,SAAO0T,GAAG,GAAGtG,GAAb,EAAkBsG,GAAG,EAArB,EAAyB;AACvB,QAAInQ,EAAE,CAACnB,GAAD,EAAM3C,OAAO,CAACiU,GAAD,CAAP,CAAa,CAAb,CAAN,CAAN,EAA8B;AAC5B;AACD;AACF;;AACD,MAAIC,MAAM,GAAGD,GAAG,GAAGtG,GAAnB;;AAEA,MAAIuG,MAAM,GAAGlU,OAAO,CAACiU,GAAD,CAAP,CAAa,CAAb,MAAoBra,KAAvB,GAA+Boa,OAAzC,EAAkD;AAChD,WAAO,IAAP;AACD;;AAEDna,EAAAA,MAAM,CAACka,QAAD,CAAN;AACA,GAACC,OAAO,IAAI,CAACE,MAAb,KAAwBra,MAAM,CAACia,aAAD,CAA9B;;AAEA,MAAIE,OAAO,IAAIhU,OAAO,CAACO,MAAR,KAAmB,CAAlC,EAAqC;AACnC,WADmC,CAC3B;AACT;;AAED,MAAI,CAAC2T,MAAD,IAAW,CAACF,OAAZ,IAAuBhU,OAAO,CAACO,MAAR,IAAkB4T,kBAA7C,EAAiE;AAC/D,WAAOC,WAAW,CAACd,OAAD,EAAUtT,OAAV,EAAmB2C,GAAnB,EAAwB/I,KAAxB,CAAlB;AACD;;AAED,MAAIya,UAAU,GAAGf,OAAO,IAAIA,OAAO,KAAK,KAAKA,OAA7C;AACA,MAAIgB,UAAU,GAAGD,UAAU,GAAGrU,OAAH,GAAayN,OAAO,CAACzN,OAAD,CAA/C;;AAEA,MAAIkU,MAAJ,EAAY;AACV,QAAIF,OAAJ,EAAa;AACXC,MAAAA,GAAG,KAAKtG,GAAG,GAAG,CAAd,GACI2G,UAAU,CAACtI,GAAX,EADJ,GAEKsI,UAAU,CAACL,GAAD,CAAV,GAAkBK,UAAU,CAACtI,GAAX,EAFvB;AAGD,KAJD,MAIO;AACLsI,MAAAA,UAAU,CAACL,GAAD,CAAV,GAAkB,CAACtR,GAAD,EAAM/I,KAAN,CAAlB;AACD;AACF,GARD,MAQO;AACL0a,IAAAA,UAAU,CAAC5K,IAAX,CAAgB,CAAC/G,GAAD,EAAM/I,KAAN,CAAhB;AACD;;AAED,MAAIya,UAAJ,EAAgB;AACd,SAAKrU,OAAL,GAAesU,UAAf;AACA,WAAO,IAAP;AACD;;AAED,SAAO,IAAIX,YAAJ,CAAiBL,OAAjB,EAA0BgB,UAA1B,CAAP;AACD,CAjDD;;AAmDA,IAAIC,iBAAiB,GAAG,SAASA,iBAAT,CAA2BjB,OAA3B,EAAoCkB,MAApC,EAA4CC,KAA5C,EAAmD;AACzE,OAAKnB,OAAL,GAAeA,OAAf;AACA,OAAKkB,MAAL,GAAcA,MAAd;AACA,OAAKC,KAAL,GAAaA,KAAb;AACD,CAJD;;AAMAF,iBAAiB,CAAChY,SAAlB,CAA4B4F,GAA5B,GAAkC,SAASA,GAAT,CAAcyR,KAAd,EAAqBC,OAArB,EAA8BlR,GAA9B,EAAmCP,WAAnC,EAAgD;AAChF,MAAIyR,OAAO,KAAK1Z,SAAhB,EAA2B;AACzB0Z,IAAAA,OAAO,GAAGnP,IAAI,CAAC/B,GAAD,CAAd;AACD;;AACD,MAAI+R,GAAG,GAAG,MAAM,CAACd,KAAK,KAAK,CAAV,GAAcC,OAAd,GAAwBA,OAAO,KAAKD,KAArC,IAA8Cna,IAApD,CAAV;AACA,MAAI+a,MAAM,GAAG,KAAKA,MAAlB;AACA,SAAO,CAACA,MAAM,GAAGE,GAAV,MAAmB,CAAnB,GACHtS,WADG,GAEH,KAAKqS,KAAL,CAAWE,QAAQ,CAACH,MAAM,GAAIE,GAAG,GAAG,CAAjB,CAAnB,EAAyCvS,GAAzC,CACEyR,KAAK,GAAGra,KADV,EAEEsa,OAFF,EAGElR,GAHF,EAIEP,WAJF,CAFJ;AAQD,CAdD;;AAgBAmS,iBAAiB,CAAChY,SAAlB,CAA4B8M,MAA5B,GAAqC,SAASA,MAAT,CAAiBiK,OAAjB,EAA0BM,KAA1B,EAAiCC,OAAjC,EAA0ClR,GAA1C,EAA+C/I,KAA/C,EAAsDka,aAAtD,EAAqEC,QAArE,EAA+E;AAClH,MAAIF,OAAO,KAAK1Z,SAAhB,EAA2B;AACzB0Z,IAAAA,OAAO,GAAGnP,IAAI,CAAC/B,GAAD,CAAd;AACD;;AACD,MAAIiS,WAAW,GAAG,CAAChB,KAAK,KAAK,CAAV,GAAcC,OAAd,GAAwBA,OAAO,KAAKD,KAArC,IAA8Cna,IAAhE;AACA,MAAIib,GAAG,GAAG,KAAKE,WAAf;AACA,MAAIJ,MAAM,GAAG,KAAKA,MAAlB;AACA,MAAIN,MAAM,GAAG,CAACM,MAAM,GAAGE,GAAV,MAAmB,CAAhC;;AAEA,MAAI,CAACR,MAAD,IAAWta,KAAK,KAAKF,OAAzB,EAAkC;AAChC,WAAO,IAAP;AACD;;AAED,MAAIua,GAAG,GAAGU,QAAQ,CAACH,MAAM,GAAIE,GAAG,GAAG,CAAjB,CAAlB;AACA,MAAID,KAAK,GAAG,KAAKA,KAAjB;AACA,MAAI1N,IAAI,GAAGmN,MAAM,GAAGO,KAAK,CAACR,GAAD,CAAR,GAAgB9Z,SAAjC;AACA,MAAI0a,OAAO,GAAGC,UAAU,CACtB/N,IADsB,EAEtBuM,OAFsB,EAGtBM,KAAK,GAAGra,KAHc,EAItBsa,OAJsB,EAKtBlR,GALsB,EAMtB/I,KANsB,EAOtBka,aAPsB,EAQtBC,QARsB,CAAxB;;AAWA,MAAIc,OAAO,KAAK9N,IAAhB,EAAsB;AACpB,WAAO,IAAP;AACD;;AAED,MAAI,CAACmN,MAAD,IAAWW,OAAX,IAAsBJ,KAAK,CAAClU,MAAN,IAAgBwU,uBAA1C,EAAmE;AACjE,WAAOC,WAAW,CAAC1B,OAAD,EAAUmB,KAAV,EAAiBD,MAAjB,EAAyBI,WAAzB,EAAsCC,OAAtC,CAAlB;AACD;;AAED,MACEX,MAAM,IACN,CAACW,OADD,IAEAJ,KAAK,CAAClU,MAAN,KAAiB,CAFjB,IAGA0U,UAAU,CAACR,KAAK,CAACR,GAAG,GAAG,CAAP,CAAN,CAJZ,EAKE;AACA,WAAOQ,KAAK,CAACR,GAAG,GAAG,CAAP,CAAZ;AACD;;AAED,MAAIC,MAAM,IAAIW,OAAV,IAAqBJ,KAAK,CAAClU,MAAN,KAAiB,CAAtC,IAA2C0U,UAAU,CAACJ,OAAD,CAAzD,EAAoE;AAClE,WAAOA,OAAP;AACD;;AAED,MAAIR,UAAU,GAAGf,OAAO,IAAIA,OAAO,KAAK,KAAKA,OAA7C;AACA,MAAI4B,SAAS,GAAGhB,MAAM,GAAIW,OAAO,GAAGL,MAAH,GAAYA,MAAM,GAAGE,GAAhC,GAAuCF,MAAM,GAAGE,GAAtE;AACA,MAAIS,QAAQ,GAAGjB,MAAM,GACjBW,OAAO,GACLO,KAAK,CAACX,KAAD,EAAQR,GAAR,EAAaY,OAAb,EAAsBR,UAAtB,CADA,GAELgB,SAAS,CAACZ,KAAD,EAAQR,GAAR,EAAaI,UAAb,CAHM,GAIjBiB,QAAQ,CAACb,KAAD,EAAQR,GAAR,EAAaY,OAAb,EAAsBR,UAAtB,CAJZ;;AAMA,MAAIA,UAAJ,EAAgB;AACd,SAAKG,MAAL,GAAcU,SAAd;AACA,SAAKT,KAAL,GAAaU,QAAb;AACA,WAAO,IAAP;AACD;;AAED,SAAO,IAAIZ,iBAAJ,CAAsBjB,OAAtB,EAA+B4B,SAA/B,EAA0CC,QAA1C,CAAP;AACD,CA/DD;;AAiEA,IAAII,gBAAgB,GAAG,SAASA,gBAAT,CAA0BjC,OAA1B,EAAmCkC,KAAnC,EAA0Cf,KAA1C,EAAiD;AACtE,OAAKnB,OAAL,GAAeA,OAAf;AACA,OAAKkC,KAAL,GAAaA,KAAb;AACA,OAAKf,KAAL,GAAaA,KAAb;AACD,CAJD;;AAMAc,gBAAgB,CAAChZ,SAAjB,CAA2B4F,GAA3B,GAAiC,SAASA,GAAT,CAAcyR,KAAd,EAAqBC,OAArB,EAA8BlR,GAA9B,EAAmCP,WAAnC,EAAgD;AAC/E,MAAIyR,OAAO,KAAK1Z,SAAhB,EAA2B;AACzB0Z,IAAAA,OAAO,GAAGnP,IAAI,CAAC/B,GAAD,CAAd;AACD;;AACD,MAAIsR,GAAG,GAAG,CAACL,KAAK,KAAK,CAAV,GAAcC,OAAd,GAAwBA,OAAO,KAAKD,KAArC,IAA8Cna,IAAxD;AACA,MAAIsN,IAAI,GAAG,KAAK0N,KAAL,CAAWR,GAAX,CAAX;AACA,SAAOlN,IAAI,GACPA,IAAI,CAAC5E,GAAL,CAASyR,KAAK,GAAGra,KAAjB,EAAwBsa,OAAxB,EAAiClR,GAAjC,EAAsCP,WAAtC,CADO,GAEPA,WAFJ;AAGD,CATD;;AAWAmT,gBAAgB,CAAChZ,SAAjB,CAA2B8M,MAA3B,GAAoC,SAASA,MAAT,CAAiBiK,OAAjB,EAA0BM,KAA1B,EAAiCC,OAAjC,EAA0ClR,GAA1C,EAA+C/I,KAA/C,EAAsDka,aAAtD,EAAqEC,QAArE,EAA+E;AACjH,MAAIF,OAAO,KAAK1Z,SAAhB,EAA2B;AACzB0Z,IAAAA,OAAO,GAAGnP,IAAI,CAAC/B,GAAD,CAAd;AACD;;AACD,MAAIsR,GAAG,GAAG,CAACL,KAAK,KAAK,CAAV,GAAcC,OAAd,GAAwBA,OAAO,KAAKD,KAArC,IAA8Cna,IAAxD;AACA,MAAIua,OAAO,GAAGpa,KAAK,KAAKF,OAAxB;AACA,MAAI+a,KAAK,GAAG,KAAKA,KAAjB;AACA,MAAI1N,IAAI,GAAG0N,KAAK,CAACR,GAAD,CAAhB;;AAEA,MAAID,OAAO,IAAI,CAACjN,IAAhB,EAAsB;AACpB,WAAO,IAAP;AACD;;AAED,MAAI8N,OAAO,GAAGC,UAAU,CACtB/N,IADsB,EAEtBuM,OAFsB,EAGtBM,KAAK,GAAGra,KAHc,EAItBsa,OAJsB,EAKtBlR,GALsB,EAMtB/I,KANsB,EAOtBka,aAPsB,EAQtBC,QARsB,CAAxB;;AAUA,MAAIc,OAAO,KAAK9N,IAAhB,EAAsB;AACpB,WAAO,IAAP;AACD;;AAED,MAAI0O,QAAQ,GAAG,KAAKD,KAApB;;AACA,MAAI,CAACzO,IAAL,EAAW;AACT0O,IAAAA,QAAQ;AACT,GAFD,MAEO,IAAI,CAACZ,OAAL,EAAc;AACnBY,IAAAA,QAAQ;;AACR,QAAIA,QAAQ,GAAGC,uBAAf,EAAwC;AACtC,aAAOC,SAAS,CAACrC,OAAD,EAAUmB,KAAV,EAAiBgB,QAAjB,EAA2BxB,GAA3B,CAAhB;AACD;AACF;;AAED,MAAII,UAAU,GAAGf,OAAO,IAAIA,OAAO,KAAK,KAAKA,OAA7C;AACA,MAAI6B,QAAQ,GAAGC,KAAK,CAACX,KAAD,EAAQR,GAAR,EAAaY,OAAb,EAAsBR,UAAtB,CAApB;;AAEA,MAAIA,UAAJ,EAAgB;AACd,SAAKmB,KAAL,GAAaC,QAAb;AACA,SAAKhB,KAAL,GAAaU,QAAb;AACA,WAAO,IAAP;AACD;;AAED,SAAO,IAAII,gBAAJ,CAAqBjC,OAArB,EAA8BmC,QAA9B,EAAwCN,QAAxC,CAAP;AACD,CA/CD;;AAiDA,IAAIS,iBAAiB,GAAG,SAASA,iBAAT,CAA2BtC,OAA3B,EAAoCO,OAApC,EAA6C7T,OAA7C,EAAsD;AAC5E,OAAKsT,OAAL,GAAeA,OAAf;AACA,OAAKO,OAAL,GAAeA,OAAf;AACA,OAAK7T,OAAL,GAAeA,OAAf;AACD,CAJD;;AAMA4V,iBAAiB,CAACrZ,SAAlB,CAA4B4F,GAA5B,GAAkC,SAASA,GAAT,CAAcyR,KAAd,EAAqBC,OAArB,EAA8BlR,GAA9B,EAAmCP,WAAnC,EAAgD;AAChF,MAAIpC,OAAO,GAAG,KAAKA,OAAnB;;AACA,OAAK,IAAIsC,EAAE,GAAG,CAAT,EAAYqL,GAAG,GAAG3N,OAAO,CAACO,MAA/B,EAAuC+B,EAAE,GAAGqL,GAA5C,EAAiDrL,EAAE,EAAnD,EAAuD;AACrD,QAAIwB,EAAE,CAACnB,GAAD,EAAM3C,OAAO,CAACsC,EAAD,CAAP,CAAY,CAAZ,CAAN,CAAN,EAA6B;AAC3B,aAAOtC,OAAO,CAACsC,EAAD,CAAP,CAAY,CAAZ,CAAP;AACD;AACF;;AACD,SAAOF,WAAP;AACD,CARD;;AAUAwT,iBAAiB,CAACrZ,SAAlB,CAA4B8M,MAA5B,GAAqC,SAASA,MAAT,CAAiBiK,OAAjB,EAA0BM,KAA1B,EAAiCC,OAAjC,EAA0ClR,GAA1C,EAA+C/I,KAA/C,EAAsDka,aAAtD,EAAqEC,QAArE,EAA+E;AAClH,MAAIF,OAAO,KAAK1Z,SAAhB,EAA2B;AACzB0Z,IAAAA,OAAO,GAAGnP,IAAI,CAAC/B,GAAD,CAAd;AACD;;AAED,MAAIqR,OAAO,GAAGpa,KAAK,KAAKF,OAAxB;;AAEA,MAAIma,OAAO,KAAK,KAAKA,OAArB,EAA8B;AAC5B,QAAIG,OAAJ,EAAa;AACX,aAAO,IAAP;AACD;;AACDna,IAAAA,MAAM,CAACka,QAAD,CAAN;AACAla,IAAAA,MAAM,CAACia,aAAD,CAAN;AACA,WAAO+B,aAAa,CAAC,IAAD,EAAOvC,OAAP,EAAgBM,KAAhB,EAAuBC,OAAvB,EAAgC,CAAClR,GAAD,EAAM/I,KAAN,CAAhC,CAApB;AACD;;AAED,MAAIoG,OAAO,GAAG,KAAKA,OAAnB;AACA,MAAIiU,GAAG,GAAG,CAAV;AACA,MAAItG,GAAG,GAAG3N,OAAO,CAACO,MAAlB;;AACA,SAAO0T,GAAG,GAAGtG,GAAb,EAAkBsG,GAAG,EAArB,EAAyB;AACvB,QAAInQ,EAAE,CAACnB,GAAD,EAAM3C,OAAO,CAACiU,GAAD,CAAP,CAAa,CAAb,CAAN,CAAN,EAA8B;AAC5B;AACD;AACF;;AACD,MAAIC,MAAM,GAAGD,GAAG,GAAGtG,GAAnB;;AAEA,MAAIuG,MAAM,GAAGlU,OAAO,CAACiU,GAAD,CAAP,CAAa,CAAb,MAAoBra,KAAvB,GAA+Boa,OAAzC,EAAkD;AAChD,WAAO,IAAP;AACD;;AAEDna,EAAAA,MAAM,CAACka,QAAD,CAAN;AACA,GAACC,OAAO,IAAI,CAACE,MAAb,KAAwBra,MAAM,CAACia,aAAD,CAA9B;;AAEA,MAAIE,OAAO,IAAIrG,GAAG,KAAK,CAAvB,EAA0B;AACxB,WAAO,IAAImI,SAAJ,CAAcxC,OAAd,EAAuB,KAAKO,OAA5B,EAAqC7T,OAAO,CAACiU,GAAG,GAAG,CAAP,CAA5C,CAAP;AACD;;AAED,MAAII,UAAU,GAAGf,OAAO,IAAIA,OAAO,KAAK,KAAKA,OAA7C;AACA,MAAIgB,UAAU,GAAGD,UAAU,GAAGrU,OAAH,GAAayN,OAAO,CAACzN,OAAD,CAA/C;;AAEA,MAAIkU,MAAJ,EAAY;AACV,QAAIF,OAAJ,EAAa;AACXC,MAAAA,GAAG,KAAKtG,GAAG,GAAG,CAAd,GACI2G,UAAU,CAACtI,GAAX,EADJ,GAEKsI,UAAU,CAACL,GAAD,CAAV,GAAkBK,UAAU,CAACtI,GAAX,EAFvB;AAGD,KAJD,MAIO;AACLsI,MAAAA,UAAU,CAACL,GAAD,CAAV,GAAkB,CAACtR,GAAD,EAAM/I,KAAN,CAAlB;AACD;AACF,GARD,MAQO;AACL0a,IAAAA,UAAU,CAAC5K,IAAX,CAAgB,CAAC/G,GAAD,EAAM/I,KAAN,CAAhB;AACD;;AAED,MAAIya,UAAJ,EAAgB;AACd,SAAKrU,OAAL,GAAesU,UAAf;AACA,WAAO,IAAP;AACD;;AAED,SAAO,IAAIsB,iBAAJ,CAAsBtC,OAAtB,EAA+B,KAAKO,OAApC,EAA6CS,UAA7C,CAAP;AACD,CA1DD;;AA4DA,IAAIwB,SAAS,GAAG,SAASA,SAAT,CAAmBxC,OAAnB,EAA4BO,OAA5B,EAAqCxS,KAArC,EAA4C;AAC1D,OAAKiS,OAAL,GAAeA,OAAf;AACA,OAAKO,OAAL,GAAeA,OAAf;AACA,OAAKxS,KAAL,GAAaA,KAAb;AACD,CAJD;;AAMAyU,SAAS,CAACvZ,SAAV,CAAoB4F,GAApB,GAA0B,SAASA,GAAT,CAAcyR,KAAd,EAAqBC,OAArB,EAA8BlR,GAA9B,EAAmCP,WAAnC,EAAgD;AACxE,SAAO0B,EAAE,CAACnB,GAAD,EAAM,KAAKtB,KAAL,CAAW,CAAX,CAAN,CAAF,GAAyB,KAAKA,KAAL,CAAW,CAAX,CAAzB,GAAyCe,WAAhD;AACD,CAFD;;AAIA0T,SAAS,CAACvZ,SAAV,CAAoB8M,MAApB,GAA6B,SAASA,MAAT,CAAiBiK,OAAjB,EAA0BM,KAA1B,EAAiCC,OAAjC,EAA0ClR,GAA1C,EAA+C/I,KAA/C,EAAsDka,aAAtD,EAAqEC,QAArE,EAA+E;AAC1G,MAAIC,OAAO,GAAGpa,KAAK,KAAKF,OAAxB;AACA,MAAIqc,QAAQ,GAAGjS,EAAE,CAACnB,GAAD,EAAM,KAAKtB,KAAL,CAAW,CAAX,CAAN,CAAjB;;AACA,MAAI0U,QAAQ,GAAGnc,KAAK,KAAK,KAAKyH,KAAL,CAAW,CAAX,CAAb,GAA6B2S,OAAzC,EAAkD;AAChD,WAAO,IAAP;AACD;;AAEDna,EAAAA,MAAM,CAACka,QAAD,CAAN;;AAEA,MAAIC,OAAJ,EAAa;AACXna,IAAAA,MAAM,CAACia,aAAD,CAAN;AACA,WAFW,CAEH;AACT;;AAED,MAAIiC,QAAJ,EAAc;AACZ,QAAIzC,OAAO,IAAIA,OAAO,KAAK,KAAKA,OAAhC,EAAyC;AACvC,WAAKjS,KAAL,CAAW,CAAX,IAAgBzH,KAAhB;AACA,aAAO,IAAP;AACD;;AACD,WAAO,IAAIkc,SAAJ,CAAcxC,OAAd,EAAuB,KAAKO,OAA5B,EAAqC,CAAClR,GAAD,EAAM/I,KAAN,CAArC,CAAP;AACD;;AAEDC,EAAAA,MAAM,CAACia,aAAD,CAAN;AACA,SAAO+B,aAAa,CAAC,IAAD,EAAOvC,OAAP,EAAgBM,KAAhB,EAAuBlP,IAAI,CAAC/B,GAAD,CAA3B,EAAkC,CAACA,GAAD,EAAM/I,KAAN,CAAlC,CAApB;AACD,CAxBD,EA0BA;;;AAEA+Z,YAAY,CAACpX,SAAb,CAAuB8W,OAAvB,GAAiCuC,iBAAiB,CAACrZ,SAAlB,CAA4B8W,OAA5B,GAC/B,UAAUpS,EAAV,EAAcC,OAAd,EAAuB;AACrB,MAAIlB,OAAO,GAAG,KAAKA,OAAnB;;AACA,OAAK,IAAIsC,EAAE,GAAG,CAAT,EAAY0T,QAAQ,GAAGhW,OAAO,CAACO,MAAR,GAAiB,CAA7C,EAAgD+B,EAAE,IAAI0T,QAAtD,EAAgE1T,EAAE,EAAlE,EAAsE;AACpE,QAAIrB,EAAE,CAACjB,OAAO,CAACkB,OAAO,GAAG8U,QAAQ,GAAG1T,EAAd,GAAmBA,EAA3B,CAAR,CAAF,KAA8C,KAAlD,EAAyD;AACvD,aAAO,KAAP;AACD;AACF;AACF,CARH;;AAUAiS,iBAAiB,CAAChY,SAAlB,CAA4B8W,OAA5B,GAAsCkC,gBAAgB,CAAChZ,SAAjB,CAA2B8W,OAA3B,GACpC,UAAUpS,EAAV,EAAcC,OAAd,EAAuB;AACrB,MAAIuT,KAAK,GAAG,KAAKA,KAAjB;;AACA,OAAK,IAAInS,EAAE,GAAG,CAAT,EAAY0T,QAAQ,GAAGvB,KAAK,CAAClU,MAAN,GAAe,CAA3C,EAA8C+B,EAAE,IAAI0T,QAApD,EAA8D1T,EAAE,EAAhE,EAAoE;AAClE,QAAIyE,IAAI,GAAG0N,KAAK,CAACvT,OAAO,GAAG8U,QAAQ,GAAG1T,EAAd,GAAmBA,EAA3B,CAAhB;;AACA,QAAIyE,IAAI,IAAIA,IAAI,CAACsM,OAAL,CAAapS,EAAb,EAAiBC,OAAjB,MAA8B,KAA1C,EAAiD;AAC/C,aAAO,KAAP;AACD;AACF;AACF,CATH,EAWA;;;AACA4U,SAAS,CAACvZ,SAAV,CAAoB8W,OAApB,GAA8B,UAAUpS,EAAV,EAAcC,OAAd,EAAuB;AACnD,SAAOD,EAAE,CAAC,KAAKI,KAAN,CAAT;AACD,CAFD;;AAIA,IAAI+R,WAAW,GAAG,aAAc,UAAU/U,QAAV,EAAoB;AAClD,WAAS+U,WAAT,CAAqBvL,GAArB,EAA0B/I,IAA1B,EAAgCoC,OAAhC,EAAyC;AACvC,SAAK+U,KAAL,GAAanX,IAAb;AACA,SAAKoX,QAAL,GAAgBhV,OAAhB;AACA,SAAKiV,MAAL,GAActO,GAAG,CAACiL,KAAJ,IAAasD,gBAAgB,CAACvO,GAAG,CAACiL,KAAL,CAA3C;AACD;;AAED,MAAKzU,QAAL,EAAgB+U,WAAW,CAAC9W,SAAZ,GAAwB+B,QAAxB;AAChB+U,EAAAA,WAAW,CAAC7W,SAAZ,GAAwBC,MAAM,CAACC,MAAP,CAAe4B,QAAQ,IAAIA,QAAQ,CAAC9B,SAApC,CAAxB;AACA6W,EAAAA,WAAW,CAAC7W,SAAZ,CAAsBG,WAAtB,GAAoC0W,WAApC;;AAEAA,EAAAA,WAAW,CAAC7W,SAAZ,CAAsB+B,IAAtB,GAA6B,SAASA,IAAT,GAAiB;AAC5C,QAAIQ,IAAI,GAAG,KAAKmX,KAAhB;AACA,QAAIlK,KAAK,GAAG,KAAKoK,MAAjB;;AACA,WAAOpK,KAAP,EAAc;AACZ,UAAIhF,IAAI,GAAGgF,KAAK,CAAChF,IAAjB;AACA,UAAIxM,KAAK,GAAGwR,KAAK,CAACxR,KAAN,EAAZ;AACA,UAAIyb,QAAQ,GAAI,KAAK,CAArB;;AACA,UAAIjP,IAAI,CAAC1F,KAAT,EAAgB;AACd,YAAI9G,KAAK,KAAK,CAAd,EAAiB;AACf,iBAAO8b,gBAAgB,CAACvX,IAAD,EAAOiI,IAAI,CAAC1F,KAAZ,CAAvB;AACD;AACF,OAJD,MAIO,IAAI0F,IAAI,CAAC/G,OAAT,EAAkB;AACvBgW,QAAAA,QAAQ,GAAGjP,IAAI,CAAC/G,OAAL,CAAaO,MAAb,GAAsB,CAAjC;;AACA,YAAIhG,KAAK,IAAIyb,QAAb,EAAuB;AACrB,iBAAOK,gBAAgB,CACrBvX,IADqB,EAErBiI,IAAI,CAAC/G,OAAL,CAAa,KAAKkW,QAAL,GAAgBF,QAAQ,GAAGzb,KAA3B,GAAmCA,KAAhD,CAFqB,CAAvB;AAID;AACF,OARM,MAQA;AACLyb,QAAAA,QAAQ,GAAGjP,IAAI,CAAC0N,KAAL,CAAWlU,MAAX,GAAoB,CAA/B;;AACA,YAAIhG,KAAK,IAAIyb,QAAb,EAAuB;AACrB,cAAIM,OAAO,GAAGvP,IAAI,CAAC0N,KAAL,CAAW,KAAKyB,QAAL,GAAgBF,QAAQ,GAAGzb,KAA3B,GAAmCA,KAA9C,CAAd;;AACA,cAAI+b,OAAJ,EAAa;AACX,gBAAIA,OAAO,CAACjV,KAAZ,EAAmB;AACjB,qBAAOgV,gBAAgB,CAACvX,IAAD,EAAOwX,OAAO,CAACjV,KAAf,CAAvB;AACD;;AACD0K,YAAAA,KAAK,GAAG,KAAKoK,MAAL,GAAcC,gBAAgB,CAACE,OAAD,EAAUvK,KAAV,CAAtC;AACD;;AACD;AACD;AACF;;AACDA,MAAAA,KAAK,GAAG,KAAKoK,MAAL,GAAc,KAAKA,MAAL,CAAYI,MAAlC;AACD;;AACD,WAAOpX,YAAY,EAAnB;AACD,GAnCD;;AAqCA,SAAOiU,WAAP;AACD,CAjD+B,CAiD9B/U,QAjD8B,CAAhC;;AAmDA,SAASgY,gBAAT,CAA0BvX,IAA1B,EAAgCuC,KAAhC,EAAuC;AACrC,SAAOxC,aAAa,CAACC,IAAD,EAAOuC,KAAK,CAAC,CAAD,CAAZ,EAAiBA,KAAK,CAAC,CAAD,CAAtB,CAApB;AACD;;AAED,SAAS+U,gBAAT,CAA0BrP,IAA1B,EAAgCyP,IAAhC,EAAsC;AACpC,SAAO;AACLzP,IAAAA,IAAI,EAAEA,IADD;AAELxM,IAAAA,KAAK,EAAE,CAFF;AAGLgc,IAAAA,MAAM,EAAEC;AAHH,GAAP;AAKD;;AAED,SAASjD,OAAT,CAAiBrZ,IAAjB,EAAuBuc,IAAvB,EAA6BnD,OAA7B,EAAsC5O,IAAtC,EAA4C;AAC1C,MAAImD,GAAG,GAAGrL,MAAM,CAACC,MAAP,CAAc+W,YAAd,CAAV;AACA3L,EAAAA,GAAG,CAAC3N,IAAJ,GAAWA,IAAX;AACA2N,EAAAA,GAAG,CAACiL,KAAJ,GAAY2D,IAAZ;AACA5O,EAAAA,GAAG,CAACgJ,SAAJ,GAAgByC,OAAhB;AACAzL,EAAAA,GAAG,CAACqL,MAAJ,GAAaxO,IAAb;AACAmD,EAAAA,GAAG,CAAC+K,SAAJ,GAAgB,KAAhB;AACA,SAAO/K,GAAP;AACD;;AAED,IAAI6O,SAAJ;;AACA,SAAS1G,QAAT,GAAoB;AAClB,SAAO0G,SAAS,KAAKA,SAAS,GAAGnD,OAAO,CAAC,CAAD,CAAxB,CAAhB;AACD;;AAED,SAASR,SAAT,CAAmBlL,GAAnB,EAAwB9I,CAAxB,EAA2BC,CAA3B,EAA8B;AAC5B,MAAI2X,OAAJ;AACA,MAAIC,OAAJ;;AACA,MAAI,CAAC/O,GAAG,CAACiL,KAAT,EAAgB;AACd,QAAI9T,CAAC,KAAKtF,OAAV,EAAmB;AACjB,aAAOmO,GAAP;AACD;;AACD+O,IAAAA,OAAO,GAAG,CAAV;AACAD,IAAAA,OAAO,GAAG,IAAIhD,YAAJ,CAAiB9L,GAAG,CAACgJ,SAArB,EAAgC,CAAC,CAAC9R,CAAD,EAAIC,CAAJ,CAAD,CAAhC,CAAV;AACD,GAND,MAMO;AACL,QAAI8U,aAAa,GAAGna,OAAO,EAA3B;AACA,QAAIoa,QAAQ,GAAGpa,OAAO,EAAtB;AACAgd,IAAAA,OAAO,GAAG7B,UAAU,CAClBjN,GAAG,CAACiL,KADc,EAElBjL,GAAG,CAACgJ,SAFc,EAGlB,CAHkB,EAIlB1W,SAJkB,EAKlB4E,CALkB,EAMlBC,CANkB,EAOlB8U,aAPkB,EAQlBC,QARkB,CAApB;;AAUA,QAAI,CAACA,QAAQ,CAACna,KAAd,EAAqB;AACnB,aAAOiO,GAAP;AACD;;AACD+O,IAAAA,OAAO,GAAG/O,GAAG,CAAC3N,IAAJ,IAAY4Z,aAAa,CAACla,KAAd,GAAuBoF,CAAC,KAAKtF,OAAN,GAAgB,CAAC,CAAjB,GAAqB,CAA5C,GAAiD,CAA7D,CAAV;AACD;;AACD,MAAImO,GAAG,CAACgJ,SAAR,EAAmB;AACjBhJ,IAAAA,GAAG,CAAC3N,IAAJ,GAAW0c,OAAX;AACA/O,IAAAA,GAAG,CAACiL,KAAJ,GAAY6D,OAAZ;AACA9O,IAAAA,GAAG,CAACqL,MAAJ,GAAa/Y,SAAb;AACA0N,IAAAA,GAAG,CAAC+K,SAAJ,GAAgB,IAAhB;AACA,WAAO/K,GAAP;AACD;;AACD,SAAO8O,OAAO,GAAGpD,OAAO,CAACqD,OAAD,EAAUD,OAAV,CAAV,GAA+B3G,QAAQ,EAArD;AACD;;AAED,SAAS8E,UAAT,CACE/N,IADF,EAEEuM,OAFF,EAGEM,KAHF,EAIEC,OAJF,EAKElR,GALF,EAME/I,KANF,EAOEka,aAPF,EAQEC,QARF,EASE;AACA,MAAI,CAAChN,IAAL,EAAW;AACT,QAAInN,KAAK,KAAKF,OAAd,EAAuB;AACrB,aAAOqN,IAAP;AACD;;AACDlN,IAAAA,MAAM,CAACka,QAAD,CAAN;AACAla,IAAAA,MAAM,CAACia,aAAD,CAAN;AACA,WAAO,IAAIgC,SAAJ,CAAcxC,OAAd,EAAuBO,OAAvB,EAAgC,CAAClR,GAAD,EAAM/I,KAAN,CAAhC,CAAP;AACD;;AACD,SAAOmN,IAAI,CAACsC,MAAL,CACLiK,OADK,EAELM,KAFK,EAGLC,OAHK,EAILlR,GAJK,EAKL/I,KALK,EAMLka,aANK,EAOLC,QAPK,CAAP;AASD;;AAED,SAASkB,UAAT,CAAoBlO,IAApB,EAA0B;AACxB,SACEA,IAAI,CAACrK,WAAL,KAAqBoZ,SAArB,IAAkC/O,IAAI,CAACrK,WAAL,KAAqBkZ,iBADzD;AAGD;;AAED,SAASC,aAAT,CAAuB9O,IAAvB,EAA6BuM,OAA7B,EAAsCM,KAAtC,EAA6CC,OAA7C,EAAsDxS,KAAtD,EAA6D;AAC3D,MAAI0F,IAAI,CAAC8M,OAAL,KAAiBA,OAArB,EAA8B;AAC5B,WAAO,IAAI+B,iBAAJ,CAAsBtC,OAAtB,EAA+BO,OAA/B,EAAwC,CAAC9M,IAAI,CAAC1F,KAAN,EAAaA,KAAb,CAAxC,CAAP;AACD;;AAED,MAAIwV,IAAI,GAAG,CAACjD,KAAK,KAAK,CAAV,GAAc7M,IAAI,CAAC8M,OAAnB,GAA6B9M,IAAI,CAAC8M,OAAL,KAAiBD,KAA/C,IAAwDna,IAAnE;AACA,MAAIqd,IAAI,GAAG,CAAClD,KAAK,KAAK,CAAV,GAAcC,OAAd,GAAwBA,OAAO,KAAKD,KAArC,IAA8Cna,IAAzD;AAEA,MAAIob,OAAJ;AACA,MAAIJ,KAAK,GACPoC,IAAI,KAAKC,IAAT,GACI,CAACjB,aAAa,CAAC9O,IAAD,EAAOuM,OAAP,EAAgBM,KAAK,GAAGra,KAAxB,EAA+Bsa,OAA/B,EAAwCxS,KAAxC,CAAd,CADJ,IAEMwT,OAAO,GAAG,IAAIiB,SAAJ,CAAcxC,OAAd,EAAuBO,OAAvB,EAAgCxS,KAAhC,CAAX,EACDwV,IAAI,GAAGC,IAAP,GAAc,CAAC/P,IAAD,EAAO8N,OAAP,CAAd,GAAgC,CAACA,OAAD,EAAU9N,IAAV,CAHpC,CADF;AAMA,SAAO,IAAIwN,iBAAJ,CAAsBjB,OAAtB,EAAgC,KAAKuD,IAAN,GAAe,KAAKC,IAAnD,EAA0DrC,KAA1D,CAAP;AACD;;AAED,SAASL,WAAT,CAAqBd,OAArB,EAA8BtT,OAA9B,EAAuC2C,GAAvC,EAA4C/I,KAA5C,EAAmD;AACjD,MAAI,CAAC0Z,OAAL,EAAc;AACZA,IAAAA,OAAO,GAAG,IAAIvZ,OAAJ,EAAV;AACD;;AACD,MAAIgN,IAAI,GAAG,IAAI+O,SAAJ,CAAcxC,OAAd,EAAuB5O,IAAI,CAAC/B,GAAD,CAA3B,EAAkC,CAACA,GAAD,EAAM/I,KAAN,CAAlC,CAAX;;AACA,OAAK,IAAI0I,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGtC,OAAO,CAACO,MAA9B,EAAsC+B,EAAE,EAAxC,EAA4C;AAC1C,QAAIjB,KAAK,GAAGrB,OAAO,CAACsC,EAAD,CAAnB;AACAyE,IAAAA,IAAI,GAAGA,IAAI,CAACsC,MAAL,CAAYiK,OAAZ,EAAqB,CAArB,EAAwBnZ,SAAxB,EAAmCkH,KAAK,CAAC,CAAD,CAAxC,EAA6CA,KAAK,CAAC,CAAD,CAAlD,CAAP;AACD;;AACD,SAAO0F,IAAP;AACD;;AAED,SAAS4O,SAAT,CAAmBrC,OAAnB,EAA4BmB,KAA5B,EAAmCe,KAAnC,EAA0CuB,SAA1C,EAAqD;AACnD,MAAIvC,MAAM,GAAG,CAAb;AACA,MAAIwC,QAAQ,GAAG,CAAf;AACA,MAAIC,WAAW,GAAG,IAAI3X,KAAJ,CAAUkW,KAAV,CAAlB;;AACA,OAAK,IAAIlT,EAAE,GAAG,CAAT,EAAYoS,GAAG,GAAG,CAAlB,EAAqB/G,GAAG,GAAG8G,KAAK,CAAClU,MAAtC,EAA8C+B,EAAE,GAAGqL,GAAnD,EAAwDrL,EAAE,IAAIoS,GAAG,KAAK,CAAtE,EAAyE;AACvE,QAAI3N,IAAI,GAAG0N,KAAK,CAACnS,EAAD,CAAhB;;AACA,QAAIyE,IAAI,KAAK5M,SAAT,IAAsBmI,EAAE,KAAKyU,SAAjC,EAA4C;AAC1CvC,MAAAA,MAAM,IAAIE,GAAV;AACAuC,MAAAA,WAAW,CAACD,QAAQ,EAAT,CAAX,GAA0BjQ,IAA1B;AACD;AACF;;AACD,SAAO,IAAIwN,iBAAJ,CAAsBjB,OAAtB,EAA+BkB,MAA/B,EAAuCyC,WAAvC,CAAP;AACD;;AAED,SAASjC,WAAT,CAAqB1B,OAArB,EAA8BmB,KAA9B,EAAqCD,MAArC,EAA6C0C,SAA7C,EAAwDnQ,IAAxD,EAA8D;AAC5D,MAAIyO,KAAK,GAAG,CAAZ;AACA,MAAI2B,aAAa,GAAG,IAAI7X,KAAJ,CAAU9F,IAAV,CAApB;;AACA,OAAK,IAAI8I,EAAE,GAAG,CAAd,EAAiBkS,MAAM,KAAK,CAA5B,EAA+BlS,EAAE,IAAIkS,MAAM,MAAM,CAAjD,EAAoD;AAClD2C,IAAAA,aAAa,CAAC7U,EAAD,CAAb,GAAoBkS,MAAM,GAAG,CAAT,GAAaC,KAAK,CAACe,KAAK,EAAN,CAAlB,GAA8Brb,SAAlD;AACD;;AACDgd,EAAAA,aAAa,CAACD,SAAD,CAAb,GAA2BnQ,IAA3B;AACA,SAAO,IAAIwO,gBAAJ,CAAqBjC,OAArB,EAA8BkC,KAAK,GAAG,CAAtC,EAAyC2B,aAAzC,CAAP;AACD;;AAED,SAASxC,QAAT,CAAkByC,CAAlB,EAAqB;AACnBA,EAAAA,CAAC,IAAKA,CAAC,IAAI,CAAN,GAAW,UAAhB;AACAA,EAAAA,CAAC,GAAG,CAACA,CAAC,GAAG,UAAL,KAAqBA,CAAC,IAAI,CAAN,GAAW,UAA/B,CAAJ;AACAA,EAAAA,CAAC,GAAIA,CAAC,IAAIA,CAAC,IAAI,CAAT,CAAF,GAAiB,UAArB;AACAA,EAAAA,CAAC,IAAIA,CAAC,IAAI,CAAV;AACAA,EAAAA,CAAC,IAAIA,CAAC,IAAI,EAAV;AACA,SAAOA,CAAC,GAAG,IAAX;AACD;;AAED,SAAShC,KAAT,CAAenT,KAAf,EAAsBgS,GAAtB,EAA2BoD,GAA3B,EAAgCC,OAAhC,EAAyC;AACvC,MAAIC,QAAQ,GAAGD,OAAO,GAAGrV,KAAH,GAAWwL,OAAO,CAACxL,KAAD,CAAxC;AACAsV,EAAAA,QAAQ,CAACtD,GAAD,CAAR,GAAgBoD,GAAhB;AACA,SAAOE,QAAP;AACD;;AAED,SAASjC,QAAT,CAAkBrT,KAAlB,EAAyBgS,GAAzB,EAA8BoD,GAA9B,EAAmCC,OAAnC,EAA4C;AAC1C,MAAIE,MAAM,GAAGvV,KAAK,CAAC1B,MAAN,GAAe,CAA5B;;AACA,MAAI+W,OAAO,IAAIrD,GAAG,GAAG,CAAN,KAAYuD,MAA3B,EAAmC;AACjCvV,IAAAA,KAAK,CAACgS,GAAD,CAAL,GAAaoD,GAAb;AACA,WAAOpV,KAAP;AACD;;AACD,MAAIsV,QAAQ,GAAG,IAAIjY,KAAJ,CAAUkY,MAAV,CAAf;AACA,MAAIC,KAAK,GAAG,CAAZ;;AACA,OAAK,IAAInV,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGkV,MAAtB,EAA8BlV,EAAE,EAAhC,EAAoC;AAClC,QAAIA,EAAE,KAAK2R,GAAX,EAAgB;AACdsD,MAAAA,QAAQ,CAACjV,EAAD,CAAR,GAAe+U,GAAf;AACAI,MAAAA,KAAK,GAAG,CAAC,CAAT;AACD,KAHD,MAGO;AACLF,MAAAA,QAAQ,CAACjV,EAAD,CAAR,GAAeL,KAAK,CAACK,EAAE,GAAGmV,KAAN,CAApB;AACD;AACF;;AACD,SAAOF,QAAP;AACD;;AAED,SAASlC,SAAT,CAAmBpT,KAAnB,EAA0BgS,GAA1B,EAA+BqD,OAA/B,EAAwC;AACtC,MAAIE,MAAM,GAAGvV,KAAK,CAAC1B,MAAN,GAAe,CAA5B;;AACA,MAAI+W,OAAO,IAAIrD,GAAG,KAAKuD,MAAvB,EAA+B;AAC7BvV,IAAAA,KAAK,CAAC+J,GAAN;AACA,WAAO/J,KAAP;AACD;;AACD,MAAIsV,QAAQ,GAAG,IAAIjY,KAAJ,CAAUkY,MAAV,CAAf;AACA,MAAIC,KAAK,GAAG,CAAZ;;AACA,OAAK,IAAInV,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGkV,MAAtB,EAA8BlV,EAAE,EAAhC,EAAoC;AAClC,QAAIA,EAAE,KAAK2R,GAAX,EAAgB;AACdwD,MAAAA,KAAK,GAAG,CAAR;AACD;;AACDF,IAAAA,QAAQ,CAACjV,EAAD,CAAR,GAAeL,KAAK,CAACK,EAAE,GAAGmV,KAAN,CAApB;AACD;;AACD,SAAOF,QAAP;AACD;;AAED,IAAIpD,kBAAkB,GAAG3a,IAAI,GAAG,CAAhC;AACA,IAAIub,uBAAuB,GAAGvb,IAAI,GAAG,CAArC;AACA,IAAIkc,uBAAuB,GAAGlc,IAAI,GAAG,CAArC;AAEA,IAAIke,cAAc,GAAG,wBAArB;;AAEA,SAASC,MAAT,CAAgBC,SAAhB,EAA2B;AACzB,SAAOnc,OAAO,CAACmc,SAAS,IAAIA,SAAS,CAACF,cAAD,CAAvB,CAAd;AACD;;AAED,IAAIG,IAAI,GAAG,aAAc,UAAUlb,iBAAV,EAA6B;AACpD,WAASkb,IAAT,CAAcje,KAAd,EAAqB;AACnB,QAAIke,KAAK,GAAGC,SAAS,EAArB;;AACA,QAAIne,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKO,SAAhC,EAA2C;AACzC,aAAO2d,KAAP;AACD;;AACD,QAAIH,MAAM,CAAC/d,KAAD,CAAV,EAAmB;AACjB,aAAOA,KAAP;AACD;;AACD,QAAIK,IAAI,GAAG0C,iBAAiB,CAAC/C,KAAD,CAA5B;AACA,QAAIM,IAAI,GAAGD,IAAI,CAACC,IAAhB;;AACA,QAAIA,IAAI,KAAK,CAAb,EAAgB;AACd,aAAO4d,KAAP;AACD;;AACD9J,IAAAA,iBAAiB,CAAC9T,IAAD,CAAjB;;AACA,QAAIA,IAAI,GAAG,CAAP,IAAYA,IAAI,GAAGV,IAAvB,EAA6B;AAC3B,aAAOwe,QAAQ,CAAC,CAAD,EAAI9d,IAAJ,EAAUX,KAAV,EAAiB,IAAjB,EAAuB,IAAI0e,KAAJ,CAAUhe,IAAI,CAAC+G,OAAL,EAAV,CAAvB,CAAf;AACD;;AACD,WAAO8W,KAAK,CAAChH,aAAN,CAAoB,UAAUoH,IAAV,EAAgB;AACzCA,MAAAA,IAAI,CAACC,OAAL,CAAaje,IAAb;AACAD,MAAAA,IAAI,CAACwS,OAAL,CAAa,UAAUzN,CAAV,EAAaoC,CAAb,EAAgB;AAAE,eAAO8W,IAAI,CAAC5R,GAAL,CAASlF,CAAT,EAAYpC,CAAZ,CAAP;AAAwB,OAAvD;AACD,KAHM,CAAP;AAID;;AAED,MAAKrC,iBAAL,EAAyBkb,IAAI,CAACvb,SAAL,GAAiBK,iBAAjB;AACzBkb,EAAAA,IAAI,CAACtb,SAAL,GAAiBC,MAAM,CAACC,MAAP,CAAeE,iBAAiB,IAAIA,iBAAiB,CAACJ,SAAtD,CAAjB;AACAsb,EAAAA,IAAI,CAACtb,SAAL,CAAeG,WAAf,GAA6Bmb,IAA7B;;AAEAA,EAAAA,IAAI,CAAChW,EAAL,GAAU,SAASA,EAAT;AAAa;AAAe;AACpC,WAAO,KAAKC,SAAL,CAAP;AACD,GAFD;;AAIA+V,EAAAA,IAAI,CAACtb,SAAL,CAAegC,QAAf,GAA0B,SAASA,QAAT,GAAqB;AAC7C,WAAO,KAAKoC,UAAL,CAAgB,QAAhB,EAA0B,GAA1B,CAAP;AACD,GAFD,CAhCoD,CAoCpD;;;AAEAkX,EAAAA,IAAI,CAACtb,SAAL,CAAe4F,GAAf,GAAqB,SAASA,GAAT,CAAc5H,KAAd,EAAqB6H,WAArB,EAAkC;AACrD7H,IAAAA,KAAK,GAAGD,SAAS,CAAC,IAAD,EAAOC,KAAP,CAAjB;;AACA,QAAIA,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAG,KAAKL,IAA/B,EAAqC;AACnCK,MAAAA,KAAK,IAAI,KAAK6d,OAAd;AACA,UAAIrR,IAAI,GAAGsR,WAAW,CAAC,IAAD,EAAO9d,KAAP,CAAtB;AACA,aAAOwM,IAAI,IAAIA,IAAI,CAAC9E,KAAL,CAAW1H,KAAK,GAAGd,IAAnB,CAAf;AACD;;AACD,WAAO2I,WAAP;AACD,GARD,CAtCoD,CAgDpD;;;AAEAyV,EAAAA,IAAI,CAACtb,SAAL,CAAe+J,GAAf,GAAqB,SAASA,GAAT,CAAc/L,KAAd,EAAqBX,KAArB,EAA4B;AAC/C,WAAO0e,UAAU,CAAC,IAAD,EAAO/d,KAAP,EAAcX,KAAd,CAAjB;AACD,GAFD;;AAIAie,EAAAA,IAAI,CAACtb,SAAL,CAAe0S,MAAf,GAAwB,SAASA,MAAT,CAAiB1U,KAAjB,EAAwB;AAC9C,WAAO,CAAC,KAAK8H,GAAL,CAAS9H,KAAT,CAAD,GACH,IADG,GAEHA,KAAK,KAAK,CAAV,GACA,KAAKqZ,KAAL,EADA,GAEArZ,KAAK,KAAK,KAAKL,IAAL,GAAY,CAAtB,GACA,KAAK8R,GAAL,EADA,GAEA,KAAKmD,MAAL,CAAY5U,KAAZ,EAAmB,CAAnB,CANJ;AAOD,GARD;;AAUAsd,EAAAA,IAAI,CAACtb,SAAL,CAAegc,MAAf,GAAwB,SAASA,MAAT,CAAiBhe,KAAjB,EAAwBX,KAAxB,EAA+B;AACrD,WAAO,KAAKuV,MAAL,CAAY5U,KAAZ,EAAmB,CAAnB,EAAsBX,KAAtB,CAAP;AACD,GAFD;;AAIAie,EAAAA,IAAI,CAACtb,SAAL,CAAe0W,KAAf,GAAuB,SAASA,KAAT,GAAkB;AACvC,QAAI,KAAK/Y,IAAL,KAAc,CAAlB,EAAqB;AACnB,aAAO,IAAP;AACD;;AACD,QAAI,KAAK2W,SAAT,EAAoB;AAClB,WAAK3W,IAAL,GAAY,KAAKke,OAAL,GAAe,KAAKI,SAAL,GAAiB,CAA5C;AACA,WAAKC,MAAL,GAAclf,KAAd;AACA,WAAKuZ,KAAL,GAAa,KAAK4F,KAAL,GAAa,KAAKxF,MAAL,GAAc/Y,SAAxC;AACA,WAAKyY,SAAL,GAAiB,IAAjB;AACA,aAAO,IAAP;AACD;;AACD,WAAOmF,SAAS,EAAhB;AACD,GAZD;;AAcAF,EAAAA,IAAI,CAACtb,SAAL,CAAemN,IAAf,GAAsB,SAASA,IAAT;AAAe;AAAe;AAClD,QAAIqB,MAAM,GAAGjJ,SAAb;AACA,QAAI6W,OAAO,GAAG,KAAKze,IAAnB;AACA,WAAO,KAAK4W,aAAL,CAAmB,UAAUoH,IAAV,EAAgB;AACxCU,MAAAA,aAAa,CAACV,IAAD,EAAO,CAAP,EAAUS,OAAO,GAAG5N,MAAM,CAACxK,MAA3B,CAAb;;AACA,WAAK,IAAI+B,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGyI,MAAM,CAACxK,MAA7B,EAAqC+B,EAAE,EAAvC,EAA2C;AACzC4V,QAAAA,IAAI,CAAC5R,GAAL,CAASqS,OAAO,GAAGrW,EAAnB,EAAuByI,MAAM,CAACzI,EAAD,CAA7B;AACD;AACF,KALM,CAAP;AAMD,GATD;;AAWAuV,EAAAA,IAAI,CAACtb,SAAL,CAAeyP,GAAf,GAAqB,SAASA,GAAT,GAAgB;AACnC,WAAO4M,aAAa,CAAC,IAAD,EAAO,CAAP,EAAU,CAAC,CAAX,CAApB;AACD,GAFD;;AAIAf,EAAAA,IAAI,CAACtb,SAAL,CAAesc,OAAf,GAAyB,SAASA,OAAT;AAAkB;AAAe;AACxD,QAAI9N,MAAM,GAAGjJ,SAAb;AACA,WAAO,KAAKgP,aAAL,CAAmB,UAAUoH,IAAV,EAAgB;AACxCU,MAAAA,aAAa,CAACV,IAAD,EAAO,CAACnN,MAAM,CAACxK,MAAf,CAAb;;AACA,WAAK,IAAI+B,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGyI,MAAM,CAACxK,MAA7B,EAAqC+B,EAAE,EAAvC,EAA2C;AACzC4V,QAAAA,IAAI,CAAC5R,GAAL,CAAShE,EAAT,EAAayI,MAAM,CAACzI,EAAD,CAAnB;AACD;AACF,KALM,CAAP;AAMD,GARD;;AAUAuV,EAAAA,IAAI,CAACtb,SAAL,CAAeqX,KAAf,GAAuB,SAASA,KAAT,GAAkB;AACvC,WAAOgF,aAAa,CAAC,IAAD,EAAO,CAAP,CAApB;AACD,GAFD,CA3GoD,CA+GpD;;;AAEAf,EAAAA,IAAI,CAACtb,SAAL,CAAe2O,MAAf,GAAwB,SAASA,MAAT;AAAiB;AAAoB;AAC3D,QAAI4N,WAAW,GAAGhX,SAAlB;AAEA,QAAIiX,IAAI,GAAG,EAAX;;AACA,SAAK,IAAI3X,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGU,SAAS,CAACvB,MAA9B,EAAsCa,CAAC,EAAvC,EAA2C;AACzC,UAAI4X,QAAQ,GAAGF,WAAW,CAAC1X,CAAD,CAA1B;AACA,UAAI8B,GAAG,GAAGvG,iBAAiB,CACzB,OAAOqc,QAAP,KAAoB,QAApB,IAAgC5Z,WAAW,CAAC4Z,QAAD,CAA3C,GACIA,QADJ,GAEI,CAACA,QAAD,CAHqB,CAA3B;;AAKA,UAAI9V,GAAG,CAAChJ,IAAJ,KAAa,CAAjB,EAAoB;AAClB6e,QAAAA,IAAI,CAACrP,IAAL,CAAUxG,GAAV;AACD;AACF;;AACD,QAAI6V,IAAI,CAACxY,MAAL,KAAgB,CAApB,EAAuB;AACrB,aAAO,IAAP;AACD;;AACD,QAAI,KAAKrG,IAAL,KAAc,CAAd,IAAmB,CAAC,KAAK2W,SAAzB,IAAsCkI,IAAI,CAACxY,MAAL,KAAgB,CAA1D,EAA6D;AAC3D,aAAO,KAAK7D,WAAL,CAAiBqc,IAAI,CAAC,CAAD,CAArB,CAAP;AACD;;AACD,WAAO,KAAKjI,aAAL,CAAmB,UAAUoH,IAAV,EAAgB;AACxCa,MAAAA,IAAI,CAACtM,OAAL,CAAa,UAAUvJ,GAAV,EAAe;AAAE,eAAOA,GAAG,CAACuJ,OAAJ,CAAY,UAAU7S,KAAV,EAAiB;AAAE,iBAAOse,IAAI,CAACxO,IAAL,CAAU9P,KAAV,CAAP;AAA0B,SAAzD,CAAP;AAAoE,OAAlG;AACD,KAFM,CAAP;AAGD,GAxBD;;AA0BAie,EAAAA,IAAI,CAACtb,SAAL,CAAe4b,OAAf,GAAyB,SAASA,OAAT,CAAkBje,IAAlB,EAAwB;AAC/C,WAAO0e,aAAa,CAAC,IAAD,EAAO,CAAP,EAAU1e,IAAV,CAApB;AACD,GAFD;;AAIA2d,EAAAA,IAAI,CAACtb,SAAL,CAAesL,GAAf,GAAqB,SAASA,GAAT,CAAcC,MAAd,EAAsBC,OAAtB,EAA+B;AAClD,QAAIL,QAAQ,GAAG,IAAf;AAEA,WAAO,KAAKoJ,aAAL,CAAmB,UAAUoH,IAAV,EAAgB;AACxC,WAAK,IAAI9W,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsG,QAAQ,CAACxN,IAA7B,EAAmCkH,CAAC,EAApC,EAAwC;AACtC8W,QAAAA,IAAI,CAAC5R,GAAL,CAASlF,CAAT,EAAY0G,MAAM,CAAChI,IAAP,CAAYiI,OAAZ,EAAqBmQ,IAAI,CAAC/V,GAAL,CAASf,CAAT,CAArB,EAAkCA,CAAlC,EAAqCsG,QAArC,CAAZ;AACD;AACF,KAJM,CAAP;AAKD,GARD,CA/IoD,CAyJpD;;;AAEAmQ,EAAAA,IAAI,CAACtb,SAAL,CAAesT,KAAf,GAAuB,SAASA,KAAT,CAAgBlV,KAAhB,EAAuBC,GAAvB,EAA4B;AACjD,QAAIV,IAAI,GAAG,KAAKA,IAAhB;;AACA,QAAIQ,UAAU,CAACC,KAAD,EAAQC,GAAR,EAAaV,IAAb,CAAd,EAAkC;AAChC,aAAO,IAAP;AACD;;AACD,WAAO0e,aAAa,CAClB,IADkB,EAElB9d,YAAY,CAACH,KAAD,EAAQT,IAAR,CAFM,EAGlBc,UAAU,CAACJ,GAAD,EAAMV,IAAN,CAHQ,CAApB;AAKD,GAVD;;AAYA2d,EAAAA,IAAI,CAACtb,SAAL,CAAe+E,UAAf,GAA4B,SAASA,UAAT,CAAqBxC,IAArB,EAA2BoC,OAA3B,EAAoC;AAC9D,QAAI3G,KAAK,GAAG2G,OAAO,GAAG,KAAKhH,IAAR,GAAe,CAAlC;AACA,QAAI6Q,MAAM,GAAGkO,WAAW,CAAC,IAAD,EAAO/X,OAAP,CAAxB;AACA,WAAO,IAAI7C,QAAJ,CAAa,YAAY;AAC9B,UAAIzE,KAAK,GAAGmR,MAAM,EAAlB;AACA,aAAOnR,KAAK,KAAKsf,IAAV,GACH/Z,YAAY,EADT,GAEHN,aAAa,CAACC,IAAD,EAAOoC,OAAO,GAAG,EAAE3G,KAAL,GAAaA,KAAK,EAAhC,EAAoCX,KAApC,CAFjB;AAGD,KALM,CAAP;AAMD,GATD;;AAWAie,EAAAA,IAAI,CAACtb,SAAL,CAAenC,SAAf,GAA2B,SAASA,SAAT,CAAoB6G,EAApB,EAAwBC,OAAxB,EAAiC;AAC1D,QAAI3G,KAAK,GAAG2G,OAAO,GAAG,KAAKhH,IAAR,GAAe,CAAlC;AACA,QAAI6Q,MAAM,GAAGkO,WAAW,CAAC,IAAD,EAAO/X,OAAP,CAAxB;AACA,QAAItH,KAAJ;;AACA,WAAO,CAACA,KAAK,GAAGmR,MAAM,EAAf,MAAuBmO,IAA9B,EAAoC;AAClC,UAAIjY,EAAE,CAACrH,KAAD,EAAQsH,OAAO,GAAG,EAAE3G,KAAL,GAAaA,KAAK,EAAjC,EAAqC,IAArC,CAAF,KAAiD,KAArD,EAA4D;AAC1D;AACD;AACF;;AACD,WAAOA,KAAP;AACD,GAVD;;AAYAsd,EAAAA,IAAI,CAACtb,SAAL,CAAeoW,aAAf,GAA+B,SAASA,aAAT,CAAwBW,OAAxB,EAAiC;AAC9D,QAAIA,OAAO,KAAK,KAAKzC,SAArB,EAAgC;AAC9B,aAAO,IAAP;AACD;;AACD,QAAI,CAACyC,OAAL,EAAc;AACZ,UAAI,KAAKpZ,IAAL,KAAc,CAAlB,EAAqB;AACnB,eAAO6d,SAAS,EAAhB;AACD;;AACD,WAAKlH,SAAL,GAAiByC,OAAjB;AACA,WAAKV,SAAL,GAAiB,KAAjB;AACA,aAAO,IAAP;AACD;;AACD,WAAOoF,QAAQ,CACb,KAAKI,OADQ,EAEb,KAAKI,SAFQ,EAGb,KAAKC,MAHQ,EAIb,KAAK3F,KAJQ,EAKb,KAAK4F,KALQ,EAMbpF,OANa,EAOb,KAAKJ,MAPQ,CAAf;AASD,GArBD;;AAuBA,SAAO2E,IAAP;AACD,CAtNwB,CAsNvBlb,iBAtNuB,CAAzB;;;AAwNAkb,IAAI,CAACF,MAAL,GAAcA,MAAd;AAEA,IAAIwB,aAAa,GAAGtB,IAAI,CAACtb,SAAzB;AACA4c,aAAa,CAACzB,cAAD,CAAb,GAAgC,IAAhC;AACAyB,aAAa,CAAC7f,MAAD,CAAb,GAAwB6f,aAAa,CAAClK,MAAtC;AACAkK,aAAa,CAAClI,KAAd,GAAsBkI,aAAa,CAACjO,MAApC;AACAiO,aAAa,CAACjJ,KAAd,GAAsBA,KAAtB;AACAiJ,aAAa,CAAC/I,QAAd,GAAyB+I,aAAa,CAAChJ,QAAd,GAAyBC,QAAlD;AACA+I,aAAa,CAAC9P,MAAd,GAAuBA,MAAvB;AACA8P,aAAa,CAAC7I,QAAd,GAAyBA,QAAzB;AACA6I,aAAa,CAAC7G,OAAd,GAAwBA,OAAxB;AACA6G,aAAa,CAAC3G,WAAd,GAA4BA,WAA5B;AACA2G,aAAa,CAACrI,aAAd,GAA8BA,aAA9B;AACAqI,aAAa,CAACzG,UAAd,GAA2BA,UAA3B;AACAyG,aAAa,CAAC7P,WAAd,GAA4BA,WAA5B;AACA6P,aAAa,CAAC,mBAAD,CAAb,GAAqCA,aAAa,CAAC/P,SAAd,GAA0BA,SAA/D;;AACA+P,aAAa,CAAC,mBAAD,CAAb,GAAqC,UAAUzF,MAAV,EAAkB7J,GAAlB,EAAuB;AAC1D,SAAO6J,MAAM,CAAChK,IAAP,CAAYG,GAAZ,CAAP;AACD,CAFD;;AAGAsP,aAAa,CAAC,qBAAD,CAAb,GAAuC,UAAUpT,GAAV,EAAe;AACpD,SAAOA,GAAG,CAACuD,WAAJ,EAAP;AACD,CAFD;;AAIA,IAAI2O,KAAK,GAAG,SAASA,KAAT,CAAehW,KAAf,EAAsBqR,OAAtB,EAA+B;AACzC,OAAKrR,KAAL,GAAaA,KAAb;AACA,OAAKqR,OAAL,GAAeA,OAAf;AACD,CAHD,EAKA;;;AAEA2E,KAAK,CAAC1b,SAAN,CAAgB6c,YAAhB,GAA+B,SAASA,YAAT,CAAuB9F,OAAvB,EAAgC+F,KAAhC,EAAuC9e,KAAvC,EAA8C;AAC3E,MAAIA,KAAK,KAAK8e,KAAV,GAAkB,KAAKA,KAAvB,GAA+B,KAAKpX,KAAL,CAAW1B,MAAX,KAAsB,CAAzD,EAA4D;AAC1D,WAAO,IAAP;AACD;;AACD,MAAI+Y,WAAW,GAAI/e,KAAK,KAAK8e,KAAX,GAAoB5f,IAAtC;;AACA,MAAI6f,WAAW,IAAI,KAAKrX,KAAL,CAAW1B,MAA9B,EAAsC;AACpC,WAAO,IAAI0X,KAAJ,CAAU,EAAV,EAAc3E,OAAd,CAAP;AACD;;AACD,MAAIiG,aAAa,GAAGD,WAAW,KAAK,CAApC;AACA,MAAIE,QAAJ;;AACA,MAAIH,KAAK,GAAG,CAAZ,EAAe;AACb,QAAII,QAAQ,GAAG,KAAKxX,KAAL,CAAWqX,WAAX,CAAf;AACAE,IAAAA,QAAQ,GACNC,QAAQ,IAAIA,QAAQ,CAACL,YAAT,CAAsB9F,OAAtB,EAA+B+F,KAAK,GAAG9f,KAAvC,EAA8CgB,KAA9C,CADd;;AAEA,QAAIif,QAAQ,KAAKC,QAAb,IAAyBF,aAA7B,EAA4C;AAC1C,aAAO,IAAP;AACD;AACF;;AACD,MAAIA,aAAa,IAAI,CAACC,QAAtB,EAAgC;AAC9B,WAAO,IAAP;AACD;;AACD,MAAIE,QAAQ,GAAGC,aAAa,CAAC,IAAD,EAAOrG,OAAP,CAA5B;;AACA,MAAI,CAACiG,aAAL,EAAoB;AAClB,SAAK,IAAIjX,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGgX,WAAtB,EAAmChX,EAAE,EAArC,EAAyC;AACvCoX,MAAAA,QAAQ,CAACzX,KAAT,CAAeK,EAAf,IAAqBnI,SAArB;AACD;AACF;;AACD,MAAIqf,QAAJ,EAAc;AACZE,IAAAA,QAAQ,CAACzX,KAAT,CAAeqX,WAAf,IAA8BE,QAA9B;AACD;;AACD,SAAOE,QAAP;AACD,CA/BD;;AAiCAzB,KAAK,CAAC1b,SAAN,CAAgBqd,WAAhB,GAA8B,SAASA,WAAT,CAAsBtG,OAAtB,EAA+B+F,KAA/B,EAAsC9e,KAAtC,EAA6C;AACzE,MAAIA,KAAK,MAAM8e,KAAK,GAAG,KAAKA,KAAR,GAAgB,CAA3B,CAAL,IAAsC,KAAKpX,KAAL,CAAW1B,MAAX,KAAsB,CAAhE,EAAmE;AACjE,WAAO,IAAP;AACD;;AACD,MAAIsZ,SAAS,GAAKtf,KAAK,GAAG,CAAT,KAAgB8e,KAAjB,GAA0B5f,IAA1C;;AACA,MAAIogB,SAAS,IAAI,KAAK5X,KAAL,CAAW1B,MAA5B,EAAoC;AAClC,WAAO,IAAP;AACD;;AAED,MAAIiZ,QAAJ;;AACA,MAAIH,KAAK,GAAG,CAAZ,EAAe;AACb,QAAII,QAAQ,GAAG,KAAKxX,KAAL,CAAW4X,SAAX,CAAf;AACAL,IAAAA,QAAQ,GACNC,QAAQ,IAAIA,QAAQ,CAACG,WAAT,CAAqBtG,OAArB,EAA8B+F,KAAK,GAAG9f,KAAtC,EAA6CgB,KAA7C,CADd;;AAEA,QAAIif,QAAQ,KAAKC,QAAb,IAAyBI,SAAS,KAAK,KAAK5X,KAAL,CAAW1B,MAAX,GAAoB,CAA/D,EAAkE;AAChE,aAAO,IAAP;AACD;AACF;;AAED,MAAImZ,QAAQ,GAAGC,aAAa,CAAC,IAAD,EAAOrG,OAAP,CAA5B;AACAoG,EAAAA,QAAQ,CAACzX,KAAT,CAAekN,MAAf,CAAsB0K,SAAS,GAAG,CAAlC;;AACA,MAAIL,QAAJ,EAAc;AACZE,IAAAA,QAAQ,CAACzX,KAAT,CAAe4X,SAAf,IAA4BL,QAA5B;AACD;;AACD,SAAOE,QAAP;AACD,CAzBD;;AA2BA,IAAIR,IAAI,GAAG,EAAX;;AAEA,SAASD,WAAT,CAAqBf,IAArB,EAA2BhX,OAA3B,EAAoC;AAClC,MAAI4Y,IAAI,GAAG5B,IAAI,CAACE,OAAhB;AACA,MAAI2B,KAAK,GAAG7B,IAAI,CAACM,SAAjB;AACA,MAAIwB,OAAO,GAAGC,aAAa,CAACF,KAAD,CAA3B;AACA,MAAIG,IAAI,GAAGhC,IAAI,CAACQ,KAAhB;AAEA,SAAOyB,iBAAiB,CAACjC,IAAI,CAACpF,KAAN,EAAaoF,IAAI,CAACO,MAAlB,EAA0B,CAA1B,CAAxB;;AAEA,WAAS0B,iBAAT,CAA2BpT,IAA3B,EAAiCsS,KAAjC,EAAwC3L,MAAxC,EAAgD;AAC9C,WAAO2L,KAAK,KAAK,CAAV,GACHe,WAAW,CAACrT,IAAD,EAAO2G,MAAP,CADR,GAEH2M,WAAW,CAACtT,IAAD,EAAOsS,KAAP,EAAc3L,MAAd,CAFf;AAGD;;AAED,WAAS0M,WAAT,CAAqBrT,IAArB,EAA2B2G,MAA3B,EAAmC;AACjC,QAAIzL,KAAK,GAAGyL,MAAM,KAAKsM,OAAX,GAAqBE,IAAI,IAAIA,IAAI,CAACjY,KAAlC,GAA0C8E,IAAI,IAAIA,IAAI,CAAC9E,KAAnE;AACA,QAAI8M,IAAI,GAAGrB,MAAM,GAAGoM,IAAT,GAAgB,CAAhB,GAAoBA,IAAI,GAAGpM,MAAtC;AACA,QAAIsB,EAAE,GAAG+K,KAAK,GAAGrM,MAAjB;;AACA,QAAIsB,EAAE,GAAGxV,IAAT,EAAe;AACbwV,MAAAA,EAAE,GAAGxV,IAAL;AACD;;AACD,WAAO,YAAY;AACjB,UAAIuV,IAAI,KAAKC,EAAb,EAAiB;AACf,eAAOkK,IAAP;AACD;;AACD,UAAIjF,GAAG,GAAG/S,OAAO,GAAG,EAAE8N,EAAL,GAAUD,IAAI,EAA/B;AACA,aAAO9M,KAAK,IAAIA,KAAK,CAACgS,GAAD,CAArB;AACD,KAND;AAOD;;AAED,WAASoG,WAAT,CAAqBtT,IAArB,EAA2BsS,KAA3B,EAAkC3L,MAAlC,EAA0C;AACxC,QAAI3C,MAAJ;AACA,QAAI9I,KAAK,GAAG8E,IAAI,IAAIA,IAAI,CAAC9E,KAAzB;AACA,QAAI8M,IAAI,GAAGrB,MAAM,GAAGoM,IAAT,GAAgB,CAAhB,GAAqBA,IAAI,GAAGpM,MAAR,IAAmB2L,KAAlD;AACA,QAAIrK,EAAE,GAAG,CAAE+K,KAAK,GAAGrM,MAAT,IAAoB2L,KAArB,IAA8B,CAAvC;;AACA,QAAIrK,EAAE,GAAGxV,IAAT,EAAe;AACbwV,MAAAA,EAAE,GAAGxV,IAAL;AACD;;AACD,WAAO,YAAY;AACjB,aAAO,IAAP,EAAa;AACX,YAAIuR,MAAJ,EAAY;AACV,cAAInR,KAAK,GAAGmR,MAAM,EAAlB;;AACA,cAAInR,KAAK,KAAKsf,IAAd,EAAoB;AAClB,mBAAOtf,KAAP;AACD;;AACDmR,UAAAA,MAAM,GAAG,IAAT;AACD;;AACD,YAAIgE,IAAI,KAAKC,EAAb,EAAiB;AACf,iBAAOkK,IAAP;AACD;;AACD,YAAIjF,GAAG,GAAG/S,OAAO,GAAG,EAAE8N,EAAL,GAAUD,IAAI,EAA/B;AACAhE,QAAAA,MAAM,GAAGoP,iBAAiB,CACxBlY,KAAK,IAAIA,KAAK,CAACgS,GAAD,CADU,EAExBoF,KAAK,GAAG9f,KAFgB,EAGxBmU,MAAM,IAAIuG,GAAG,IAAIoF,KAAX,CAHkB,CAA1B;AAKD;AACF,KAnBD;AAoBD;AACF;;AAED,SAASrB,QAAT,CAAkBsC,MAAlB,EAA0BC,QAA1B,EAAoClB,KAApC,EAA2C5C,IAA3C,EAAiDyD,IAAjD,EAAuD5G,OAAvD,EAAgE5O,IAAhE,EAAsE;AACpE,MAAIwT,IAAI,GAAG1b,MAAM,CAACC,MAAP,CAAc0c,aAAd,CAAX;AACAjB,EAAAA,IAAI,CAAChe,IAAL,GAAYqgB,QAAQ,GAAGD,MAAvB;AACApC,EAAAA,IAAI,CAACE,OAAL,GAAekC,MAAf;AACApC,EAAAA,IAAI,CAACM,SAAL,GAAiB+B,QAAjB;AACArC,EAAAA,IAAI,CAACO,MAAL,GAAcY,KAAd;AACAnB,EAAAA,IAAI,CAACpF,KAAL,GAAa2D,IAAb;AACAyB,EAAAA,IAAI,CAACQ,KAAL,GAAawB,IAAb;AACAhC,EAAAA,IAAI,CAACrH,SAAL,GAAiByC,OAAjB;AACA4E,EAAAA,IAAI,CAAChF,MAAL,GAAcxO,IAAd;AACAwT,EAAAA,IAAI,CAACtF,SAAL,GAAiB,KAAjB;AACA,SAAOsF,IAAP;AACD;;AAED,IAAIsC,UAAJ;;AACA,SAASzC,SAAT,GAAqB;AACnB,SAAOyC,UAAU,KAAKA,UAAU,GAAGxC,QAAQ,CAAC,CAAD,EAAI,CAAJ,EAAOze,KAAP,CAA1B,CAAjB;AACD;;AAED,SAAS+e,UAAT,CAAoBJ,IAApB,EAA0B3d,KAA1B,EAAiCX,KAAjC,EAAwC;AACtCW,EAAAA,KAAK,GAAGD,SAAS,CAAC4d,IAAD,EAAO3d,KAAP,CAAjB;;AAEA,MAAIA,KAAK,KAAKA,KAAd,EAAqB;AACnB,WAAO2d,IAAP;AACD;;AAED,MAAI3d,KAAK,IAAI2d,IAAI,CAAChe,IAAd,IAAsBK,KAAK,GAAG,CAAlC,EAAqC;AACnC,WAAO2d,IAAI,CAACpH,aAAL,CAAmB,UAAUoH,IAAV,EAAgB;AACxC3d,MAAAA,KAAK,GAAG,CAAR,GACIqe,aAAa,CAACV,IAAD,EAAO3d,KAAP,CAAb,CAA2B+L,GAA3B,CAA+B,CAA/B,EAAkC1M,KAAlC,CADJ,GAEIgf,aAAa,CAACV,IAAD,EAAO,CAAP,EAAU3d,KAAK,GAAG,CAAlB,CAAb,CAAkC+L,GAAlC,CAAsC/L,KAAtC,EAA6CX,KAA7C,CAFJ;AAGD,KAJM,CAAP;AAKD;;AAEDW,EAAAA,KAAK,IAAI2d,IAAI,CAACE,OAAd;AAEA,MAAIqC,OAAO,GAAGvC,IAAI,CAACQ,KAAnB;AACA,MAAI/B,OAAO,GAAGuB,IAAI,CAACpF,KAAnB;AACA,MAAIiB,QAAQ,GAAGpa,OAAO,EAAtB;;AACA,MAAIY,KAAK,IAAI0f,aAAa,CAAC/B,IAAI,CAACM,SAAN,CAA1B,EAA4C;AAC1CiC,IAAAA,OAAO,GAAGC,WAAW,CAACD,OAAD,EAAUvC,IAAI,CAACrH,SAAf,EAA0B,CAA1B,EAA6BtW,KAA7B,EAAoCX,KAApC,EAA2Cma,QAA3C,CAArB;AACD,GAFD,MAEO;AACL4C,IAAAA,OAAO,GAAG+D,WAAW,CACnB/D,OADmB,EAEnBuB,IAAI,CAACrH,SAFc,EAGnBqH,IAAI,CAACO,MAHc,EAInBle,KAJmB,EAKnBX,KALmB,EAMnBma,QANmB,CAArB;AAQD;;AAED,MAAI,CAACA,QAAQ,CAACna,KAAd,EAAqB;AACnB,WAAOse,IAAP;AACD;;AAED,MAAIA,IAAI,CAACrH,SAAT,EAAoB;AAClBqH,IAAAA,IAAI,CAACpF,KAAL,GAAa6D,OAAb;AACAuB,IAAAA,IAAI,CAACQ,KAAL,GAAa+B,OAAb;AACAvC,IAAAA,IAAI,CAAChF,MAAL,GAAc/Y,SAAd;AACA+d,IAAAA,IAAI,CAACtF,SAAL,GAAiB,IAAjB;AACA,WAAOsF,IAAP;AACD;;AACD,SAAOF,QAAQ,CAACE,IAAI,CAACE,OAAN,EAAeF,IAAI,CAACM,SAApB,EAA+BN,IAAI,CAACO,MAApC,EAA4C9B,OAA5C,EAAqD8D,OAArD,CAAf;AACD;;AAED,SAASC,WAAT,CAAqB3T,IAArB,EAA2BuM,OAA3B,EAAoC+F,KAApC,EAA2C9e,KAA3C,EAAkDX,KAAlD,EAAyDma,QAAzD,EAAmE;AACjE,MAAIE,GAAG,GAAI1Z,KAAK,KAAK8e,KAAX,GAAoB5f,IAA9B;AACA,MAAIkhB,OAAO,GAAG5T,IAAI,IAAIkN,GAAG,GAAGlN,IAAI,CAAC9E,KAAL,CAAW1B,MAAvC;;AACA,MAAI,CAACoa,OAAD,IAAY/gB,KAAK,KAAKO,SAA1B,EAAqC;AACnC,WAAO4M,IAAP;AACD;;AAED,MAAI8N,OAAJ;;AAEA,MAAIwE,KAAK,GAAG,CAAZ,EAAe;AACb,QAAIuB,SAAS,GAAG7T,IAAI,IAAIA,IAAI,CAAC9E,KAAL,CAAWgS,GAAX,CAAxB;AACA,QAAI4G,YAAY,GAAGH,WAAW,CAC5BE,SAD4B,EAE5BtH,OAF4B,EAG5B+F,KAAK,GAAG9f,KAHoB,EAI5BgB,KAJ4B,EAK5BX,KAL4B,EAM5Bma,QAN4B,CAA9B;;AAQA,QAAI8G,YAAY,KAAKD,SAArB,EAAgC;AAC9B,aAAO7T,IAAP;AACD;;AACD8N,IAAAA,OAAO,GAAG8E,aAAa,CAAC5S,IAAD,EAAOuM,OAAP,CAAvB;AACAuB,IAAAA,OAAO,CAAC5S,KAAR,CAAcgS,GAAd,IAAqB4G,YAArB;AACA,WAAOhG,OAAP;AACD;;AAED,MAAI8F,OAAO,IAAI5T,IAAI,CAAC9E,KAAL,CAAWgS,GAAX,MAAoBra,KAAnC,EAA0C;AACxC,WAAOmN,IAAP;AACD;;AAED,MAAIgN,QAAJ,EAAc;AACZla,IAAAA,MAAM,CAACka,QAAD,CAAN;AACD;;AAEDc,EAAAA,OAAO,GAAG8E,aAAa,CAAC5S,IAAD,EAAOuM,OAAP,CAAvB;;AACA,MAAI1Z,KAAK,KAAKO,SAAV,IAAuB8Z,GAAG,KAAKY,OAAO,CAAC5S,KAAR,CAAc1B,MAAd,GAAuB,CAA1D,EAA6D;AAC3DsU,IAAAA,OAAO,CAAC5S,KAAR,CAAc+J,GAAd;AACD,GAFD,MAEO;AACL6I,IAAAA,OAAO,CAAC5S,KAAR,CAAcgS,GAAd,IAAqBra,KAArB;AACD;;AACD,SAAOib,OAAP;AACD;;AAED,SAAS8E,aAAT,CAAuB5S,IAAvB,EAA6BuM,OAA7B,EAAsC;AACpC,MAAIA,OAAO,IAAIvM,IAAX,IAAmBuM,OAAO,KAAKvM,IAAI,CAACuM,OAAxC,EAAiD;AAC/C,WAAOvM,IAAP;AACD;;AACD,SAAO,IAAIkR,KAAJ,CAAUlR,IAAI,GAAGA,IAAI,CAAC9E,KAAL,CAAW4N,KAAX,EAAH,GAAwB,EAAtC,EAA0CyD,OAA1C,CAAP;AACD;;AAED,SAAS+E,WAAT,CAAqBH,IAArB,EAA2B4C,QAA3B,EAAqC;AACnC,MAAIA,QAAQ,IAAIb,aAAa,CAAC/B,IAAI,CAACM,SAAN,CAA7B,EAA+C;AAC7C,WAAON,IAAI,CAACQ,KAAZ;AACD;;AACD,MAAIoC,QAAQ,GAAG,KAAM5C,IAAI,CAACO,MAAL,GAAclf,KAAnC,EAA2C;AACzC,QAAIwN,IAAI,GAAGmR,IAAI,CAACpF,KAAhB;AACA,QAAIuG,KAAK,GAAGnB,IAAI,CAACO,MAAjB;;AACA,WAAO1R,IAAI,IAAIsS,KAAK,GAAG,CAAvB,EAA0B;AACxBtS,MAAAA,IAAI,GAAGA,IAAI,CAAC9E,KAAL,CAAY6Y,QAAQ,KAAKzB,KAAd,GAAuB5f,IAAlC,CAAP;AACA4f,MAAAA,KAAK,IAAI9f,KAAT;AACD;;AACD,WAAOwN,IAAP;AACD;AACF;;AAED,SAAS6R,aAAT,CAAuBV,IAAvB,EAA6Bvd,KAA7B,EAAoCC,GAApC,EAAyC;AACvC;AACA;AACA,MAAID,KAAK,KAAKR,SAAd,EAAyB;AACvBQ,IAAAA,KAAK,IAAI,CAAT;AACD;;AACD,MAAIC,GAAG,KAAKT,SAAZ,EAAuB;AACrBS,IAAAA,GAAG,IAAI,CAAP;AACD;;AACD,MAAImgB,KAAK,GAAG7C,IAAI,CAACrH,SAAL,IAAkB,IAAI9W,OAAJ,EAA9B;AACA,MAAIihB,SAAS,GAAG9C,IAAI,CAACE,OAArB;AACA,MAAI6C,WAAW,GAAG/C,IAAI,CAACM,SAAvB;AACA,MAAI0C,SAAS,GAAGF,SAAS,GAAGrgB,KAA5B;AACA,MAAIwgB,WAAW,GACbvgB,GAAG,KAAKT,SAAR,GACI8gB,WADJ,GAEIrgB,GAAG,GAAG,CAAN,GACAqgB,WAAW,GAAGrgB,GADd,GAEAogB,SAAS,GAAGpgB,GALlB;;AAMA,MAAIsgB,SAAS,KAAKF,SAAd,IAA2BG,WAAW,KAAKF,WAA/C,EAA4D;AAC1D,WAAO/C,IAAP;AACD,GArBsC,CAuBvC;;;AACA,MAAIgD,SAAS,IAAIC,WAAjB,EAA8B;AAC5B,WAAOjD,IAAI,CAACjF,KAAL,EAAP;AACD;;AAED,MAAImI,QAAQ,GAAGlD,IAAI,CAACO,MAApB;AACA,MAAI9B,OAAO,GAAGuB,IAAI,CAACpF,KAAnB,CA7BuC,CA+BvC;;AACA,MAAIuI,WAAW,GAAG,CAAlB;;AACA,SAAOH,SAAS,GAAGG,WAAZ,GAA0B,CAAjC,EAAoC;AAClC1E,IAAAA,OAAO,GAAG,IAAIsB,KAAJ,CACRtB,OAAO,IAAIA,OAAO,CAAC1U,KAAR,CAAc1B,MAAzB,GAAkC,CAACpG,SAAD,EAAYwc,OAAZ,CAAlC,GAAyD,EADjD,EAERoE,KAFQ,CAAV;AAIAK,IAAAA,QAAQ,IAAI7hB,KAAZ;AACA8hB,IAAAA,WAAW,IAAI,KAAKD,QAApB;AACD;;AACD,MAAIC,WAAJ,EAAiB;AACfH,IAAAA,SAAS,IAAIG,WAAb;AACAL,IAAAA,SAAS,IAAIK,WAAb;AACAF,IAAAA,WAAW,IAAIE,WAAf;AACAJ,IAAAA,WAAW,IAAII,WAAf;AACD;;AAED,MAAIC,aAAa,GAAGrB,aAAa,CAACgB,WAAD,CAAjC;AACA,MAAIM,aAAa,GAAGtB,aAAa,CAACkB,WAAD,CAAjC,CAjDuC,CAmDvC;;AACA,SAAOI,aAAa,IAAI,KAAMH,QAAQ,GAAG7hB,KAAzC,EAAiD;AAC/Cod,IAAAA,OAAO,GAAG,IAAIsB,KAAJ,CACRtB,OAAO,IAAIA,OAAO,CAAC1U,KAAR,CAAc1B,MAAzB,GAAkC,CAACoW,OAAD,CAAlC,GAA8C,EADtC,EAERoE,KAFQ,CAAV;AAIAK,IAAAA,QAAQ,IAAI7hB,KAAZ;AACD,GA1DsC,CA4DvC;;;AACA,MAAIiiB,OAAO,GAAGtD,IAAI,CAACQ,KAAnB;AACA,MAAI+B,OAAO,GACTc,aAAa,GAAGD,aAAhB,GACIjD,WAAW,CAACH,IAAD,EAAOiD,WAAW,GAAG,CAArB,CADf,GAEII,aAAa,GAAGD,aAAhB,GACA,IAAIrD,KAAJ,CAAU,EAAV,EAAc8C,KAAd,CADA,GAEAS,OALN,CA9DuC,CAqEvC;;AACA,MACEA,OAAO,IACPD,aAAa,GAAGD,aADhB,IAEAJ,SAAS,GAAGD,WAFZ,IAGAO,OAAO,CAACvZ,KAAR,CAAc1B,MAJhB,EAKE;AACAoW,IAAAA,OAAO,GAAGgD,aAAa,CAAChD,OAAD,EAAUoE,KAAV,CAAvB;AACA,QAAIhU,IAAI,GAAG4P,OAAX;;AACA,SAAK,IAAI0C,KAAK,GAAG+B,QAAjB,EAA2B/B,KAAK,GAAG9f,KAAnC,EAA0C8f,KAAK,IAAI9f,KAAnD,EAA0D;AACxD,UAAI0a,GAAG,GAAIqH,aAAa,KAAKjC,KAAnB,GAA4B5f,IAAtC;AACAsN,MAAAA,IAAI,GAAGA,IAAI,CAAC9E,KAAL,CAAWgS,GAAX,IAAkB0F,aAAa,CAAC5S,IAAI,CAAC9E,KAAL,CAAWgS,GAAX,CAAD,EAAkB8G,KAAlB,CAAtC;AACD;;AACDhU,IAAAA,IAAI,CAAC9E,KAAL,CAAYqZ,aAAa,KAAK/hB,KAAnB,GAA4BE,IAAvC,IAA+C+hB,OAA/C;AACD,GAnFsC,CAqFvC;;;AACA,MAAIL,WAAW,GAAGF,WAAlB,EAA+B;AAC7BR,IAAAA,OAAO,GAAGA,OAAO,IAAIA,OAAO,CAACb,WAAR,CAAoBmB,KAApB,EAA2B,CAA3B,EAA8BI,WAA9B,CAArB;AACD,GAxFsC,CA0FvC;;;AACA,MAAID,SAAS,IAAIK,aAAjB,EAAgC;AAC9BL,IAAAA,SAAS,IAAIK,aAAb;AACAJ,IAAAA,WAAW,IAAII,aAAf;AACAH,IAAAA,QAAQ,GAAG7hB,KAAX;AACAod,IAAAA,OAAO,GAAG,IAAV;AACA8D,IAAAA,OAAO,GAAGA,OAAO,IAAIA,OAAO,CAACrB,YAAR,CAAqB2B,KAArB,EAA4B,CAA5B,EAA+BG,SAA/B,CAArB,CAL8B,CAO9B;AACD,GARD,MAQO,IAAIA,SAAS,GAAGF,SAAZ,IAAyBO,aAAa,GAAGD,aAA7C,EAA4D;AACjED,IAAAA,WAAW,GAAG,CAAd,CADiE,CAGjE;;AACA,WAAO1E,OAAP,EAAgB;AACd,UAAI8E,UAAU,GAAIP,SAAS,KAAKE,QAAf,GAA2B3hB,IAA5C;;AACA,UAAKgiB,UAAU,KAAKF,aAAa,KAAKH,QAAlC,GAA8C3hB,IAAlD,EAAwD;AACtD;AACD;;AACD,UAAIgiB,UAAJ,EAAgB;AACdJ,QAAAA,WAAW,IAAI,CAAC,KAAKD,QAAN,IAAkBK,UAAjC;AACD;;AACDL,MAAAA,QAAQ,IAAI7hB,KAAZ;AACAod,MAAAA,OAAO,GAAGA,OAAO,CAAC1U,KAAR,CAAcwZ,UAAd,CAAV;AACD,KAdgE,CAgBjE;;;AACA,QAAI9E,OAAO,IAAIuE,SAAS,GAAGF,SAA3B,EAAsC;AACpCrE,MAAAA,OAAO,GAAGA,OAAO,CAACyC,YAAR,CAAqB2B,KAArB,EAA4BK,QAA5B,EAAsCF,SAAS,GAAGG,WAAlD,CAAV;AACD;;AACD,QAAI1E,OAAO,IAAI4E,aAAa,GAAGD,aAA/B,EAA8C;AAC5C3E,MAAAA,OAAO,GAAGA,OAAO,CAACiD,WAAR,CACRmB,KADQ,EAERK,QAFQ,EAGRG,aAAa,GAAGF,WAHR,CAAV;AAKD;;AACD,QAAIA,WAAJ,EAAiB;AACfH,MAAAA,SAAS,IAAIG,WAAb;AACAF,MAAAA,WAAW,IAAIE,WAAf;AACD;AACF;;AAED,MAAInD,IAAI,CAACrH,SAAT,EAAoB;AAClBqH,IAAAA,IAAI,CAAChe,IAAL,GAAYihB,WAAW,GAAGD,SAA1B;AACAhD,IAAAA,IAAI,CAACE,OAAL,GAAe8C,SAAf;AACAhD,IAAAA,IAAI,CAACM,SAAL,GAAiB2C,WAAjB;AACAjD,IAAAA,IAAI,CAACO,MAAL,GAAc2C,QAAd;AACAlD,IAAAA,IAAI,CAACpF,KAAL,GAAa6D,OAAb;AACAuB,IAAAA,IAAI,CAACQ,KAAL,GAAa+B,OAAb;AACAvC,IAAAA,IAAI,CAAChF,MAAL,GAAc/Y,SAAd;AACA+d,IAAAA,IAAI,CAACtF,SAAL,GAAiB,IAAjB;AACA,WAAOsF,IAAP;AACD;;AACD,SAAOF,QAAQ,CAACkD,SAAD,EAAYC,WAAZ,EAAyBC,QAAzB,EAAmCzE,OAAnC,EAA4C8D,OAA5C,CAAf;AACD;;AAED,SAASR,aAAT,CAAuB/f,IAAvB,EAA6B;AAC3B,SAAOA,IAAI,GAAGV,IAAP,GAAc,CAAd,GAAoBU,IAAI,GAAG,CAAR,KAAeX,KAAhB,IAA0BA,KAAnD;AACD;;AAED,IAAIkQ,UAAU,GAAG,aAAc,UAAUN,GAAV,EAAe;AAC5C,WAASM,UAAT,CAAoB7P,KAApB,EAA2B;AACzB,WAAOA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKO,SAA5B,GACHuhB,eAAe,EADZ,GAEHlY,YAAY,CAAC5J,KAAD,CAAZ,GACAA,KADA,GAEA8hB,eAAe,GAAG5K,aAAlB,CAAgC,UAAUjJ,GAAV,EAAe;AAC7C,UAAI5N,IAAI,GAAGmC,eAAe,CAACxC,KAAD,CAA1B;AACAoU,MAAAA,iBAAiB,CAAC/T,IAAI,CAACC,IAAN,CAAjB;AACAD,MAAAA,IAAI,CAACwS,OAAL,CAAa,UAAUzN,CAAV,EAAaD,CAAb,EAAgB;AAAE,eAAO8I,GAAG,CAACvB,GAAJ,CAAQvH,CAAR,EAAWC,CAAX,CAAP;AAAuB,OAAtD;AACD,KAJD,CAJJ;AASD;;AAED,MAAKmK,GAAL,EAAWM,UAAU,CAACnN,SAAX,GAAuB6M,GAAvB;AACXM,EAAAA,UAAU,CAAClN,SAAX,GAAuBC,MAAM,CAACC,MAAP,CAAe0M,GAAG,IAAIA,GAAG,CAAC5M,SAA1B,CAAvB;AACAkN,EAAAA,UAAU,CAAClN,SAAX,CAAqBG,WAArB,GAAmC+M,UAAnC;;AAEAA,EAAAA,UAAU,CAAC5H,EAAX,GAAgB,SAASA,EAAT;AAAa;AAAe;AAC1C,WAAO,KAAKC,SAAL,CAAP;AACD,GAFD;;AAIA2H,EAAAA,UAAU,CAAClN,SAAX,CAAqBgC,QAArB,GAAgC,SAASA,QAAT,GAAqB;AACnD,WAAO,KAAKoC,UAAL,CAAgB,cAAhB,EAAgC,GAAhC,CAAP;AACD,GAFD,CArB4C,CAyB5C;;;AAEA8I,EAAAA,UAAU,CAAClN,SAAX,CAAqB4F,GAArB,GAA2B,SAASA,GAAT,CAAcpD,CAAd,EAAiBqD,WAAjB,EAA8B;AACvD,QAAI7H,KAAK,GAAG,KAAKohB,IAAL,CAAUxZ,GAAV,CAAcpD,CAAd,CAAZ;;AACA,WAAOxE,KAAK,KAAKJ,SAAV,GAAsB,KAAKyhB,KAAL,CAAWzZ,GAAX,CAAe5H,KAAf,EAAsB,CAAtB,CAAtB,GAAiD6H,WAAxD;AACD,GAHD,CA3B4C,CAgC5C;;;AAEAqH,EAAAA,UAAU,CAAClN,SAAX,CAAqB0W,KAArB,GAA6B,SAASA,KAAT,GAAkB;AAC7C,QAAI,KAAK/Y,IAAL,KAAc,CAAlB,EAAqB;AACnB,aAAO,IAAP;AACD;;AACD,QAAI,KAAK2W,SAAT,EAAoB;AAClB,WAAK3W,IAAL,GAAY,CAAZ;;AACA,WAAKyhB,IAAL,CAAU1I,KAAV;;AACA,WAAK2I,KAAL,CAAW3I,KAAX;;AACA,WAAKL,SAAL,GAAiB,IAAjB;AACA,aAAO,IAAP;AACD;;AACD,WAAO8I,eAAe,EAAtB;AACD,GAZD;;AAcAjS,EAAAA,UAAU,CAAClN,SAAX,CAAqB+J,GAArB,GAA2B,SAASA,GAAT,CAAcvH,CAAd,EAAiBC,CAAjB,EAAoB;AAC7C,WAAO6c,gBAAgB,CAAC,IAAD,EAAO9c,CAAP,EAAUC,CAAV,CAAvB;AACD,GAFD;;AAIAyK,EAAAA,UAAU,CAAClN,SAAX,CAAqB0S,MAArB,GAA8B,SAASA,MAAT,CAAiBlQ,CAAjB,EAAoB;AAChD,WAAO8c,gBAAgB,CAAC,IAAD,EAAO9c,CAAP,EAAUrF,OAAV,CAAvB;AACD,GAFD;;AAIA+P,EAAAA,UAAU,CAAClN,SAAX,CAAqBnC,SAArB,GAAiC,SAASA,SAAT,CAAoB6G,EAApB,EAAwBC,OAAxB,EAAiC;AAChE,QAAIwG,QAAQ,GAAG,IAAf;AAEA,WAAO,KAAKkU,KAAL,CAAWxhB,SAAX,CACL,UAAUiH,KAAV,EAAiB;AAAE,aAAOA,KAAK,IAAIJ,EAAE,CAACI,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,EAAqBqG,QAArB,CAAlB;AAAmD,KADjE,EAELxG,OAFK,CAAP;AAID,GAPD;;AASAuI,EAAAA,UAAU,CAAClN,SAAX,CAAqB+E,UAArB,GAAkC,SAASA,UAAT,CAAqBxC,IAArB,EAA2BoC,OAA3B,EAAoC;AACpE,WAAO,KAAK0a,KAAL,CAAWna,YAAX,GAA0BH,UAA1B,CAAqCxC,IAArC,EAA2CoC,OAA3C,CAAP;AACD,GAFD;;AAIAuI,EAAAA,UAAU,CAAClN,SAAX,CAAqBoW,aAArB,GAAqC,SAASA,aAAT,CAAwBW,OAAxB,EAAiC;AACpE,QAAIA,OAAO,KAAK,KAAKzC,SAArB,EAAgC;AAC9B,aAAO,IAAP;AACD;;AACD,QAAIiL,MAAM,GAAG,KAAKH,IAAL,CAAUhJ,aAAV,CAAwBW,OAAxB,CAAb;;AACA,QAAIyI,OAAO,GAAG,KAAKH,KAAL,CAAWjJ,aAAX,CAAyBW,OAAzB,CAAd;;AACA,QAAI,CAACA,OAAL,EAAc;AACZ,UAAI,KAAKpZ,IAAL,KAAc,CAAlB,EAAqB;AACnB,eAAOwhB,eAAe,EAAtB;AACD;;AACD,WAAK7K,SAAL,GAAiByC,OAAjB;AACA,WAAKV,SAAL,GAAiB,KAAjB;AACA,WAAK+I,IAAL,GAAYG,MAAZ;AACA,WAAKF,KAAL,GAAaG,OAAb;AACA,aAAO,IAAP;AACD;;AACD,WAAOC,cAAc,CAACF,MAAD,EAASC,OAAT,EAAkBzI,OAAlB,EAA2B,KAAKJ,MAAhC,CAArB;AACD,GAjBD;;AAmBA,SAAOzJ,UAAP;AACD,CAzF8B,CAyF7BN,GAzF6B,CAA/B;;;AA2FAM,UAAU,CAACjG,YAAX,GAA0BA,YAA1B;AAEAiG,UAAU,CAAClN,SAAX,CAAqBmB,iBAArB,IAA0C,IAA1C;AACA+L,UAAU,CAAClN,SAAX,CAAqBjD,MAArB,IAA+BmQ,UAAU,CAAClN,SAAX,CAAqB0S,MAApD;;AAEA,SAAS+M,cAAT,CAAwBnU,GAAxB,EAA6BqQ,IAA7B,EAAmC5E,OAAnC,EAA4C5O,IAA5C,EAAkD;AAChD,MAAIuX,IAAI,GAAGzf,MAAM,CAACC,MAAP,CAAcgN,UAAU,CAAClN,SAAzB,CAAX;AACA0f,EAAAA,IAAI,CAAC/hB,IAAL,GAAY2N,GAAG,GAAGA,GAAG,CAAC3N,IAAP,GAAc,CAA7B;AACA+hB,EAAAA,IAAI,CAACN,IAAL,GAAY9T,GAAZ;AACAoU,EAAAA,IAAI,CAACL,KAAL,GAAa1D,IAAb;AACA+D,EAAAA,IAAI,CAACpL,SAAL,GAAiByC,OAAjB;AACA2I,EAAAA,IAAI,CAAC/I,MAAL,GAAcxO,IAAd;AACAuX,EAAAA,IAAI,CAACrJ,SAAL,GAAiB,KAAjB;AACA,SAAOqJ,IAAP;AACD;;AAED,IAAIC,iBAAJ;;AACA,SAASR,eAAT,GAA2B;AACzB,SACEQ,iBAAiB,KAChBA,iBAAiB,GAAGF,cAAc,CAAChM,QAAQ,EAAT,EAAa+H,SAAS,EAAtB,CADlB,CADnB;AAID;;AAED,SAAS8D,gBAAT,CAA0BI,IAA1B,EAAgCld,CAAhC,EAAmCC,CAAnC,EAAsC;AACpC,MAAI6I,GAAG,GAAGoU,IAAI,CAACN,IAAf;AACA,MAAIzD,IAAI,GAAG+D,IAAI,CAACL,KAAhB;AACA,MAAIxa,CAAC,GAAGyG,GAAG,CAAC1F,GAAJ,CAAQpD,CAAR,CAAR;AACA,MAAIsD,GAAG,GAAGjB,CAAC,KAAKjH,SAAhB;AACA,MAAI2hB,MAAJ;AACA,MAAIC,OAAJ;;AACA,MAAI/c,CAAC,KAAKtF,OAAV,EAAmB;AACjB;AACA,QAAI,CAAC2I,GAAL,EAAU;AACR,aAAO4Z,IAAP;AACD;;AACD,QAAI/D,IAAI,CAAChe,IAAL,IAAaV,IAAb,IAAqB0e,IAAI,CAAChe,IAAL,IAAa2N,GAAG,CAAC3N,IAAJ,GAAW,CAAjD,EAAoD;AAClD6hB,MAAAA,OAAO,GAAG7D,IAAI,CAAC/M,MAAL,CAAY,UAAU9J,KAAV,EAAiB4S,GAAjB,EAAsB;AAAE,eAAO5S,KAAK,KAAKlH,SAAV,IAAuBiH,CAAC,KAAK6S,GAApC;AAA0C,OAA9E,CAAV;AACA6H,MAAAA,MAAM,GAAGC,OAAO,CACbva,UADM,GAENqG,GAFM,CAEF,UAAUxG,KAAV,EAAiB;AAAE,eAAOA,KAAK,CAAC,CAAD,CAAZ;AAAkB,OAFnC,EAGNuH,IAHM,GAINuT,KAJM,EAAT;;AAKA,UAAIF,IAAI,CAACpL,SAAT,EAAoB;AAClBiL,QAAAA,MAAM,CAACjL,SAAP,GAAmBkL,OAAO,CAAClL,SAAR,GAAoBoL,IAAI,CAACpL,SAA5C;AACD;AACF,KAVD,MAUO;AACLiL,MAAAA,MAAM,GAAGjU,GAAG,CAACoH,MAAJ,CAAWlQ,CAAX,CAAT;AACAgd,MAAAA,OAAO,GAAG3a,CAAC,KAAK8W,IAAI,CAAChe,IAAL,GAAY,CAAlB,GAAsBge,IAAI,CAAClM,GAAL,EAAtB,GAAmCkM,IAAI,CAAC5R,GAAL,CAASlF,CAAT,EAAYjH,SAAZ,CAA7C;AACD;AACF,GAnBD,MAmBO,IAAIkI,GAAJ,EAAS;AACd,QAAIrD,CAAC,KAAKkZ,IAAI,CAAC/V,GAAL,CAASf,CAAT,EAAY,CAAZ,CAAV,EAA0B;AACxB,aAAO6a,IAAP;AACD;;AACDH,IAAAA,MAAM,GAAGjU,GAAT;AACAkU,IAAAA,OAAO,GAAG7D,IAAI,CAAC5R,GAAL,CAASlF,CAAT,EAAY,CAACrC,CAAD,EAAIC,CAAJ,CAAZ,CAAV;AACD,GANM,MAMA;AACL8c,IAAAA,MAAM,GAAGjU,GAAG,CAACvB,GAAJ,CAAQvH,CAAR,EAAWmZ,IAAI,CAAChe,IAAhB,CAAT;AACA6hB,IAAAA,OAAO,GAAG7D,IAAI,CAAC5R,GAAL,CAAS4R,IAAI,CAAChe,IAAd,EAAoB,CAAC6E,CAAD,EAAIC,CAAJ,CAApB,CAAV;AACD;;AACD,MAAIid,IAAI,CAACpL,SAAT,EAAoB;AAClBoL,IAAAA,IAAI,CAAC/hB,IAAL,GAAY4hB,MAAM,CAAC5hB,IAAnB;AACA+hB,IAAAA,IAAI,CAACN,IAAL,GAAYG,MAAZ;AACAG,IAAAA,IAAI,CAACL,KAAL,GAAaG,OAAb;AACAE,IAAAA,IAAI,CAAC/I,MAAL,GAAc/Y,SAAd;AACA8hB,IAAAA,IAAI,CAACrJ,SAAL,GAAiB,IAAjB;AACA,WAAOqJ,IAAP;AACD;;AACD,SAAOD,cAAc,CAACF,MAAD,EAASC,OAAT,CAArB;AACD;;AAED,IAAIK,eAAe,GAAG,yBAAtB;;AAEA,SAASC,OAAT,CAAiBC,UAAjB,EAA6B;AAC3B,SAAO7gB,OAAO,CAAC6gB,UAAU,IAAIA,UAAU,CAACF,eAAD,CAAzB,CAAd;AACD;;AAED,IAAIG,KAAK,GAAG,aAAc,UAAU5f,iBAAV,EAA6B;AACrD,WAAS4f,KAAT,CAAe3iB,KAAf,EAAsB;AACpB,WAAOA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKO,SAA5B,GACHqiB,UAAU,EADP,GAEHH,OAAO,CAACziB,KAAD,CAAP,GACAA,KADA,GAEA4iB,UAAU,GAAGC,OAAb,CAAqB7iB,KAArB,CAJJ;AAKD;;AAED,MAAK+C,iBAAL,EAAyB4f,KAAK,CAACjgB,SAAN,GAAkBK,iBAAlB;AACzB4f,EAAAA,KAAK,CAAChgB,SAAN,GAAkBC,MAAM,CAACC,MAAP,CAAeE,iBAAiB,IAAIA,iBAAiB,CAACJ,SAAtD,CAAlB;AACAggB,EAAAA,KAAK,CAAChgB,SAAN,CAAgBG,WAAhB,GAA8B6f,KAA9B;;AAEAA,EAAAA,KAAK,CAAC1a,EAAN,GAAW,SAASA,EAAT;AAAa;AAAe;AACrC,WAAO,KAAKC,SAAL,CAAP;AACD,GAFD;;AAIAya,EAAAA,KAAK,CAAChgB,SAAN,CAAgBgC,QAAhB,GAA2B,SAASA,QAAT,GAAqB;AAC9C,WAAO,KAAKoC,UAAL,CAAgB,SAAhB,EAA2B,GAA3B,CAAP;AACD,GAFD,CAjBqD,CAqBrD;;;AAEA4b,EAAAA,KAAK,CAAChgB,SAAN,CAAgB4F,GAAhB,GAAsB,SAASA,GAAT,CAAc5H,KAAd,EAAqB6H,WAArB,EAAkC;AACtD,QAAIsa,IAAI,GAAG,KAAKC,KAAhB;AACApiB,IAAAA,KAAK,GAAGD,SAAS,CAAC,IAAD,EAAOC,KAAP,CAAjB;;AACA,WAAOmiB,IAAI,IAAIniB,KAAK,EAApB,EAAwB;AACtBmiB,MAAAA,IAAI,GAAGA,IAAI,CAACpe,IAAZ;AACD;;AACD,WAAOoe,IAAI,GAAGA,IAAI,CAAC9iB,KAAR,GAAgBwI,WAA3B;AACD,GAPD;;AASAma,EAAAA,KAAK,CAAChgB,SAAN,CAAgBqgB,IAAhB,GAAuB,SAASA,IAAT,GAAiB;AACtC,WAAO,KAAKD,KAAL,IAAc,KAAKA,KAAL,CAAW/iB,KAAhC;AACD,GAFD,CAhCqD,CAoCrD;;;AAEA2iB,EAAAA,KAAK,CAAChgB,SAAN,CAAgBmN,IAAhB,GAAuB,SAASA,IAAT;AAAe;AAAe;AACnD,QAAIoP,WAAW,GAAGhX,SAAlB;;AAEA,QAAIA,SAAS,CAACvB,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,aAAO,IAAP;AACD;;AACD,QAAIqW,OAAO,GAAG,KAAK1c,IAAL,GAAY4H,SAAS,CAACvB,MAApC;AACA,QAAImc,IAAI,GAAG,KAAKC,KAAhB;;AACA,SAAK,IAAIra,EAAE,GAAGR,SAAS,CAACvB,MAAV,GAAmB,CAAjC,EAAoC+B,EAAE,IAAI,CAA1C,EAA6CA,EAAE,EAA/C,EAAmD;AACjDoa,MAAAA,IAAI,GAAG;AACL9iB,QAAAA,KAAK,EAAEkf,WAAW,CAACxW,EAAD,CADb;AAELhE,QAAAA,IAAI,EAAEoe;AAFD,OAAP;AAID;;AACD,QAAI,KAAK7L,SAAT,EAAoB;AAClB,WAAK3W,IAAL,GAAY0c,OAAZ;AACA,WAAK+F,KAAL,GAAaD,IAAb;AACA,WAAKxJ,MAAL,GAAc/Y,SAAd;AACA,WAAKyY,SAAL,GAAiB,IAAjB;AACA,aAAO,IAAP;AACD;;AACD,WAAOiK,SAAS,CAACjG,OAAD,EAAU8F,IAAV,CAAhB;AACD,GAtBD;;AAwBAH,EAAAA,KAAK,CAAChgB,SAAN,CAAgBkgB,OAAhB,GAA0B,SAASA,OAAT,CAAkBxiB,IAAlB,EAAwB;AAChDA,IAAAA,IAAI,GAAG0C,iBAAiB,CAAC1C,IAAD,CAAxB;;AACA,QAAIA,IAAI,CAACC,IAAL,KAAc,CAAlB,EAAqB;AACnB,aAAO,IAAP;AACD;;AACD,QAAI,KAAKA,IAAL,KAAc,CAAd,IAAmBmiB,OAAO,CAACpiB,IAAD,CAA9B,EAAsC;AACpC,aAAOA,IAAP;AACD;;AACD+T,IAAAA,iBAAiB,CAAC/T,IAAI,CAACC,IAAN,CAAjB;AACA,QAAI0c,OAAO,GAAG,KAAK1c,IAAnB;AACA,QAAIwiB,IAAI,GAAG,KAAKC,KAAhB;;AACA1iB,IAAAA,IAAI,CAACG,SAAL,CAAe,UAAUR,KAAV,EAAiB;AAC9Bgd,MAAAA,OAAO;AACP8F,MAAAA,IAAI,GAAG;AACL9iB,QAAAA,KAAK,EAAEA,KADF;AAEL0E,QAAAA,IAAI,EAAEoe;AAFD,OAAP;AAID,KAND;AAMG;AAAc,QANjB;;AAOA,QAAI,KAAK7L,SAAT,EAAoB;AAClB,WAAK3W,IAAL,GAAY0c,OAAZ;AACA,WAAK+F,KAAL,GAAaD,IAAb;AACA,WAAKxJ,MAAL,GAAc/Y,SAAd;AACA,WAAKyY,SAAL,GAAiB,IAAjB;AACA,aAAO,IAAP;AACD;;AACD,WAAOiK,SAAS,CAACjG,OAAD,EAAU8F,IAAV,CAAhB;AACD,GA1BD;;AA4BAH,EAAAA,KAAK,CAAChgB,SAAN,CAAgByP,GAAhB,GAAsB,SAASA,GAAT,GAAgB;AACpC,WAAO,KAAK6D,KAAL,CAAW,CAAX,CAAP;AACD,GAFD;;AAIA0M,EAAAA,KAAK,CAAChgB,SAAN,CAAgB0W,KAAhB,GAAwB,SAASA,KAAT,GAAkB;AACxC,QAAI,KAAK/Y,IAAL,KAAc,CAAlB,EAAqB;AACnB,aAAO,IAAP;AACD;;AACD,QAAI,KAAK2W,SAAT,EAAoB;AAClB,WAAK3W,IAAL,GAAY,CAAZ;AACA,WAAKyiB,KAAL,GAAaxiB,SAAb;AACA,WAAK+Y,MAAL,GAAc/Y,SAAd;AACA,WAAKyY,SAAL,GAAiB,IAAjB;AACA,aAAO,IAAP;AACD;;AACD,WAAO4J,UAAU,EAAjB;AACD,GAZD;;AAcAD,EAAAA,KAAK,CAAChgB,SAAN,CAAgBsT,KAAhB,GAAwB,SAASA,KAAT,CAAgBlV,KAAhB,EAAuBC,GAAvB,EAA4B;AAClD,QAAIF,UAAU,CAACC,KAAD,EAAQC,GAAR,EAAa,KAAKV,IAAlB,CAAd,EAAuC;AACrC,aAAO,IAAP;AACD;;AACD,QAAI+P,aAAa,GAAGnP,YAAY,CAACH,KAAD,EAAQ,KAAKT,IAAb,CAAhC;AACA,QAAIgQ,WAAW,GAAGlP,UAAU,CAACJ,GAAD,EAAM,KAAKV,IAAX,CAA5B;;AACA,QAAIgQ,WAAW,KAAK,KAAKhQ,IAAzB,EAA+B;AAC7B;AACA,aAAOyC,iBAAiB,CAACJ,SAAlB,CAA4BsT,KAA5B,CAAkC/P,IAAlC,CAAuC,IAAvC,EAA6CnF,KAA7C,EAAoDC,GAApD,CAAP;AACD;;AACD,QAAIgc,OAAO,GAAG,KAAK1c,IAAL,GAAY+P,aAA1B;AACA,QAAIyS,IAAI,GAAG,KAAKC,KAAhB;;AACA,WAAO1S,aAAa,EAApB,EAAwB;AACtByS,MAAAA,IAAI,GAAGA,IAAI,CAACpe,IAAZ;AACD;;AACD,QAAI,KAAKuS,SAAT,EAAoB;AAClB,WAAK3W,IAAL,GAAY0c,OAAZ;AACA,WAAK+F,KAAL,GAAaD,IAAb;AACA,WAAKxJ,MAAL,GAAc/Y,SAAd;AACA,WAAKyY,SAAL,GAAiB,IAAjB;AACA,aAAO,IAAP;AACD;;AACD,WAAOiK,SAAS,CAACjG,OAAD,EAAU8F,IAAV,CAAhB;AACD,GAvBD,CA5GqD,CAqIrD;;;AAEAH,EAAAA,KAAK,CAAChgB,SAAN,CAAgBoW,aAAhB,GAAgC,SAASA,aAAT,CAAwBW,OAAxB,EAAiC;AAC/D,QAAIA,OAAO,KAAK,KAAKzC,SAArB,EAAgC;AAC9B,aAAO,IAAP;AACD;;AACD,QAAI,CAACyC,OAAL,EAAc;AACZ,UAAI,KAAKpZ,IAAL,KAAc,CAAlB,EAAqB;AACnB,eAAOsiB,UAAU,EAAjB;AACD;;AACD,WAAK3L,SAAL,GAAiByC,OAAjB;AACA,WAAKV,SAAL,GAAiB,KAAjB;AACA,aAAO,IAAP;AACD;;AACD,WAAOiK,SAAS,CAAC,KAAK3iB,IAAN,EAAY,KAAKyiB,KAAjB,EAAwBrJ,OAAxB,EAAiC,KAAKJ,MAAtC,CAAhB;AACD,GAbD,CAvIqD,CAsJrD;;;AAEAqJ,EAAAA,KAAK,CAAChgB,SAAN,CAAgBnC,SAAhB,GAA4B,SAASA,SAAT,CAAoB6G,EAApB,EAAwBC,OAAxB,EAAiC;AAC3D,QAAIwG,QAAQ,GAAG,IAAf;;AAEA,QAAIxG,OAAJ,EAAa;AACX,aAAO,IAAIc,QAAJ,CAAa,KAAKhB,OAAL,EAAb,EAA6B5G,SAA7B,CACL,UAAU4E,CAAV,EAAaD,CAAb,EAAgB;AAAE,eAAOkC,EAAE,CAACjC,CAAD,EAAID,CAAJ,EAAO2I,QAAP,CAAT;AAA4B,OADzC,EAELxG,OAFK,CAAP;AAID;;AACD,QAAI6B,UAAU,GAAG,CAAjB;AACA,QAAIgE,IAAI,GAAG,KAAK4V,KAAhB;;AACA,WAAO5V,IAAP,EAAa;AACX,UAAI9F,EAAE,CAAC8F,IAAI,CAACnN,KAAN,EAAamJ,UAAU,EAAvB,EAA2B,IAA3B,CAAF,KAAuC,KAA3C,EAAkD;AAChD;AACD;;AACDgE,MAAAA,IAAI,GAAGA,IAAI,CAACzI,IAAZ;AACD;;AACD,WAAOyE,UAAP;AACD,GAlBD;;AAoBAwZ,EAAAA,KAAK,CAAChgB,SAAN,CAAgB+E,UAAhB,GAA6B,SAASA,UAAT,CAAqBxC,IAArB,EAA2BoC,OAA3B,EAAoC;AAC/D,QAAIA,OAAJ,EAAa;AACX,aAAO,IAAIc,QAAJ,CAAa,KAAKhB,OAAL,EAAb,EAA6BM,UAA7B,CAAwCxC,IAAxC,EAA8CoC,OAA9C,CAAP;AACD;;AACD,QAAI6B,UAAU,GAAG,CAAjB;AACA,QAAIgE,IAAI,GAAG,KAAK4V,KAAhB;AACA,WAAO,IAAIte,QAAJ,CAAa,YAAY;AAC9B,UAAI0I,IAAJ,EAAU;AACR,YAAInN,KAAK,GAAGmN,IAAI,CAACnN,KAAjB;AACAmN,QAAAA,IAAI,GAAGA,IAAI,CAACzI,IAAZ;AACA,eAAOO,aAAa,CAACC,IAAD,EAAOiE,UAAU,EAAjB,EAAqBnJ,KAArB,CAApB;AACD;;AACD,aAAOuF,YAAY,EAAnB;AACD,KAPM,CAAP;AAQD,GAdD;;AAgBA,SAAOod,KAAP;AACD,CA7LyB,CA6LxB5f,iBA7LwB,CAA1B;;;AA+LA4f,KAAK,CAACF,OAAN,GAAgBA,OAAhB;AAEA,IAAIS,cAAc,GAAGP,KAAK,CAAChgB,SAA3B;AACAugB,cAAc,CAACV,eAAD,CAAd,GAAkC,IAAlC;AACAU,cAAc,CAAClJ,KAAf,GAAuBkJ,cAAc,CAAC9Q,GAAtC;AACA8Q,cAAc,CAACjE,OAAf,GAAyBiE,cAAc,CAACpT,IAAxC;AACAoT,cAAc,CAACC,UAAf,GAA4BD,cAAc,CAACL,OAA3C;AACAK,cAAc,CAAChM,aAAf,GAA+BA,aAA/B;AACAgM,cAAc,CAACpK,UAAf,GAA4BA,UAA5B;AACAoK,cAAc,CAACxT,WAAf,GAA6BA,WAA7B;AACAwT,cAAc,CAAC,mBAAD,CAAd,GAAsCA,cAAc,CAAC1T,SAAf,GAA2BA,SAAjE;;AACA0T,cAAc,CAAC,mBAAD,CAAd,GAAsC,UAAUpJ,MAAV,EAAkB7J,GAAlB,EAAuB;AAC3D,SAAO6J,MAAM,CAACmF,OAAP,CAAehP,GAAf,CAAP;AACD,CAFD;;AAGAiT,cAAc,CAAC,qBAAD,CAAd,GAAwC,UAAU/W,GAAV,EAAe;AACrD,SAAOA,GAAG,CAACuD,WAAJ,EAAP;AACD,CAFD;;AAIA,SAASuT,SAAT,CAAmB3iB,IAAnB,EAAyBwiB,IAAzB,EAA+BpJ,OAA/B,EAAwC5O,IAAxC,EAA8C;AAC5C,MAAImD,GAAG,GAAGrL,MAAM,CAACC,MAAP,CAAcqgB,cAAd,CAAV;AACAjV,EAAAA,GAAG,CAAC3N,IAAJ,GAAWA,IAAX;AACA2N,EAAAA,GAAG,CAAC8U,KAAJ,GAAYD,IAAZ;AACA7U,EAAAA,GAAG,CAACgJ,SAAJ,GAAgByC,OAAhB;AACAzL,EAAAA,GAAG,CAACqL,MAAJ,GAAaxO,IAAb;AACAmD,EAAAA,GAAG,CAAC+K,SAAJ,GAAgB,KAAhB;AACA,SAAO/K,GAAP;AACD;;AAED,IAAImV,WAAJ;;AACA,SAASR,UAAT,GAAsB;AACpB,SAAOQ,WAAW,KAAKA,WAAW,GAAGH,SAAS,CAAC,CAAD,CAA5B,CAAlB;AACD;;AAED,IAAII,aAAa,GAAG,uBAApB;;AAEA,SAASC,KAAT,CAAeC,QAAf,EAAyB;AACvB,SAAO1hB,OAAO,CAAC0hB,QAAQ,IAAIA,QAAQ,CAACF,aAAD,CAArB,CAAd;AACD;;AAED,SAASG,YAAT,CAAsBC,eAAtB,EAAuC;AACrC,SAAOH,KAAK,CAACG,eAAD,CAAL,IAA0B1f,SAAS,CAAC0f,eAAD,CAA1C;AACD;;AAED,SAASC,SAAT,CAAmBnZ,CAAnB,EAAsBC,CAAtB,EAAyB;AACvB,MAAID,CAAC,KAAKC,CAAV,EAAa;AACX,WAAO,IAAP;AACD;;AAED,MACE,CAAC7I,YAAY,CAAC6I,CAAD,CAAb,IACCD,CAAC,CAACjK,IAAF,KAAWC,SAAX,IAAwBiK,CAAC,CAAClK,IAAF,KAAWC,SAAnC,IAAgDgK,CAAC,CAACjK,IAAF,KAAWkK,CAAC,CAAClK,IAD9D,IAECiK,CAAC,CAAC+O,MAAF,KAAa/Y,SAAb,IACCiK,CAAC,CAAC8O,MAAF,KAAa/Y,SADd,IAECgK,CAAC,CAAC+O,MAAF,KAAa9O,CAAC,CAAC8O,MAJjB,IAKAvX,OAAO,CAACwI,CAAD,CAAP,KAAexI,OAAO,CAACyI,CAAD,CALtB,IAMAtI,SAAS,CAACqI,CAAD,CAAT,KAAiBrI,SAAS,CAACsI,CAAD,CAN1B,IAOAzG,SAAS,CAACwG,CAAD,CAAT,KAAiBxG,SAAS,CAACyG,CAAD,CAR5B,EASE;AACA,WAAO,KAAP;AACD;;AAED,MAAID,CAAC,CAACjK,IAAF,KAAW,CAAX,IAAgBkK,CAAC,CAAClK,IAAF,KAAW,CAA/B,EAAkC;AAChC,WAAO,IAAP;AACD;;AAED,MAAIqjB,cAAc,GAAG,CAACvhB,aAAa,CAACmI,CAAD,CAAnC;;AAEA,MAAIxG,SAAS,CAACwG,CAAD,CAAb,EAAkB;AAChB,QAAInE,OAAO,GAAGmE,CAAC,CAACnE,OAAF,EAAd;AACA,WACEoE,CAAC,CAACkJ,KAAF,CAAQ,UAAUtO,CAAV,EAAaD,CAAb,EAAgB;AACtB,UAAIsC,KAAK,GAAGrB,OAAO,CAAC1B,IAAR,GAAe1E,KAA3B;AACA,aAAOyH,KAAK,IAAIyC,EAAE,CAACzC,KAAK,CAAC,CAAD,CAAN,EAAWrC,CAAX,CAAX,KAA6Bue,cAAc,IAAIzZ,EAAE,CAACzC,KAAK,CAAC,CAAD,CAAN,EAAWtC,CAAX,CAAjD,CAAP;AACD,KAHD,KAGMiB,OAAO,CAAC1B,IAAR,GAAeY,IAJvB;AAMD;;AAED,MAAIse,OAAO,GAAG,KAAd;;AAEA,MAAIrZ,CAAC,CAACjK,IAAF,KAAWC,SAAf,EAA0B;AACxB,QAAIiK,CAAC,CAAClK,IAAF,KAAWC,SAAf,EAA0B;AACxB,UAAI,OAAOgK,CAAC,CAACvD,WAAT,KAAyB,UAA7B,EAAyC;AACvCuD,QAAAA,CAAC,CAACvD,WAAF;AACD;AACF,KAJD,MAIO;AACL4c,MAAAA,OAAO,GAAG,IAAV;AACA,UAAIC,CAAC,GAAGtZ,CAAR;AACAA,MAAAA,CAAC,GAAGC,CAAJ;AACAA,MAAAA,CAAC,GAAGqZ,CAAJ;AACD;AACF;;AAED,MAAIC,QAAQ,GAAG,IAAf;;AACA,MAAIC,KAAK,GAAGvZ,CAAC,CAAChK,SAAF,CAAY,UAAU4E,CAAV,EAAaD,CAAb,EAAgB;AACtC,QACEwe,cAAc,GACV,CAACpZ,CAAC,CAAC9B,GAAF,CAAMrD,CAAN,CADS,GAEVwe,OAAO,GACP,CAAC1Z,EAAE,CAAC9E,CAAD,EAAImF,CAAC,CAAChC,GAAF,CAAMpD,CAAN,EAASrF,OAAT,CAAJ,CADI,GAEP,CAACoK,EAAE,CAACK,CAAC,CAAChC,GAAF,CAAMpD,CAAN,EAASrF,OAAT,CAAD,EAAoBsF,CAApB,CALT,EAME;AACA0e,MAAAA,QAAQ,GAAG,KAAX;AACA,aAAO,KAAP;AACD;AACF,GAXW,CAAZ;;AAaA,SAAOA,QAAQ,IAAIvZ,CAAC,CAACjK,IAAF,KAAWyjB,KAA9B;AACD;;AAED,SAASC,KAAT,CAAeC,IAAf,EAAqBC,OAArB,EAA8B;AAC5B,MAAIC,SAAS,GAAG,UAAUpb,GAAV,EAAe;AAC7Bkb,IAAAA,IAAI,CAACthB,SAAL,CAAeoG,GAAf,IAAsBmb,OAAO,CAACnb,GAAD,CAA7B;AACD,GAFD;;AAGAnG,EAAAA,MAAM,CAAC0D,IAAP,CAAY4d,OAAZ,EAAqBrR,OAArB,CAA6BsR,SAA7B;AACAvhB,EAAAA,MAAM,CAACwhB,qBAAP,IACExhB,MAAM,CAACwhB,qBAAP,CAA6BF,OAA7B,EAAsCrR,OAAtC,CAA8CsR,SAA9C,CADF;AAEA,SAAOF,IAAP;AACD;;AAED,SAASI,IAAT,CAAcrkB,KAAd,EAAqB;AACnB,MAAI,CAACA,KAAD,IAAU,OAAOA,KAAP,KAAiB,QAA/B,EAAyC;AACvC,WAAOA,KAAP;AACD;;AACD,MAAI,CAAC2B,YAAY,CAAC3B,KAAD,CAAjB,EAA0B;AACxB,QAAI,CAAC4U,eAAe,CAAC5U,KAAD,CAApB,EAA6B;AAC3B,aAAOA,KAAP;AACD;;AACDA,IAAAA,KAAK,GAAGuC,GAAG,CAACvC,KAAD,CAAX;AACD;;AACD,MAAI+B,OAAO,CAAC/B,KAAD,CAAX,EAAoB;AAClB,QAAIskB,QAAQ,GAAG,EAAf;;AACAtkB,IAAAA,KAAK,CAACQ,SAAN,CAAgB,UAAU4E,CAAV,EAAaD,CAAb,EAAgB;AAC9Bmf,MAAAA,QAAQ,CAACnf,CAAD,CAAR,GAAckf,IAAI,CAACjf,CAAD,CAAlB;AACD,KAFD;;AAGA,WAAOkf,QAAP;AACD;;AACD,MAAIxK,MAAM,GAAG,EAAb;;AACA9Z,EAAAA,KAAK,CAACQ,SAAN,CAAgB,UAAU4E,CAAV,EAAa;AAC3B0U,IAAAA,MAAM,CAAChK,IAAP,CAAYuU,IAAI,CAACjf,CAAD,CAAhB;AACD,GAFD;;AAGA,SAAO0U,MAAP;AACD;;AAED,IAAIzW,GAAG,GAAG,aAAc,UAAUJ,aAAV,EAAyB;AAC/C,WAASI,GAAT,CAAarD,KAAb,EAAoB;AAClB,WAAOA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKO,SAA5B,GACHgkB,QAAQ,EADL,GAEHjB,KAAK,CAACtjB,KAAD,CAAL,IAAgB,CAAC+D,SAAS,CAAC/D,KAAD,CAA1B,GACAA,KADA,GAEAukB,QAAQ,GAAGrN,aAAX,CAAyB,UAAUxK,GAAV,EAAe;AACtC,UAAIrM,IAAI,GAAG4C,aAAa,CAACjD,KAAD,CAAxB;AACAoU,MAAAA,iBAAiB,CAAC/T,IAAI,CAACC,IAAN,CAAjB;AACAD,MAAAA,IAAI,CAACwS,OAAL,CAAa,UAAUzN,CAAV,EAAa;AAAE,eAAOsH,GAAG,CAAC8X,GAAJ,CAAQpf,CAAR,CAAP;AAAoB,OAAhD;AACD,KAJD,CAJJ;AASD;;AAED,MAAKnC,aAAL,EAAqBI,GAAG,CAACX,SAAJ,GAAgBO,aAAhB;AACrBI,EAAAA,GAAG,CAACV,SAAJ,GAAgBC,MAAM,CAACC,MAAP,CAAeI,aAAa,IAAIA,aAAa,CAACN,SAA9C,CAAhB;AACAU,EAAAA,GAAG,CAACV,SAAJ,CAAcG,WAAd,GAA4BO,GAA5B;;AAEAA,EAAAA,GAAG,CAAC4E,EAAJ,GAAS,SAASA,EAAT;AAAa;AAAe;AACnC,WAAO,KAAKC,SAAL,CAAP;AACD,GAFD;;AAIA7E,EAAAA,GAAG,CAACohB,QAAJ,GAAe,SAASA,QAAT,CAAmBzkB,KAAnB,EAA0B;AACvC,WAAO,KAAKwC,eAAe,CAACxC,KAAD,CAAf,CAAuB0kB,MAAvB,EAAL,CAAP;AACD,GAFD;;AAIArhB,EAAAA,GAAG,CAACshB,SAAJ,GAAgB,SAASA,SAAT,CAAoBC,IAApB,EAA0B;AACxCA,IAAAA,IAAI,GAAGtiB,UAAU,CAACsiB,IAAD,CAAV,CAAiBxd,OAAjB,EAAP;AACA,WAAOwd,IAAI,CAACje,MAAL,GACHke,YAAY,CAACF,SAAb,CAAuB3X,KAAvB,CAA6B3J,GAAG,CAACuhB,IAAI,CAACxS,GAAL,EAAD,CAAhC,EAA8CwS,IAA9C,CADG,GAEHL,QAAQ,EAFZ;AAGD,GALD;;AAOAlhB,EAAAA,GAAG,CAACyhB,KAAJ,GAAY,SAASA,KAAT,CAAgBF,IAAhB,EAAsB;AAChCA,IAAAA,IAAI,GAAGtiB,UAAU,CAACsiB,IAAD,CAAV,CAAiBxd,OAAjB,EAAP;AACA,WAAOwd,IAAI,CAACje,MAAL,GACHke,YAAY,CAACC,KAAb,CAAmB9X,KAAnB,CAAyB3J,GAAG,CAACuhB,IAAI,CAACxS,GAAL,EAAD,CAA5B,EAA0CwS,IAA1C,CADG,GAEHL,QAAQ,EAFZ;AAGD,GALD;;AAOAlhB,EAAAA,GAAG,CAACV,SAAJ,CAAcgC,QAAd,GAAyB,SAASA,QAAT,GAAqB;AAC5C,WAAO,KAAKoC,UAAL,CAAgB,OAAhB,EAAyB,GAAzB,CAAP;AACD,GAFD,CAvC+C,CA2C/C;;;AAEA1D,EAAAA,GAAG,CAACV,SAAJ,CAAc8F,GAAd,GAAoB,SAASA,GAAT,CAAczI,KAAd,EAAqB;AACvC,WAAO,KAAK+hB,IAAL,CAAUtZ,GAAV,CAAczI,KAAd,CAAP;AACD,GAFD,CA7C+C,CAiD/C;;;AAEAqD,EAAAA,GAAG,CAACV,SAAJ,CAAc6hB,GAAd,GAAoB,SAASA,GAAT,CAAcxkB,KAAd,EAAqB;AACvC,WAAO+kB,SAAS,CAAC,IAAD,EAAO,KAAKhD,IAAL,CAAUrV,GAAV,CAAc1M,KAAd,EAAqBA,KAArB,CAAP,CAAhB;AACD,GAFD;;AAIAqD,EAAAA,GAAG,CAACV,SAAJ,CAAc0S,MAAd,GAAuB,SAASA,MAAT,CAAiBrV,KAAjB,EAAwB;AAC7C,WAAO+kB,SAAS,CAAC,IAAD,EAAO,KAAKhD,IAAL,CAAU1M,MAAV,CAAiBrV,KAAjB,CAAP,CAAhB;AACD,GAFD;;AAIAqD,EAAAA,GAAG,CAACV,SAAJ,CAAc0W,KAAd,GAAsB,SAASA,KAAT,GAAkB;AACtC,WAAO0L,SAAS,CAAC,IAAD,EAAO,KAAKhD,IAAL,CAAU1I,KAAV,EAAP,CAAhB;AACD,GAFD,CA3D+C,CA+D/C;;;AAEAhW,EAAAA,GAAG,CAACV,SAAJ,CAAcsL,GAAd,GAAoB,SAASA,GAAT,CAAcC,MAAd,EAAsBC,OAAtB,EAA+B;AACjD,QAAIL,QAAQ,GAAG,IAAf,CADiD,CAGjD;;AACA,QAAIkX,UAAU,GAAG,KAAjB;AAEA,QAAI9C,MAAM,GAAG6C,SAAS,CACpB,IADoB,EAEpB,KAAKhD,IAAL,CAAUkD,UAAV,CAAqB,UAAU/kB,GAAV,EAAe;AAClC,UAAIkF,CAAC,GAAGlF,GAAG,CAAC,CAAD,CAAX;AAEA,UAAIglB,MAAM,GAAGhX,MAAM,CAAChI,IAAP,CAAYiI,OAAZ,EAAqB/I,CAArB,EAAwBA,CAAxB,EAA2B0I,QAA3B,CAAb;;AAEA,UAAIoX,MAAM,KAAK9f,CAAf,EAAkB;AAChB4f,QAAAA,UAAU,GAAG,IAAb;AACD;;AAED,aAAO,CAACE,MAAD,EAASA,MAAT,CAAP;AACD,KAVD,EAUG/W,OAVH,CAFoB,CAAtB;AAeA,WAAO6W,UAAU,GAAG9C,MAAH,GAAY,IAA7B;AACD,GAtBD;;AAwBA7e,EAAAA,GAAG,CAACV,SAAJ,CAAcmiB,KAAd,GAAsB,SAASA,KAAT,GAAkB;AACtC,QAAIzT,KAAK,GAAG,EAAZ;AAAA,QAAgB0C,GAAG,GAAG7L,SAAS,CAACvB,MAAhC;;AACA,WAAQoN,GAAG,EAAX,EAAgB1C,KAAK,CAAE0C,GAAF,CAAL,GAAe7L,SAAS,CAAE6L,GAAF,CAAxB;;AAEhB1C,IAAAA,KAAK,GAAGA,KAAK,CAACE,MAAN,CAAa,UAAUiM,CAAV,EAAa;AAAE,aAAOA,CAAC,CAACld,IAAF,KAAW,CAAlB;AAAsB,KAAlD,CAAR;;AACA,QAAI+Q,KAAK,CAAC1K,MAAN,KAAiB,CAArB,EAAwB;AACtB,aAAO,IAAP;AACD;;AACD,QAAI,KAAKrG,IAAL,KAAc,CAAd,IAAmB,CAAC,KAAK2W,SAAzB,IAAsC5F,KAAK,CAAC1K,MAAN,KAAiB,CAA3D,EAA8D;AAC5D,aAAO,KAAK7D,WAAL,CAAiBuO,KAAK,CAAC,CAAD,CAAtB,CAAP;AACD;;AACD,WAAO,KAAK6F,aAAL,CAAmB,UAAUxK,GAAV,EAAe;AACvC,WAAK,IAAIhE,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAG2I,KAAK,CAAC1K,MAA5B,EAAoC+B,EAAE,EAAtC,EAA0C;AACxCzF,QAAAA,aAAa,CAACoO,KAAK,CAAC3I,EAAD,CAAN,CAAb,CAAyBmK,OAAzB,CAAiC,UAAU7S,KAAV,EAAiB;AAAE,iBAAO0M,GAAG,CAAC8X,GAAJ,CAAQxkB,KAAR,CAAP;AAAwB,SAA5E;AACD;AACF,KAJM,CAAP;AAKD,GAhBD;;AAkBAqD,EAAAA,GAAG,CAACV,SAAJ,CAAcgiB,SAAd,GAA0B,SAASA,SAAT,GAAsB;AAC9C,QAAItT,KAAK,GAAG,EAAZ;AAAA,QAAgB0C,GAAG,GAAG7L,SAAS,CAACvB,MAAhC;;AACA,WAAQoN,GAAG,EAAX,EAAgB1C,KAAK,CAAE0C,GAAF,CAAL,GAAe7L,SAAS,CAAE6L,GAAF,CAAxB;;AAEhB,QAAI1C,KAAK,CAAC1K,MAAN,KAAiB,CAArB,EAAwB;AACtB,aAAO,IAAP;AACD;;AACD0K,IAAAA,KAAK,GAAGA,KAAK,CAACpD,GAAN,CAAU,UAAU5N,IAAV,EAAgB;AAAE,aAAO4C,aAAa,CAAC5C,IAAD,CAApB;AAA6B,KAAzD,CAAR;AACA,QAAI8kB,QAAQ,GAAG,EAAf;AACA,SAAKtS,OAAL,CAAa,UAAU7S,KAAV,EAAiB;AAC5B,UAAI,CAACqR,KAAK,CAACqC,KAAN,CAAY,UAAUrT,IAAV,EAAgB;AAAE,eAAOA,IAAI,CAACkO,QAAL,CAAcvO,KAAd,CAAP;AAA8B,OAA5D,CAAL,EAAoE;AAClEmlB,QAAAA,QAAQ,CAACrV,IAAT,CAAc9P,KAAd;AACD;AACF,KAJD;AAKA,WAAO,KAAKkX,aAAL,CAAmB,UAAUxK,GAAV,EAAe;AACvCyY,MAAAA,QAAQ,CAACtS,OAAT,CAAiB,UAAU7S,KAAV,EAAiB;AAChC0M,QAAAA,GAAG,CAAC2I,MAAJ,CAAWrV,KAAX;AACD,OAFD;AAGD,KAJM,CAAP;AAKD,GAnBD;;AAqBAqD,EAAAA,GAAG,CAACV,SAAJ,CAAcyiB,QAAd,GAAyB,SAASA,QAAT,GAAqB;AAC5C,QAAI/T,KAAK,GAAG,EAAZ;AAAA,QAAgB0C,GAAG,GAAG7L,SAAS,CAACvB,MAAhC;;AACA,WAAQoN,GAAG,EAAX,EAAgB1C,KAAK,CAAE0C,GAAF,CAAL,GAAe7L,SAAS,CAAE6L,GAAF,CAAxB;;AAEhB,QAAI1C,KAAK,CAAC1K,MAAN,KAAiB,CAArB,EAAwB;AACtB,aAAO,IAAP;AACD;;AACD0K,IAAAA,KAAK,GAAGA,KAAK,CAACpD,GAAN,CAAU,UAAU5N,IAAV,EAAgB;AAAE,aAAO4C,aAAa,CAAC5C,IAAD,CAApB;AAA6B,KAAzD,CAAR;AACA,QAAI8kB,QAAQ,GAAG,EAAf;AACA,SAAKtS,OAAL,CAAa,UAAU7S,KAAV,EAAiB;AAC5B,UAAIqR,KAAK,CAACuC,IAAN,CAAW,UAAUvT,IAAV,EAAgB;AAAE,eAAOA,IAAI,CAACkO,QAAL,CAAcvO,KAAd,CAAP;AAA8B,OAA3D,CAAJ,EAAkE;AAChEmlB,QAAAA,QAAQ,CAACrV,IAAT,CAAc9P,KAAd;AACD;AACF,KAJD;AAKA,WAAO,KAAKkX,aAAL,CAAmB,UAAUxK,GAAV,EAAe;AACvCyY,MAAAA,QAAQ,CAACtS,OAAT,CAAiB,UAAU7S,KAAV,EAAiB;AAChC0M,QAAAA,GAAG,CAAC2I,MAAJ,CAAWrV,KAAX;AACD,OAFD;AAGD,KAJM,CAAP;AAKD,GAnBD;;AAqBAqD,EAAAA,GAAG,CAACV,SAAJ,CAAciQ,IAAd,GAAqB,SAASA,IAAT,CAAeF,UAAf,EAA2B;AAC9C;AACA,WAAO2S,UAAU,CAAC5S,WAAW,CAAC,IAAD,EAAOC,UAAP,CAAZ,CAAjB;AACD,GAHD;;AAKArP,EAAAA,GAAG,CAACV,SAAJ,CAAc4W,MAAd,GAAuB,SAASA,MAAT,CAAiBrL,MAAjB,EAAyBwE,UAAzB,EAAqC;AAC1D;AACA,WAAO2S,UAAU,CAAC5S,WAAW,CAAC,IAAD,EAAOC,UAAP,EAAmBxE,MAAnB,CAAZ,CAAjB;AACD,GAHD;;AAKA7K,EAAAA,GAAG,CAACV,SAAJ,CAAcmW,UAAd,GAA2B,SAASA,UAAT,GAAuB;AAChD,WAAO,KAAKiJ,IAAL,CAAUjJ,UAAV,EAAP;AACD,GAFD;;AAIAzV,EAAAA,GAAG,CAACV,SAAJ,CAAcnC,SAAd,GAA0B,SAASA,SAAT,CAAoB6G,EAApB,EAAwBC,OAAxB,EAAiC;AACzD,QAAIwG,QAAQ,GAAG,IAAf;AAEA,WAAO,KAAKiU,IAAL,CAAUvhB,SAAV,CAAoB,UAAU2E,CAAV,EAAa;AAAE,aAAOkC,EAAE,CAAClC,CAAD,EAAIA,CAAJ,EAAO2I,QAAP,CAAT;AAA4B,KAA/D,EAAiExG,OAAjE,CAAP;AACD,GAJD;;AAMAjE,EAAAA,GAAG,CAACV,SAAJ,CAAc+E,UAAd,GAA2B,SAASA,UAAT,CAAqBxC,IAArB,EAA2BoC,OAA3B,EAAoC;AAC7D,WAAO,KAAKya,IAAL,CAAUra,UAAV,CAAqBxC,IAArB,EAA2BoC,OAA3B,CAAP;AACD,GAFD;;AAIAjE,EAAAA,GAAG,CAACV,SAAJ,CAAcoW,aAAd,GAA8B,SAASA,aAAT,CAAwBW,OAAxB,EAAiC;AAC7D,QAAIA,OAAO,KAAK,KAAKzC,SAArB,EAAgC;AAC9B,aAAO,IAAP;AACD;;AACD,QAAIiL,MAAM,GAAG,KAAKH,IAAL,CAAUhJ,aAAV,CAAwBW,OAAxB,CAAb;;AACA,QAAI,CAACA,OAAL,EAAc;AACZ,UAAI,KAAKpZ,IAAL,KAAc,CAAlB,EAAqB;AACnB,eAAO,KAAKglB,OAAL,EAAP;AACD;;AACD,WAAKrO,SAAL,GAAiByC,OAAjB;AACA,WAAKqI,IAAL,GAAYG,MAAZ;AACA,aAAO,IAAP;AACD;;AACD,WAAO,KAAKqD,MAAL,CAAYrD,MAAZ,EAAoBxI,OAApB,CAAP;AACD,GAdD;;AAgBA,SAAOrW,GAAP;AACD,CA9LuB,CA8LtBJ,aA9LsB,CAAxB;;;AAgMAI,GAAG,CAACigB,KAAJ,GAAYA,KAAZ;AAEA,IAAIuB,YAAY,GAAGxhB,GAAG,CAACV,SAAvB;AACAkiB,YAAY,CAACxB,aAAD,CAAZ,GAA8B,IAA9B;AACAwB,YAAY,CAACnlB,MAAD,CAAZ,GAAuBmlB,YAAY,CAACxP,MAApC;AACAwP,YAAY,CAACxN,KAAb,GAAqBwN,YAAY,CAACvT,MAAb,GAAsBuT,YAAY,CAACC,KAAxD;AACAD,YAAY,CAAC3N,aAAb,GAA6BA,aAA7B;AACA2N,YAAY,CAACnV,WAAb,GAA2BA,WAA3B;AACAmV,YAAY,CAAC,mBAAD,CAAZ,GAAoCA,YAAY,CAACrV,SAAb,GAAyBA,SAA7D;;AACAqV,YAAY,CAAC,mBAAD,CAAZ,GAAoC,UAAU/K,MAAV,EAAkB7J,GAAlB,EAAuB;AACzD,SAAO6J,MAAM,CAAC0K,GAAP,CAAWvU,GAAX,CAAP;AACD,CAFD;;AAGA4U,YAAY,CAAC,qBAAD,CAAZ,GAAsC,UAAU1Y,GAAV,EAAe;AACnD,SAAOA,GAAG,CAACuD,WAAJ,EAAP;AACD,CAFD;;AAIAmV,YAAY,CAACS,OAAb,GAAuBf,QAAvB;AACAM,YAAY,CAACU,MAAb,GAAsBC,OAAtB;;AAEA,SAAST,SAAT,CAAmBrY,GAAnB,EAAwBwV,MAAxB,EAAgC;AAC9B,MAAIxV,GAAG,CAACuK,SAAR,EAAmB;AACjBvK,IAAAA,GAAG,CAACpM,IAAJ,GAAW4hB,MAAM,CAAC5hB,IAAlB;AACAoM,IAAAA,GAAG,CAACqV,IAAJ,GAAWG,MAAX;AACA,WAAOxV,GAAP;AACD;;AACD,SAAOwV,MAAM,KAAKxV,GAAG,CAACqV,IAAf,GACHrV,GADG,GAEHwV,MAAM,CAAC5hB,IAAP,KAAgB,CAAhB,GACAoM,GAAG,CAAC4Y,OAAJ,EADA,GAEA5Y,GAAG,CAAC6Y,MAAJ,CAAWrD,MAAX,CAJJ;AAKD;;AAED,SAASsD,OAAT,CAAiBvX,GAAjB,EAAsByL,OAAtB,EAA+B;AAC7B,MAAIhN,GAAG,GAAG9J,MAAM,CAACC,MAAP,CAAcgiB,YAAd,CAAV;AACAnY,EAAAA,GAAG,CAACpM,IAAJ,GAAW2N,GAAG,GAAGA,GAAG,CAAC3N,IAAP,GAAc,CAA5B;AACAoM,EAAAA,GAAG,CAACqV,IAAJ,GAAW9T,GAAX;AACAvB,EAAAA,GAAG,CAACuK,SAAJ,GAAgByC,OAAhB;AACA,SAAOhN,GAAP;AACD;;AAED,IAAI+Y,SAAJ;;AACA,SAASlB,QAAT,GAAoB;AAClB,SAAOkB,SAAS,KAAKA,SAAS,GAAGD,OAAO,CAACpP,QAAQ,EAAT,CAAxB,CAAhB;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,IAAIsP,KAAK,GAAG,aAAc,UAAU1iB,UAAV,EAAsB;AAC9C,WAAS0iB,KAAT,CAAeC,KAAf,EAAsB3kB,GAAtB,EAA2BoI,IAA3B,EAAiC;AAC/B,QAAI,EAAE,gBAAgBsc,KAAlB,CAAJ,EAA8B;AAC5B,aAAO,IAAIA,KAAJ,CAAUC,KAAV,EAAiB3kB,GAAjB,EAAsBoI,IAAtB,CAAP;AACD;;AACD6K,IAAAA,SAAS,CAAC7K,IAAI,KAAK,CAAV,EAAa,0BAAb,CAAT;AACAuc,IAAAA,KAAK,GAAGA,KAAK,IAAI,CAAjB;;AACA,QAAI3kB,GAAG,KAAKT,SAAZ,EAAuB;AACrBS,MAAAA,GAAG,GAAGM,QAAN;AACD;;AACD8H,IAAAA,IAAI,GAAGA,IAAI,KAAK7I,SAAT,GAAqB,CAArB,GAAyBgB,IAAI,CAACqkB,GAAL,CAASxc,IAAT,CAAhC;;AACA,QAAIpI,GAAG,GAAG2kB,KAAV,EAAiB;AACfvc,MAAAA,IAAI,GAAG,CAACA,IAAR;AACD;;AACD,SAAKyc,MAAL,GAAcF,KAAd;AACA,SAAKG,IAAL,GAAY9kB,GAAZ;AACA,SAAK+kB,KAAL,GAAa3c,IAAb;AACA,SAAK9I,IAAL,GAAYiB,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACykB,IAAL,CAAU,CAAChlB,GAAG,GAAG2kB,KAAP,IAAgBvc,IAAhB,GAAuB,CAAjC,IAAsC,CAAlD,CAAZ;;AACA,QAAI,KAAK9I,IAAL,KAAc,CAAlB,EAAqB;AACnB,UAAI2lB,WAAJ,EAAiB;AACf,eAAOA,WAAP;AACD;;AACDA,MAAAA,WAAW,GAAG,IAAd;AACD;AACF;;AAED,MAAKjjB,UAAL,EAAkB0iB,KAAK,CAAChjB,SAAN,GAAkBM,UAAlB;AAClB0iB,EAAAA,KAAK,CAAC/iB,SAAN,GAAkBC,MAAM,CAACC,MAAP,CAAeG,UAAU,IAAIA,UAAU,CAACL,SAAxC,CAAlB;AACA+iB,EAAAA,KAAK,CAAC/iB,SAAN,CAAgBG,WAAhB,GAA8B4iB,KAA9B;;AAEAA,EAAAA,KAAK,CAAC/iB,SAAN,CAAgBgC,QAAhB,GAA2B,SAASA,QAAT,GAAqB;AAC9C,QAAI,KAAKrE,IAAL,KAAc,CAAlB,EAAqB;AACnB,aAAO,UAAP;AACD;;AACD,WACE,aACA,KAAKulB,MADL,GAEA,KAFA,GAGA,KAAKC,IAHL,IAIC,KAAKC,KAAL,KAAe,CAAf,GAAmB,SAAS,KAAKA,KAAjC,GAAyC,EAJ1C,IAKA,IANF;AAQD,GAZD;;AAcAL,EAAAA,KAAK,CAAC/iB,SAAN,CAAgB4F,GAAhB,GAAsB,SAASA,GAAT,CAAc5H,KAAd,EAAqB6H,WAArB,EAAkC;AACtD,WAAO,KAAKC,GAAL,CAAS9H,KAAT,IACH,KAAKklB,MAAL,GAAcnlB,SAAS,CAAC,IAAD,EAAOC,KAAP,CAAT,GAAyB,KAAKolB,KADzC,GAEHvd,WAFJ;AAGD,GAJD;;AAMAkd,EAAAA,KAAK,CAAC/iB,SAAN,CAAgB4L,QAAhB,GAA2B,SAASA,QAAT,CAAmB2X,WAAnB,EAAgC;AACzD,QAAIC,aAAa,GAAG,CAACD,WAAW,GAAG,KAAKL,MAApB,IAA8B,KAAKE,KAAvD;AACA,WACEI,aAAa,IAAI,CAAjB,IACAA,aAAa,GAAG,KAAK7lB,IADrB,IAEA6lB,aAAa,KAAK5kB,IAAI,CAAC6kB,KAAL,CAAWD,aAAX,CAHpB;AAKD,GAPD;;AASAT,EAAAA,KAAK,CAAC/iB,SAAN,CAAgBsT,KAAhB,GAAwB,SAASA,KAAT,CAAgBlV,KAAhB,EAAuBC,GAAvB,EAA4B;AAClD,QAAIF,UAAU,CAACC,KAAD,EAAQC,GAAR,EAAa,KAAKV,IAAlB,CAAd,EAAuC;AACrC,aAAO,IAAP;AACD;;AACDS,IAAAA,KAAK,GAAGG,YAAY,CAACH,KAAD,EAAQ,KAAKT,IAAb,CAApB;AACAU,IAAAA,GAAG,GAAGI,UAAU,CAACJ,GAAD,EAAM,KAAKV,IAAX,CAAhB;;AACA,QAAIU,GAAG,IAAID,KAAX,EAAkB;AAChB,aAAO,IAAI2kB,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAP;AACD;;AACD,WAAO,IAAIA,KAAJ,CACL,KAAKnd,GAAL,CAASxH,KAAT,EAAgB,KAAK+kB,IAArB,CADK,EAEL,KAAKvd,GAAL,CAASvH,GAAT,EAAc,KAAK8kB,IAAnB,CAFK,EAGL,KAAKC,KAHA,CAAP;AAKD,GAdD;;AAgBAL,EAAAA,KAAK,CAAC/iB,SAAN,CAAgB0jB,OAAhB,GAA0B,SAASA,OAAT,CAAkBH,WAAlB,EAA+B;AACvD,QAAII,WAAW,GAAGJ,WAAW,GAAG,KAAKL,MAArC;;AACA,QAAIS,WAAW,GAAG,KAAKP,KAAnB,KAA6B,CAAjC,EAAoC;AAClC,UAAIplB,KAAK,GAAG2lB,WAAW,GAAG,KAAKP,KAA/B;;AACA,UAAIplB,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAG,KAAKL,IAA/B,EAAqC;AACnC,eAAOK,KAAP;AACD;AACF;;AACD,WAAO,CAAC,CAAR;AACD,GATD;;AAWA+kB,EAAAA,KAAK,CAAC/iB,SAAN,CAAgB4jB,WAAhB,GAA8B,SAASA,WAAT,CAAsBL,WAAtB,EAAmC;AAC/D,WAAO,KAAKG,OAAL,CAAaH,WAAb,CAAP;AACD,GAFD;;AAIAR,EAAAA,KAAK,CAAC/iB,SAAN,CAAgBnC,SAAhB,GAA4B,SAASA,SAAT,CAAoB6G,EAApB,EAAwBC,OAAxB,EAAiC;AAC3D,QAAIhH,IAAI,GAAG,KAAKA,IAAhB;AACA,QAAI8I,IAAI,GAAG,KAAK2c,KAAhB;AACA,QAAI/lB,KAAK,GAAGsH,OAAO,GAAG,KAAKue,MAAL,GAAc,CAACvlB,IAAI,GAAG,CAAR,IAAa8I,IAA9B,GAAqC,KAAKyc,MAA7D;AACA,QAAIre,CAAC,GAAG,CAAR;;AACA,WAAOA,CAAC,KAAKlH,IAAb,EAAmB;AACjB,UAAI+G,EAAE,CAACrH,KAAD,EAAQsH,OAAO,GAAGhH,IAAI,GAAG,EAAEkH,CAAZ,GAAgBA,CAAC,EAAhC,EAAoC,IAApC,CAAF,KAAgD,KAApD,EAA2D;AACzD;AACD;;AACDxH,MAAAA,KAAK,IAAIsH,OAAO,GAAG,CAAC8B,IAAJ,GAAWA,IAA3B;AACD;;AACD,WAAO5B,CAAP;AACD,GAZD;;AAcAke,EAAAA,KAAK,CAAC/iB,SAAN,CAAgB+E,UAAhB,GAA6B,SAASA,UAAT,CAAqBxC,IAArB,EAA2BoC,OAA3B,EAAoC;AAC/D,QAAIhH,IAAI,GAAG,KAAKA,IAAhB;AACA,QAAI8I,IAAI,GAAG,KAAK2c,KAAhB;AACA,QAAI/lB,KAAK,GAAGsH,OAAO,GAAG,KAAKue,MAAL,GAAc,CAACvlB,IAAI,GAAG,CAAR,IAAa8I,IAA9B,GAAqC,KAAKyc,MAA7D;AACA,QAAIre,CAAC,GAAG,CAAR;AACA,WAAO,IAAI/C,QAAJ,CAAa,YAAY;AAC9B,UAAI+C,CAAC,KAAKlH,IAAV,EAAgB;AACd,eAAOiF,YAAY,EAAnB;AACD;;AACD,UAAIH,CAAC,GAAGpF,KAAR;AACAA,MAAAA,KAAK,IAAIsH,OAAO,GAAG,CAAC8B,IAAJ,GAAWA,IAA3B;AACA,aAAOnE,aAAa,CAACC,IAAD,EAAOoC,OAAO,GAAGhH,IAAI,GAAG,EAAEkH,CAAZ,GAAgBA,CAAC,EAA/B,EAAmCpC,CAAnC,CAApB;AACD,KAPM,CAAP;AAQD,GAbD;;AAeAsgB,EAAAA,KAAK,CAAC/iB,SAAN,CAAgBqH,MAAhB,GAAyB,SAASA,MAAT,CAAiBwc,KAAjB,EAAwB;AAC/C,WAAOA,KAAK,YAAYd,KAAjB,GACH,KAAKG,MAAL,KAAgBW,KAAK,CAACX,MAAtB,IACE,KAAKC,IAAL,KAAcU,KAAK,CAACV,IADtB,IAEE,KAAKC,KAAL,KAAeS,KAAK,CAACT,KAHpB,GAIHrC,SAAS,CAAC,IAAD,EAAO8C,KAAP,CAJb;AAKD,GAND;;AAQA,SAAOd,KAAP;AACD,CAhIyB,CAgIxB1iB,UAhIwB,CAA1B;;;AAkIA,IAAIijB,WAAJ;;AAEA,SAASQ,OAAT,CAAiBxd,UAAjB,EAA6Byd,aAA7B,EAA4Cle,WAA5C,EAAyD;AACvD,MAAI8L,OAAO,GAAGD,aAAa,CAACqS,aAAD,CAA3B;AACA,MAAIlf,CAAC,GAAG,CAAR;;AACA,SAAOA,CAAC,KAAK8M,OAAO,CAAC3N,MAArB,EAA6B;AAC3BsC,IAAAA,UAAU,GAAGV,GAAG,CAACU,UAAD,EAAaqL,OAAO,CAAC9M,CAAC,EAAF,CAApB,EAA2B1H,OAA3B,CAAhB;;AACA,QAAImJ,UAAU,KAAKnJ,OAAnB,EAA4B;AAC1B,aAAO0I,WAAP;AACD;AACF;;AACD,SAAOS,UAAP;AACD;;AAED,SAAS0d,KAAT,CAAeD,aAAf,EAA8Ble,WAA9B,EAA2C;AACzC,SAAOie,OAAO,CAAC,IAAD,EAAOC,aAAP,EAAsBle,WAAtB,CAAd;AACD;;AAED,SAASoe,OAAT,CAAiB3d,UAAjB,EAA6BqL,OAA7B,EAAsC;AACpC,SAAOmS,OAAO,CAACxd,UAAD,EAAaqL,OAAb,EAAsBxU,OAAtB,CAAP,KAA0CA,OAAjD;AACD;;AAED,SAAS+mB,KAAT,CAAeH,aAAf,EAA8B;AAC5B,SAAOE,OAAO,CAAC,IAAD,EAAOF,aAAP,CAAd;AACD;;AAED,SAASI,QAAT,GAAoB;AAClB1S,EAAAA,iBAAiB,CAAC,KAAK9T,IAAN,CAAjB;AACA,MAAIsI,MAAM,GAAG,EAAb;;AACA,OAAKpI,SAAL,CAAe,UAAU4E,CAAV,EAAaD,CAAb,EAAgB;AAC7ByD,IAAAA,MAAM,CAACzD,CAAD,CAAN,GAAYC,CAAZ;AACD,GAFD;;AAGA,SAAOwD,MAAP;AACD,EAED;;;AACAtG,UAAU,CAACykB,UAAX,GAAwBplB,YAAxB;AACAW,UAAU,CAACP,OAAX,GAAqBA,OAArB;AACAO,UAAU,CAACJ,SAAX,GAAuBA,SAAvB;AACAI,UAAU,CAACF,aAAX,GAA2BA,aAA3B;AACAE,UAAU,CAACyB,SAAX,GAAuBA,SAAvB;AAEAzB,UAAU,CAACmC,QAAX,GAAsBA,QAAtB;AAEAuf,KAAK,CAAC1hB,UAAD,EAAa;AAChB;AAEA8E,EAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1BgN,IAAAA,iBAAiB,CAAC,KAAK9T,IAAN,CAAjB;AACA,QAAI+H,KAAK,GAAG,IAAI3C,KAAJ,CAAU,KAAKpF,IAAL,IAAa,CAAvB,CAAZ;AACA,QAAI0mB,SAAS,GAAGjlB,OAAO,CAAC,IAAD,CAAvB;AACA,QAAIyF,CAAC,GAAG,CAAR;;AACA,SAAKhH,SAAL,CAAe,UAAU4E,CAAV,EAAaD,CAAb,EAAgB;AAC7B;AACAkD,MAAAA,KAAK,CAACb,CAAC,EAAF,CAAL,GAAawf,SAAS,GAAG,CAAC7hB,CAAD,EAAIC,CAAJ,CAAH,GAAYA,CAAlC;AACD,KAHD;;AAIA,WAAOiD,KAAP;AACD,GAbe;AAehBN,EAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB;AACpC,WAAO,IAAIuG,iBAAJ,CAAsB,IAAtB,CAAP;AACD,GAjBe;AAmBhB+V,EAAAA,IAAI,EAAE,SAAS4C,MAAT,GAAkB;AACtB,WAAO5C,IAAI,CAAC,IAAD,CAAX;AACD,GArBe;AAuBhBzc,EAAAA,UAAU,EAAE,SAASA,UAAT,GAAsB;AAChC,WAAO,IAAI4F,eAAJ,CAAoB,IAApB,EAA0B,IAA1B,CAAP;AACD,GAzBe;AA2BhB+U,EAAAA,KAAK,EAAE,SAASA,KAAT,GAAiB;AACtB;AACA,WAAOhT,GAAG,CAAC,KAAK3H,UAAL,EAAD,CAAV;AACD,GA9Be;AAgChBkf,EAAAA,QAAQ,EAAEA,QAhCM;AAkChBI,EAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB;AACpC;AACA,WAAOrX,UAAU,CAAC,KAAKjI,UAAL,EAAD,CAAjB;AACD,GArCe;AAuChBuf,EAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB;AACpC;AACA,WAAO9B,UAAU,CAACtjB,OAAO,CAAC,IAAD,CAAP,GAAgB,KAAK8L,QAAL,EAAhB,GAAkC,IAAnC,CAAjB;AACD,GA1Ce;AA4ChBuZ,EAAAA,KAAK,EAAE,SAASA,KAAT,GAAiB;AACtB;AACA,WAAO/jB,GAAG,CAACtB,OAAO,CAAC,IAAD,CAAP,GAAgB,KAAK8L,QAAL,EAAhB,GAAkC,IAAnC,CAAV;AACD,GA/Ce;AAiDhB1F,EAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB;AAC5B,WAAO,IAAIqG,aAAJ,CAAkB,IAAlB,CAAP;AACD,GAnDe;AAqDhB3H,EAAAA,KAAK,EAAE,SAASA,KAAT,GAAiB;AACtB,WAAO3E,SAAS,CAAC,IAAD,CAAT,GACH,KAAK6F,YAAL,EADG,GAEHhG,OAAO,CAAC,IAAD,CAAP,GACA,KAAK6F,UAAL,EADA,GAEA,KAAKO,QAAL,EAJJ;AAKD,GA3De;AA6DhBkf,EAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1B;AACA,WAAO1E,KAAK,CAAC5gB,OAAO,CAAC,IAAD,CAAP,GAAgB,KAAK8L,QAAL,EAAhB,GAAkC,IAAnC,CAAZ;AACD,GAhEe;AAkEhByZ,EAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB;AACA,WAAOrJ,IAAI,CAAClc,OAAO,CAAC,IAAD,CAAP,GAAgB,KAAK8L,QAAL,EAAhB,GAAkC,IAAnC,CAAX;AACD,GArEe;AAuEhB;AAEAlJ,EAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB;AAC5B,WAAO,cAAP;AACD,GA3Ee;AA6EhBoC,EAAAA,UAAU,EAAE,SAASA,UAAT,CAAoB+b,IAApB,EAA0BxC,IAA1B,EAAgC;AAC1C,QAAI,KAAKhgB,IAAL,KAAc,CAAlB,EAAqB;AACnB,aAAOwiB,IAAI,GAAGxC,IAAd;AACD;;AACD,WACEwC,IAAI,GACJ,GADA,GAEA,KAAKjc,KAAL,GAAaoH,GAAb,CAAiB,KAAKsZ,gBAAtB,EAAwCC,IAAxC,CAA6C,IAA7C,CAFA,GAGA,GAHA,GAIAlH,IALF;AAOD,GAxFe;AA0FhB;AAEAhP,EAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,QAAIH,MAAM,GAAG,EAAb;AAAA,QAAiB4C,GAAG,GAAG7L,SAAS,CAACvB,MAAjC;;AACA,WAAQoN,GAAG,EAAX,EAAgB5C,MAAM,CAAE4C,GAAF,CAAN,GAAgB7L,SAAS,CAAE6L,GAAF,CAAzB;;AAEhB,WAAO7D,KAAK,CAAC,IAAD,EAAOgB,aAAa,CAAC,IAAD,EAAOC,MAAP,CAApB,CAAZ;AACD,GAjGe;AAmGhB5C,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkB2X,WAAlB,EAA+B;AACvC,WAAO,KAAKtS,IAAL,CAAU,UAAU5T,KAAV,EAAiB;AAAE,aAAOkK,EAAE,CAAClK,KAAD,EAAQkmB,WAAR,CAAT;AAAgC,KAA7D,CAAP;AACD,GArGe;AAuGhB9f,EAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1B,WAAO,KAAKsB,UAAL,CAAgBvD,eAAhB,CAAP;AACD,GAzGe;AA2GhBuP,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAexE,SAAf,EAA0Bf,OAA1B,EAAmC;AACxCiG,IAAAA,iBAAiB,CAAC,KAAK9T,IAAN,CAAjB;AACA,QAAImnB,WAAW,GAAG,IAAlB;;AACA,SAAKjnB,SAAL,CAAe,UAAU4E,CAAV,EAAaD,CAAb,EAAgBsF,CAAhB,EAAmB;AAChC,UAAI,CAACyE,SAAS,CAAChJ,IAAV,CAAeiI,OAAf,EAAwB/I,CAAxB,EAA2BD,CAA3B,EAA8BsF,CAA9B,CAAL,EAAuC;AACrCgd,QAAAA,WAAW,GAAG,KAAd;AACA,eAAO,KAAP;AACD;AACF,KALD;;AAMA,WAAOA,WAAP;AACD,GArHe;AAuHhBlW,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBrC,SAAhB,EAA2Bf,OAA3B,EAAoC;AAC1C,WAAO+B,KAAK,CAAC,IAAD,EAAOjB,aAAa,CAAC,IAAD,EAAOC,SAAP,EAAkBf,OAAlB,EAA2B,IAA3B,CAApB,CAAZ;AACD,GAzHe;AA2HhBuZ,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAcxY,SAAd,EAAyBf,OAAzB,EAAkC3F,WAAlC,EAA+C;AACnD,QAAIf,KAAK,GAAG,KAAKkgB,SAAL,CAAezY,SAAf,EAA0Bf,OAA1B,CAAZ;AACA,WAAO1G,KAAK,GAAGA,KAAK,CAAC,CAAD,CAAR,GAAce,WAA1B;AACD,GA9He;AAgIhBqK,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiB+U,UAAjB,EAA6BzZ,OAA7B,EAAsC;AAC7CiG,IAAAA,iBAAiB,CAAC,KAAK9T,IAAN,CAAjB;AACA,WAAO,KAAKE,SAAL,CAAe2N,OAAO,GAAGyZ,UAAU,CAACC,IAAX,CAAgB1Z,OAAhB,CAAH,GAA8ByZ,UAApD,CAAP;AACD,GAnIe;AAqIhBJ,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAcjV,SAAd,EAAyB;AAC7B6B,IAAAA,iBAAiB,CAAC,KAAK9T,IAAN,CAAjB;AACAiS,IAAAA,SAAS,GAAGA,SAAS,KAAKhS,SAAd,GAA0B,KAAKgS,SAA/B,GAA2C,GAAvD;AACA,QAAIuV,MAAM,GAAG,EAAb;AACA,QAAIC,OAAO,GAAG,IAAd;;AACA,SAAKvnB,SAAL,CAAe,UAAU4E,CAAV,EAAa;AAC1B2iB,MAAAA,OAAO,GAAIA,OAAO,GAAG,KAAd,GAAwBD,MAAM,IAAIvV,SAAzC;AACAuV,MAAAA,MAAM,IAAI1iB,CAAC,KAAK,IAAN,IAAcA,CAAC,KAAK7E,SAApB,GAAgC6E,CAAC,CAACT,QAAF,EAAhC,GAA+C,EAAzD;AACD,KAHD;;AAIA,WAAOmjB,MAAP;AACD,GA/Ie;AAiJhBxhB,EAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,WAAO,KAAKoB,UAAL,CAAgBzD,YAAhB,CAAP;AACD,GAnJe;AAqJhBgK,EAAAA,GAAG,EAAE,SAASA,GAAT,CAAaC,MAAb,EAAqBC,OAArB,EAA8B;AACjC,WAAO+B,KAAK,CAAC,IAAD,EAAO7B,UAAU,CAAC,IAAD,EAAOH,MAAP,EAAeC,OAAf,CAAjB,CAAZ;AACD,GAvJe;AAyJhBwD,EAAAA,MAAM,EAAE,SAASqW,QAAT,CAAkBC,OAAlB,EAA2BC,gBAA3B,EAA6C/Z,OAA7C,EAAsD;AAC5D,WAAOwD,MAAM,CACX,IADW,EAEXsW,OAFW,EAGXC,gBAHW,EAIX/Z,OAJW,EAKXjG,SAAS,CAACvB,MAAV,GAAmB,CALR,EAMX,KANW,CAAb;AAQD,GAlKe;AAoKhBwhB,EAAAA,WAAW,EAAE,SAASA,WAAT,CAAqBF,OAArB,EAA8BC,gBAA9B,EAAgD/Z,OAAhD,EAAyD;AACpE,WAAOwD,MAAM,CACX,IADW,EAEXsW,OAFW,EAGXC,gBAHW,EAIX/Z,OAJW,EAKXjG,SAAS,CAACvB,MAAV,GAAmB,CALR,EAMX,IANW,CAAb;AAQD,GA7Ke;AA+KhBW,EAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1B,WAAO4I,KAAK,CAAC,IAAD,EAAOlC,cAAc,CAAC,IAAD,EAAO,IAAP,CAArB,CAAZ;AACD,GAjLe;AAmLhBiI,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAelV,KAAf,EAAsBC,GAAtB,EAA2B;AAChC,WAAOkP,KAAK,CAAC,IAAD,EAAOC,YAAY,CAAC,IAAD,EAAOpP,KAAP,EAAcC,GAAd,EAAmB,IAAnB,CAAnB,CAAZ;AACD,GArLe;AAuLhB4S,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAc1E,SAAd,EAAyBf,OAAzB,EAAkC;AACtC,WAAO,CAAC,KAAKuF,KAAL,CAAW0U,GAAG,CAAClZ,SAAD,CAAd,EAA2Bf,OAA3B,CAAR;AACD,GAzLe;AA2LhByE,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAcF,UAAd,EAA0B;AAC9B,WAAOxC,KAAK,CAAC,IAAD,EAAOuC,WAAW,CAAC,IAAD,EAAOC,UAAP,CAAlB,CAAZ;AACD,GA7Le;AA+LhBvB,EAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,WAAO,KAAKzJ,UAAL,CAAgBxD,cAAhB,CAAP;AACD,GAjMe;AAmMhB;AAEAmkB,EAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1B,WAAO,KAAKpS,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAP;AACD,GAvMe;AAyMhBqS,EAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1B,WAAO,KAAKhoB,IAAL,KAAcC,SAAd,GAA0B,KAAKD,IAAL,KAAc,CAAxC,GAA4C,CAAC,KAAKsT,IAAL,CAAU,YAAY;AAAE,aAAO,IAAP;AAAc,KAAtC,CAApD;AACD,GA3Me;AA6MhBgI,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAe1M,SAAf,EAA0Bf,OAA1B,EAAmC;AACxC,WAAO/N,UAAU,CACf8O,SAAS,GAAG,KAAKrI,KAAL,GAAa0K,MAAb,CAAoBrC,SAApB,EAA+Bf,OAA/B,CAAH,GAA6C,IADvC,CAAjB;AAGD,GAjNe;AAmNhBoa,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBlZ,OAAjB,EAA0BlB,OAA1B,EAAmC;AAC1C,WAAOiB,cAAc,CAAC,IAAD,EAAOC,OAAP,EAAgBlB,OAAhB,CAArB;AACD,GArNe;AAuNhBnE,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBwc,KAAhB,EAAuB;AAC7B,WAAO9C,SAAS,CAAC,IAAD,EAAO8C,KAAP,CAAhB;AACD,GAzNe;AA2NhBrf,EAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB;AAC5B,QAAI8B,UAAU,GAAG,IAAjB;;AACA,QAAIA,UAAU,CAAChC,MAAf,EAAuB;AACrB;AACA,aAAO,IAAImB,QAAJ,CAAaa,UAAU,CAAChC,MAAxB,CAAP;AACD;;AACD,QAAIuhB,eAAe,GAAGvf,UAAU,CAACpC,KAAX,GAAmBoH,GAAnB,CAAuBwa,WAAvB,EAAoC1gB,YAApC,EAAtB;;AACAygB,IAAAA,eAAe,CAAC3gB,YAAhB,GAA+B,YAAY;AAAE,aAAOoB,UAAU,CAACpC,KAAX,EAAP;AAA4B,KAAzE;;AACA,WAAO2hB,eAAP;AACD,GApOe;AAsOhBE,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBxZ,SAAnB,EAA8Bf,OAA9B,EAAuC;AAChD,WAAO,KAAKoD,MAAL,CAAY6W,GAAG,CAAClZ,SAAD,CAAf,EAA4Bf,OAA5B,CAAP;AACD,GAxOe;AA0OhBwZ,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBzY,SAAnB,EAA8Bf,OAA9B,EAAuC3F,WAAvC,EAAoD;AAC7D,QAAImgB,KAAK,GAAGngB,WAAZ;;AACA,SAAKhI,SAAL,CAAe,UAAU4E,CAAV,EAAaD,CAAb,EAAgBsF,CAAhB,EAAmB;AAChC,UAAIyE,SAAS,CAAChJ,IAAV,CAAeiI,OAAf,EAAwB/I,CAAxB,EAA2BD,CAA3B,EAA8BsF,CAA9B,CAAJ,EAAsC;AACpCke,QAAAA,KAAK,GAAG,CAACxjB,CAAD,EAAIC,CAAJ,CAAR;AACA,eAAO,KAAP;AACD;AACF,KALD;;AAMA,WAAOujB,KAAP;AACD,GAnPe;AAqPhBC,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiB1Z,SAAjB,EAA4Bf,OAA5B,EAAqC;AAC5C,QAAI1G,KAAK,GAAG,KAAKkgB,SAAL,CAAezY,SAAf,EAA0Bf,OAA1B,CAAZ;AACA,WAAO1G,KAAK,IAAIA,KAAK,CAAC,CAAD,CAArB;AACD,GAxPe;AA0PhBohB,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkB3Z,SAAlB,EAA6Bf,OAA7B,EAAsC3F,WAAtC,EAAmD;AAC3D,WAAO,KAAKZ,UAAL,GAAkBN,OAAlB,GAA4BogB,IAA5B,CAAiCxY,SAAjC,EAA4Cf,OAA5C,EAAqD3F,WAArD,CAAP;AACD,GA5Pe;AA8PhBsgB,EAAAA,aAAa,EAAE,SAASA,aAAT,CAAuB5Z,SAAvB,EAAkCf,OAAlC,EAA2C3F,WAA3C,EAAwD;AACrE,WAAO,KAAKZ,UAAL,GACJN,OADI,GAEJqgB,SAFI,CAEMzY,SAFN,EAEiBf,OAFjB,EAE0B3F,WAF1B,CAAP;AAGD,GAlQe;AAoQhBugB,EAAAA,WAAW,EAAE,SAASA,WAAT,CAAqB7Z,SAArB,EAAgCf,OAAhC,EAAyC;AACpD,WAAO,KAAKvG,UAAL,GAAkBN,OAAlB,GAA4BshB,OAA5B,CAAoC1Z,SAApC,EAA+Cf,OAA/C,CAAP;AACD,GAtQe;AAwQhB6a,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAexgB,WAAf,EAA4B;AACjC,WAAO,KAAKkf,IAAL,CAAUjnB,UAAV,EAAsB,IAAtB,EAA4B+H,WAA5B,CAAP;AACD,GA1Qe;AA4QhBygB,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiB/a,MAAjB,EAAyBC,OAAzB,EAAkC;AACzC,WAAO+B,KAAK,CAAC,IAAD,EAAOmC,cAAc,CAAC,IAAD,EAAOnE,MAAP,EAAeC,OAAf,CAArB,CAAZ;AACD,GA9Qe;AAgRhBuD,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBI,KAAjB,EAAwB;AAC/B,WAAO5B,KAAK,CAAC,IAAD,EAAO2B,cAAc,CAAC,IAAD,EAAOC,KAAP,EAAc,IAAd,CAArB,CAAZ;AACD,GAlRe;AAoRhBjK,EAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB;AACpC,WAAO,IAAI4G,mBAAJ,CAAwB,IAAxB,CAAP;AACD,GAtRe;AAwRhBlG,EAAAA,GAAG,EAAE,SAASA,GAAT,CAAa2gB,SAAb,EAAwB1gB,WAAxB,EAAqC;AACxC,WAAO,KAAKkf,IAAL,CAAU,UAAU7D,CAAV,EAAa9a,GAAb,EAAkB;AAAE,aAAOmB,EAAE,CAACnB,GAAD,EAAMmgB,SAAN,CAAT;AAA4B,KAA1D,EAA4D3oB,SAA5D,EAAuEiI,WAAvE,CAAP;AACD,GA1Re;AA4RhBme,EAAAA,KAAK,EAAEA,KA5RS;AA8RhBwC,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiB9Z,OAAjB,EAA0BlB,OAA1B,EAAmC;AAC1C,WAAOwB,cAAc,CAAC,IAAD,EAAON,OAAP,EAAgBlB,OAAhB,CAArB;AACD,GAhSe;AAkShB1F,EAAAA,GAAG,EAAE,SAASA,GAAT,CAAaygB,SAAb,EAAwB;AAC3B,WAAO,KAAK3gB,GAAL,CAAS2gB,SAAT,EAAoBppB,OAApB,MAAiCA,OAAxC;AACD,GApSe;AAsShB+mB,EAAAA,KAAK,EAAEA,KAtSS;AAwShBuC,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkB/oB,IAAlB,EAAwB;AAChCA,IAAAA,IAAI,GAAG,OAAOA,IAAI,CAACkO,QAAZ,KAAyB,UAAzB,GAAsClO,IAAtC,GAA6CiC,UAAU,CAACjC,IAAD,CAA9D;AACA,WAAO,KAAKqT,KAAL,CAAW,UAAU1T,KAAV,EAAiB;AAAE,aAAOK,IAAI,CAACkO,QAAL,CAAcvO,KAAd,CAAP;AAA8B,KAA5D,CAAP;AACD,GA3Se;AA6ShBqpB,EAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBhpB,IAApB,EAA0B;AACpCA,IAAAA,IAAI,GAAG,OAAOA,IAAI,CAAC+oB,QAAZ,KAAyB,UAAzB,GAAsC/oB,IAAtC,GAA6CiC,UAAU,CAACjC,IAAD,CAA9D;AACA,WAAOA,IAAI,CAAC+oB,QAAL,CAAc,IAAd,CAAP;AACD,GAhTe;AAkThBE,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAepD,WAAf,EAA4B;AACjC,WAAO,KAAK0C,OAAL,CAAa,UAAU5oB,KAAV,EAAiB;AAAE,aAAOkK,EAAE,CAAClK,KAAD,EAAQkmB,WAAR,CAAT;AAAgC,KAAhE,CAAP;AACD,GApTe;AAsThBxB,EAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,WAAO,KAAK7d,KAAL,GAAaoH,GAAb,CAAiBsb,SAAjB,EAA4BxhB,YAA5B,EAAP;AACD,GAxTe;AA0ThByhB,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAchhB,WAAd,EAA2B;AAC/B,WAAO,KAAK3B,KAAL,GAAaS,OAAb,GAAuB0hB,KAAvB,CAA6BxgB,WAA7B,CAAP;AACD,GA5Te;AA8ThBihB,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBvD,WAAnB,EAAgC;AACzC,WAAO,KAAKte,UAAL,GAAkBN,OAAlB,GAA4BgiB,KAA5B,CAAkCpD,WAAlC,CAAP;AACD,GAhUe;AAkUhB1kB,EAAAA,GAAG,EAAE,SAASA,GAAT,CAAakR,UAAb,EAAyB;AAC5B,WAAOI,UAAU,CAAC,IAAD,EAAOJ,UAAP,CAAjB;AACD,GApUe;AAsUhBgX,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAexb,MAAf,EAAuBwE,UAAvB,EAAmC;AACxC,WAAOI,UAAU,CAAC,IAAD,EAAOJ,UAAP,EAAmBxE,MAAnB,CAAjB;AACD,GAxUe;AA0UhBzM,EAAAA,GAAG,EAAE,SAASA,GAAT,CAAaiR,UAAb,EAAyB;AAC5B,WAAOI,UAAU,CACf,IADe,EAEfJ,UAAU,GAAGiX,GAAG,CAACjX,UAAD,CAAN,GAAqBkX,oBAFhB,CAAjB;AAID,GA/Ue;AAiVhBC,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAe3b,MAAf,EAAuBwE,UAAvB,EAAmC;AACxC,WAAOI,UAAU,CACf,IADe,EAEfJ,UAAU,GAAGiX,GAAG,CAACjX,UAAD,CAAN,GAAqBkX,oBAFhB,EAGf1b,MAHe,CAAjB;AAKD,GAvVe;AAyVhB4b,EAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,WAAO,KAAK7T,KAAL,CAAW,CAAX,CAAP;AACD,GA3Ve;AA6VhB8T,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAcC,MAAd,EAAsB;AAC1B,WAAOA,MAAM,KAAK,CAAX,GAAe,IAAf,GAAsB,KAAK/T,KAAL,CAAW1U,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYwoB,MAAZ,CAAX,CAA7B;AACD,GA/Ve;AAiWhBC,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBD,MAAlB,EAA0B;AAClC,WAAOA,MAAM,KAAK,CAAX,GAAe,IAAf,GAAsB,KAAK/T,KAAL,CAAW,CAAX,EAAc,CAAC1U,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYwoB,MAAZ,CAAf,CAA7B;AACD,GAnWe;AAqWhBE,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBhb,SAAnB,EAA8Bf,OAA9B,EAAuC;AAChD,WAAO+B,KAAK,CAAC,IAAD,EAAOa,gBAAgB,CAAC,IAAD,EAAO7B,SAAP,EAAkBf,OAAlB,EAA2B,IAA3B,CAAvB,CAAZ;AACD,GAvWe;AAyWhBgc,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBjb,SAAnB,EAA8Bf,OAA9B,EAAuC;AAChD,WAAO,KAAK+b,SAAL,CAAe9B,GAAG,CAAClZ,SAAD,CAAlB,EAA+Bf,OAA/B,CAAP;AACD,GA3We;AA6WhBoL,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBrL,MAAhB,EAAwBwE,UAAxB,EAAoC;AAC1C,WAAOxC,KAAK,CAAC,IAAD,EAAOuC,WAAW,CAAC,IAAD,EAAOC,UAAP,EAAmBxE,MAAnB,CAAlB,CAAZ;AACD,GA/We;AAiXhBkc,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAcJ,MAAd,EAAsB;AAC1B,WAAO,KAAK/T,KAAL,CAAW,CAAX,EAAc1U,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYwoB,MAAZ,CAAd,CAAP;AACD,GAnXe;AAqXhBK,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBL,MAAlB,EAA0B;AAClC,WAAO,KAAK/T,KAAL,CAAW,CAAC1U,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYwoB,MAAZ,CAAZ,CAAP;AACD,GAvXe;AAyXhBM,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBpb,SAAnB,EAA8Bf,OAA9B,EAAuC;AAChD,WAAO+B,KAAK,CAAC,IAAD,EAAOU,gBAAgB,CAAC,IAAD,EAAO1B,SAAP,EAAkBf,OAAlB,CAAvB,CAAZ;AACD,GA3Xe;AA6XhBoc,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBrb,SAAnB,EAA8Bf,OAA9B,EAAuC;AAChD,WAAO,KAAKmc,SAAL,CAAelC,GAAG,CAAClZ,SAAD,CAAlB,EAA+Bf,OAA/B,CAAP;AACD,GA/Xe;AAiYhBsB,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBpI,EAAhB,EAAoB;AAC1B,WAAOA,EAAE,CAAC,IAAD,CAAT;AACD,GAnYe;AAqYhBwG,EAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB;AAC5B,WAAO,KAAK9F,YAAL,EAAP;AACD,GAvYe;AAyYhB;AAEAkC,EAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB;AAC5B,WAAO,KAAKqP,MAAL,KAAgB,KAAKA,MAAL,GAAckR,cAAc,CAAC,IAAD,CAA5C,CAAP;AACD,GA7Ye,CA+YhB;AAEA;AAEA;;AAnZgB,CAAb,CAAL;AAsZA,IAAIC,mBAAmB,GAAGnoB,UAAU,CAACK,SAArC;AACA8nB,mBAAmB,CAAC/oB,oBAAD,CAAnB,GAA4C,IAA5C;AACA+oB,mBAAmB,CAACjmB,eAAD,CAAnB,GAAuCimB,mBAAmB,CAACtZ,MAA3D;AACAsZ,mBAAmB,CAACC,MAApB,GAA6BD,mBAAmB,CAACrjB,OAAjD;AACAqjB,mBAAmB,CAAClD,gBAApB,GAAuC1S,WAAvC;;AACA4V,mBAAmB,CAAC1lB,OAApB,GAA8B0lB,mBAAmB,CAACzlB,QAApB,GAA+B,YAAY;AACvE,SAAO,KAAKL,QAAL,EAAP;AACD,CAFD;;AAGA8lB,mBAAmB,CAACE,KAApB,GAA4BF,mBAAmB,CAACxB,OAAhD;AACAwB,mBAAmB,CAACG,QAApB,GAA+BH,mBAAmB,CAAClc,QAAnD;AAEAyV,KAAK,CAACxhB,eAAD,EAAkB;AACrB;AAEAwM,EAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,WAAOkB,KAAK,CAAC,IAAD,EAAOrB,WAAW,CAAC,IAAD,CAAlB,CAAZ;AACD,GALoB;AAOrBoW,EAAAA,UAAU,EAAE,SAASA,UAAT,CAAoB/W,MAApB,EAA4BC,OAA5B,EAAqC;AAC/C,QAAIL,QAAQ,GAAG,IAAf;AAEA,QAAI3E,UAAU,GAAG,CAAjB;AACA,WAAO+G,KAAK,CACV,IADU,EAEV,KAAKrJ,KAAL,GACGoH,GADH,CACO,UAAU7I,CAAV,EAAaD,CAAb,EAAgB;AAAE,aAAO+I,MAAM,CAAChI,IAAP,CAAYiI,OAAZ,EAAqB,CAAChJ,CAAD,EAAIC,CAAJ,CAArB,EAA6B+D,UAAU,EAAvC,EAA2C2E,QAA3C,CAAP;AAA8D,KADvF,EAEGjG,YAFH,EAFU,CAAZ;AAMD,GAjBoB;AAmBrBgjB,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiB3c,MAAjB,EAAyBC,OAAzB,EAAkC;AACzC,QAAIL,QAAQ,GAAG,IAAf;AAEA,WAAOoC,KAAK,CACV,IADU,EAEV,KAAKrJ,KAAL,GACGmI,IADH,GAEGf,GAFH,CAEO,UAAU9I,CAAV,EAAaC,CAAb,EAAgB;AAAE,aAAO8I,MAAM,CAAChI,IAAP,CAAYiI,OAAZ,EAAqBhJ,CAArB,EAAwBC,CAAxB,EAA2B0I,QAA3B,CAAP;AAA8C,KAFvE,EAGGkB,IAHH,EAFU,CAAZ;AAOD;AA7BoB,CAAlB,CAAL;AAgCA,IAAI8b,wBAAwB,GAAGtoB,eAAe,CAACG,SAA/C;AACAmoB,wBAAwB,CAAChpB,eAAD,CAAxB,GAA4C,IAA5C;AACAgpB,wBAAwB,CAACtmB,eAAD,CAAxB,GAA4CimB,mBAAmB,CAACrkB,OAAhE;AACA0kB,wBAAwB,CAACJ,MAAzB,GAAkC5D,QAAlC;;AACAgE,wBAAwB,CAACvD,gBAAzB,GAA4C,UAAUniB,CAAV,EAAaD,CAAb,EAAgB;AAAE,SAAO0P,WAAW,CAAC1P,CAAD,CAAX,GAAiB,IAAjB,GAAwB0P,WAAW,CAACzP,CAAD,CAA1C;AAAgD,CAA9G;;AAEA4e,KAAK,CAACjhB,iBAAD,EAAoB;AACvB;AAEA6E,EAAAA,UAAU,EAAE,SAASA,UAAT,GAAsB;AAChC,WAAO,IAAI4F,eAAJ,CAAoB,IAApB,EAA0B,KAA1B,CAAP;AACD,GALsB;AAOvB;AAEA+D,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBrC,SAAhB,EAA2Bf,OAA3B,EAAoC;AAC1C,WAAO+B,KAAK,CAAC,IAAD,EAAOjB,aAAa,CAAC,IAAD,EAAOC,SAAP,EAAkBf,OAAlB,EAA2B,KAA3B,CAApB,CAAZ;AACD,GAXsB;AAavB4c,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmB7b,SAAnB,EAA8Bf,OAA9B,EAAuC;AAChD,QAAI1G,KAAK,GAAG,KAAKkgB,SAAL,CAAezY,SAAf,EAA0Bf,OAA1B,CAAZ;AACA,WAAO1G,KAAK,GAAGA,KAAK,CAAC,CAAD,CAAR,GAAc,CAAC,CAA3B;AACD,GAhBsB;AAkBvB4e,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBH,WAAjB,EAA8B;AACrC,QAAInd,GAAG,GAAG,KAAKugB,KAAL,CAAWpD,WAAX,CAAV;AACA,WAAOnd,GAAG,KAAKxI,SAAR,GAAoB,CAAC,CAArB,GAAyBwI,GAAhC;AACD,GArBsB;AAuBvBwd,EAAAA,WAAW,EAAE,SAASA,WAAT,CAAqBL,WAArB,EAAkC;AAC7C,QAAInd,GAAG,GAAG,KAAK0gB,SAAL,CAAevD,WAAf,CAAV;AACA,WAAOnd,GAAG,KAAKxI,SAAR,GAAoB,CAAC,CAArB,GAAyBwI,GAAhC;AACD,GA1BsB;AA4BvBzB,EAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1B,WAAO4I,KAAK,CAAC,IAAD,EAAOlC,cAAc,CAAC,IAAD,EAAO,KAAP,CAArB,CAAZ;AACD,GA9BsB;AAgCvBiI,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAelV,KAAf,EAAsBC,GAAtB,EAA2B;AAChC,WAAOkP,KAAK,CAAC,IAAD,EAAOC,YAAY,CAAC,IAAD,EAAOpP,KAAP,EAAcC,GAAd,EAAmB,KAAnB,CAAnB,CAAZ;AACD,GAlCsB;AAoCvBuU,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgB5U,KAAhB,EAAuBqqB;AAAU;AAAjC,IAAkD;AACxD,QAAIC,OAAO,GAAG/iB,SAAS,CAACvB,MAAxB;AACAqkB,IAAAA,SAAS,GAAGzpB,IAAI,CAACC,GAAL,CAASwpB,SAAS,IAAI,CAAtB,EAAyB,CAAzB,CAAZ;;AACA,QAAIC,OAAO,KAAK,CAAZ,IAAkBA,OAAO,KAAK,CAAZ,IAAiB,CAACD,SAAxC,EAAoD;AAClD,aAAO,IAAP;AACD,KALuD,CAMxD;AACA;AACA;;;AACArqB,IAAAA,KAAK,GAAGO,YAAY,CAACP,KAAD,EAAQA,KAAK,GAAG,CAAR,GAAY,KAAKib,KAAL,EAAZ,GAA2B,KAAKtb,IAAxC,CAApB;AACA,QAAI4qB,OAAO,GAAG,KAAKjV,KAAL,CAAW,CAAX,EAActV,KAAd,CAAd;AACA,WAAOuP,KAAK,CACV,IADU,EAEV+a,OAAO,KAAK,CAAZ,GACIC,OADJ,GAEIA,OAAO,CAAC5Z,MAAR,CAAeuC,OAAO,CAAC3L,SAAD,EAAY,CAAZ,CAAtB,EAAsC,KAAK+N,KAAL,CAAWtV,KAAK,GAAGqqB,SAAnB,CAAtC,CAJM,CAAZ;AAMD,GArDsB;AAuDvB;AAEAG,EAAAA,aAAa,EAAE,SAASA,aAAT,CAAuBjc,SAAvB,EAAkCf,OAAlC,EAA2C;AACxD,QAAI1G,KAAK,GAAG,KAAKqhB,aAAL,CAAmB5Z,SAAnB,EAA8Bf,OAA9B,CAAZ;AACA,WAAO1G,KAAK,GAAGA,KAAK,CAAC,CAAD,CAAR,GAAc,CAAC,CAA3B;AACD,GA5DsB;AA8DvBuhB,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAexgB,WAAf,EAA4B;AACjC,WAAO,KAAKD,GAAL,CAAS,CAAT,EAAYC,WAAZ,CAAP;AACD,GAhEsB;AAkEvBkJ,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBI,KAAjB,EAAwB;AAC/B,WAAO5B,KAAK,CAAC,IAAD,EAAO2B,cAAc,CAAC,IAAD,EAAOC,KAAP,EAAc,KAAd,CAArB,CAAZ;AACD,GApEsB;AAsEvBvJ,EAAAA,GAAG,EAAE,SAASA,GAAT,CAAa5H,KAAb,EAAoB6H,WAApB,EAAiC;AACpC7H,IAAAA,KAAK,GAAGD,SAAS,CAAC,IAAD,EAAOC,KAAP,CAAjB;AACA,WAAOA,KAAK,GAAG,CAAR,IACL,KAAKL,IAAL,KAAcgB,QADT,IAEJ,KAAKhB,IAAL,KAAcC,SAAd,IAA2BI,KAAK,GAAG,KAAKL,IAFpC,GAGHkI,WAHG,GAIH,KAAKkf,IAAL,CAAU,UAAU7D,CAAV,EAAa9a,GAAb,EAAkB;AAAE,aAAOA,GAAG,KAAKpI,KAAf;AAAuB,KAArD,EAAuDJ,SAAvD,EAAkEiI,WAAlE,CAJJ;AAKD,GA7EsB;AA+EvBC,EAAAA,GAAG,EAAE,SAASA,GAAT,CAAa9H,KAAb,EAAoB;AACvBA,IAAAA,KAAK,GAAGD,SAAS,CAAC,IAAD,EAAOC,KAAP,CAAjB;AACA,WACEA,KAAK,IAAI,CAAT,KACC,KAAKL,IAAL,KAAcC,SAAd,GACG,KAAKD,IAAL,KAAcgB,QAAd,IAA0BX,KAAK,GAAG,KAAKL,IAD1C,GAEG,KAAK+lB,OAAL,CAAa1lB,KAAb,MAAwB,CAAC,CAH7B,CADF;AAMD,GAvFsB;AAyFvByqB,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmB7Y,SAAnB,EAA8B;AACvC,WAAOrC,KAAK,CAAC,IAAD,EAAOoC,gBAAgB,CAAC,IAAD,EAAOC,SAAP,CAAvB,CAAZ;AACD,GA3FsB;AA6FvB8Y,EAAAA,UAAU,EAAE,SAASA,UAAT;AAAoB;AAAoB;AAClD,QAAItU,WAAW,GAAG,CAAC,IAAD,EAAOzF,MAAP,CAAcuC,OAAO,CAAC3L,SAAD,CAArB,CAAlB;AACA,QAAIojB,MAAM,GAAGrY,cAAc,CAAC,KAAKpM,KAAL,EAAD,EAAe7D,UAAU,CAACiF,EAA1B,EAA8B8O,WAA9B,CAA3B;AACA,QAAIwU,WAAW,GAAGD,MAAM,CAAC5Z,OAAP,CAAe,IAAf,CAAlB;;AACA,QAAI4Z,MAAM,CAAChrB,IAAX,EAAiB;AACfirB,MAAAA,WAAW,CAACjrB,IAAZ,GAAmBgrB,MAAM,CAAChrB,IAAP,GAAcyW,WAAW,CAACpQ,MAA7C;AACD;;AACD,WAAOuJ,KAAK,CAAC,IAAD,EAAOqb,WAAP,CAAZ;AACD,GArGsB;AAuGvB7G,EAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,WAAOgB,KAAK,CAAC,CAAD,EAAI,KAAKplB,IAAT,CAAZ;AACD,GAzGsB;AA2GvBkpB,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAchhB,WAAd,EAA2B;AAC/B,WAAO,KAAKD,GAAL,CAAS,CAAC,CAAV,EAAaC,WAAb,CAAP;AACD,GA7GsB;AA+GvB0hB,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBhb,SAAnB,EAA8Bf,OAA9B,EAAuC;AAChD,WAAO+B,KAAK,CAAC,IAAD,EAAOa,gBAAgB,CAAC,IAAD,EAAO7B,SAAP,EAAkBf,OAAlB,EAA2B,KAA3B,CAAvB,CAAZ;AACD,GAjHsB;AAmHvBqd,EAAAA,GAAG,EAAE,SAASA,GAAT;AAAa;AAAuB;AACvC,QAAIzU,WAAW,GAAG,CAAC,IAAD,EAAOzF,MAAP,CAAcuC,OAAO,CAAC3L,SAAD,CAArB,CAAlB;AACA,WAAOgI,KAAK,CAAC,IAAD,EAAO+C,cAAc,CAAC,IAAD,EAAOwY,aAAP,EAAsB1U,WAAtB,CAArB,CAAZ;AACD,GAtHsB;AAwHvB3D,EAAAA,MAAM,EAAE,SAASA,MAAT;AAAgB;AAAuB;AAC7C,QAAI2D,WAAW,GAAG,CAAC,IAAD,EAAOzF,MAAP,CAAcuC,OAAO,CAAC3L,SAAD,CAArB,CAAlB;AACA,WAAOgI,KAAK,CAAC,IAAD,EAAO+C,cAAc,CAAC,IAAD,EAAOwY,aAAP,EAAsB1U,WAAtB,EAAmC,IAAnC,CAArB,CAAZ;AACD,GA3HsB;AA6HvB2U,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBvY;AAAO;AAAxB,IAA+C;AACtD,QAAI4D,WAAW,GAAGlD,OAAO,CAAC3L,SAAD,CAAzB;AACA6O,IAAAA,WAAW,CAAC,CAAD,CAAX,GAAiB,IAAjB;AACA,WAAO7G,KAAK,CAAC,IAAD,EAAO+C,cAAc,CAAC,IAAD,EAAOE,MAAP,EAAe4D,WAAf,CAArB,CAAZ;AACD;AAjIsB,CAApB,CAAL;AAoIA,IAAI4U,0BAA0B,GAAG5oB,iBAAiB,CAACJ,SAAnD;AACAgpB,0BAA0B,CAAC1pB,iBAAD,CAA1B,GAAgD,IAAhD;AACA0pB,0BAA0B,CAAC7nB,iBAAD,CAA1B,GAAgD,IAAhD;AAEAkgB,KAAK,CAAC/gB,aAAD,EAAgB;AACnB;AAEAsF,EAAAA,GAAG,EAAE,SAASA,GAAT,CAAavI,KAAb,EAAoBwI,WAApB,EAAiC;AACpC,WAAO,KAAKC,GAAL,CAASzI,KAAT,IAAkBA,KAAlB,GAA0BwI,WAAjC;AACD,GALkB;AAOnB+F,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBvO,KAAlB,EAAyB;AACjC,WAAO,KAAKyI,GAAL,CAASzI,KAAT,CAAP;AACD,GATkB;AAWnB;AAEA0kB,EAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,WAAO,KAAK7W,QAAL,EAAP;AACD;AAfkB,CAAhB,CAAL;AAkBA,IAAI+d,sBAAsB,GAAG3oB,aAAa,CAACN,SAA3C;AACAipB,sBAAsB,CAACnjB,GAAvB,GAA6BgiB,mBAAmB,CAAClc,QAAjD;AACAqd,sBAAsB,CAAChB,QAAvB,GAAkCgB,sBAAsB,CAACrd,QAAzD;AACAqd,sBAAsB,CAACtlB,IAAvB,GAA8BslB,sBAAsB,CAACza,MAArD,EAEA;;AAEA6S,KAAK,CAACvhB,QAAD,EAAWqoB,wBAAX,CAAL;AACA9G,KAAK,CAAChhB,UAAD,EAAa2oB,0BAAb,CAAL;AACA3H,KAAK,CAAC9gB,MAAD,EAAS0oB,sBAAT,CAAL,EAEA;;AAEA,SAASja,MAAT,CAAgB1I,UAAhB,EAA4Bgf,OAA5B,EAAqC4D,SAArC,EAAgD1d,OAAhD,EAAyD2d,QAAzD,EAAmExkB,OAAnE,EAA4E;AAC1E8M,EAAAA,iBAAiB,CAACnL,UAAU,CAAC3I,IAAZ,CAAjB;;AACA2I,EAAAA,UAAU,CAACzI,SAAX,CAAqB,UAAU4E,CAAV,EAAaD,CAAb,EAAgBsF,CAAhB,EAAmB;AACtC,QAAIqhB,QAAJ,EAAc;AACZA,MAAAA,QAAQ,GAAG,KAAX;AACAD,MAAAA,SAAS,GAAGzmB,CAAZ;AACD,KAHD,MAGO;AACLymB,MAAAA,SAAS,GAAG5D,OAAO,CAAC/hB,IAAR,CAAaiI,OAAb,EAAsB0d,SAAtB,EAAiCzmB,CAAjC,EAAoCD,CAApC,EAAuCsF,CAAvC,CAAZ;AACD;AACF,GAPD,EAOGnD,OAPH;;AAQA,SAAOukB,SAAP;AACD;;AAED,SAAStC,SAAT,CAAmBnkB,CAAnB,EAAsBD,CAAtB,EAAyB;AACvB,SAAOA,CAAP;AACD;;AAED,SAASsjB,WAAT,CAAqBrjB,CAArB,EAAwBD,CAAxB,EAA2B;AACzB,SAAO,CAACA,CAAD,EAAIC,CAAJ,CAAP;AACD;;AAED,SAASgjB,GAAT,CAAalZ,SAAb,EAAwB;AACtB,SAAO,YAAY;AACjB,WAAO,CAACA,SAAS,CAAClC,KAAV,CAAgB,IAAhB,EAAsB9E,SAAtB,CAAR;AACD,GAFD;AAGD;;AAED,SAASyhB,GAAT,CAAaza,SAAb,EAAwB;AACtB,SAAO,YAAY;AACjB,WAAO,CAACA,SAAS,CAAClC,KAAV,CAAgB,IAAhB,EAAsB9E,SAAtB,CAAR;AACD,GAFD;AAGD;;AAED,SAASujB,aAAT,GAAyB;AACvB,SAAO5X,OAAO,CAAC3L,SAAD,CAAd;AACD;;AAED,SAAS0hB,oBAAT,CAA8Brf,CAA9B,EAAiCC,CAAjC,EAAoC;AAClC,SAAOD,CAAC,GAAGC,CAAJ,GAAQ,CAAR,GAAYD,CAAC,GAAGC,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAAhC;AACD;;AAED,SAASggB,cAAT,CAAwBvhB,UAAxB,EAAoC;AAClC,MAAIA,UAAU,CAAC3I,IAAX,KAAoBgB,QAAxB,EAAkC;AAChC,WAAO,CAAP;AACD;;AACD,MAAIyqB,OAAO,GAAGhoB,SAAS,CAACkF,UAAD,CAAvB;AACA,MAAI+iB,KAAK,GAAGjqB,OAAO,CAACkH,UAAD,CAAnB;AACA,MAAIgjB,CAAC,GAAGF,OAAO,GAAG,CAAH,GAAO,CAAtB;;AACA,MAAIzrB,IAAI,GAAG2I,UAAU,CAACzI,SAAX,CACTwrB,KAAK,GACDD,OAAO,GACL,UAAU3mB,CAAV,EAAaD,CAAb,EAAgB;AACd8mB,IAAAA,CAAC,GAAI,KAAKA,CAAL,GAASC,SAAS,CAACphB,IAAI,CAAC1F,CAAD,CAAL,EAAU0F,IAAI,CAAC3F,CAAD,CAAd,CAAnB,GAAyC,CAA7C;AACD,GAHI,GAIL,UAAUC,CAAV,EAAaD,CAAb,EAAgB;AACd8mB,IAAAA,CAAC,GAAIA,CAAC,GAAGC,SAAS,CAACphB,IAAI,CAAC1F,CAAD,CAAL,EAAU0F,IAAI,CAAC3F,CAAD,CAAd,CAAd,GAAoC,CAAxC;AACD,GAPF,GAQD4mB,OAAO,GACP,UAAU3mB,CAAV,EAAa;AACX6mB,IAAAA,CAAC,GAAI,KAAKA,CAAL,GAASnhB,IAAI,CAAC1F,CAAD,CAAd,GAAqB,CAAzB;AACD,GAHM,GAIP,UAAUA,CAAV,EAAa;AACX6mB,IAAAA,CAAC,GAAIA,CAAC,GAAGnhB,IAAI,CAAC1F,CAAD,CAAT,GAAgB,CAApB;AACD,GAfI,CAAX;;AAiBA,SAAO+mB,gBAAgB,CAAC7rB,IAAD,EAAO2rB,CAAP,CAAvB;AACD;;AAED,SAASE,gBAAT,CAA0B7rB,IAA1B,EAAgC2rB,CAAhC,EAAmC;AACjCA,EAAAA,CAAC,GAAG3hB,IAAI,CAAC2hB,CAAD,EAAI,UAAJ,CAAR;AACAA,EAAAA,CAAC,GAAG3hB,IAAI,CAAE2hB,CAAC,IAAI,EAAN,GAAaA,CAAC,KAAK,CAAC,EAArB,EAA0B,UAA1B,CAAR;AACAA,EAAAA,CAAC,GAAG3hB,IAAI,CAAE2hB,CAAC,IAAI,EAAN,GAAaA,CAAC,KAAK,CAAC,EAArB,EAA0B,CAA1B,CAAR;AACAA,EAAAA,CAAC,GAAG,CAAEA,CAAC,GAAG,UAAL,GAAmB,CAApB,IAAyB3rB,IAA7B;AACA2rB,EAAAA,CAAC,GAAG3hB,IAAI,CAAC2hB,CAAC,GAAIA,CAAC,KAAK,EAAZ,EAAiB,UAAjB,CAAR;AACAA,EAAAA,CAAC,GAAG3hB,IAAI,CAAC2hB,CAAC,GAAIA,CAAC,KAAK,EAAZ,EAAiB,UAAjB,CAAR;AACAA,EAAAA,CAAC,GAAGthB,GAAG,CAACshB,CAAC,GAAIA,CAAC,KAAK,EAAZ,CAAP;AACA,SAAOA,CAAP;AACD;;AAED,SAASC,SAAT,CAAmB3hB,CAAnB,EAAsBC,CAAtB,EAAyB;AACvB,SAAQD,CAAC,GAAIC,CAAC,GAAG,UAAJ,IAAkBD,CAAC,IAAI,CAAvB,KAA6BA,CAAC,IAAI,CAAlC,CAAN,GAA+C,CAAtD,CADuB,CACkC;AAC1D;;AAED,IAAI8a,UAAU,GAAG,aAAc,UAAUhiB,GAAV,EAAe;AAC5C,WAASgiB,UAAT,CAAoBrlB,KAApB,EAA2B;AACzB,WAAOA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKO,SAA5B,GACH6rB,eAAe,EADZ,GAEH5I,YAAY,CAACxjB,KAAD,CAAZ,GACAA,KADA,GAEAosB,eAAe,GAAGlV,aAAlB,CAAgC,UAAUxK,GAAV,EAAe;AAC7C,UAAIrM,IAAI,GAAG4C,aAAa,CAACjD,KAAD,CAAxB;AACAoU,MAAAA,iBAAiB,CAAC/T,IAAI,CAACC,IAAN,CAAjB;AACAD,MAAAA,IAAI,CAACwS,OAAL,CAAa,UAAUzN,CAAV,EAAa;AAAE,eAAOsH,GAAG,CAAC8X,GAAJ,CAAQpf,CAAR,CAAP;AAAoB,OAAhD;AACD,KAJD,CAJJ;AASD;;AAED,MAAK/B,GAAL,EAAWgiB,UAAU,CAAC3iB,SAAX,GAAuBW,GAAvB;AACXgiB,EAAAA,UAAU,CAAC1iB,SAAX,GAAuBC,MAAM,CAACC,MAAP,CAAeQ,GAAG,IAAIA,GAAG,CAACV,SAA1B,CAAvB;AACA0iB,EAAAA,UAAU,CAAC1iB,SAAX,CAAqBG,WAArB,GAAmCuiB,UAAnC;;AAEAA,EAAAA,UAAU,CAACpd,EAAX,GAAgB,SAASA,EAAT;AAAa;AAAe;AAC1C,WAAO,KAAKC,SAAL,CAAP;AACD,GAFD;;AAIAmd,EAAAA,UAAU,CAACZ,QAAX,GAAsB,SAASA,QAAT,CAAmBzkB,KAAnB,EAA0B;AAC9C,WAAO,KAAKwC,eAAe,CAACxC,KAAD,CAAf,CAAuB0kB,MAAvB,EAAL,CAAP;AACD,GAFD;;AAIAW,EAAAA,UAAU,CAAC1iB,SAAX,CAAqBgC,QAArB,GAAgC,SAASA,QAAT,GAAqB;AACnD,WAAO,KAAKoC,UAAL,CAAgB,cAAhB,EAAgC,GAAhC,CAAP;AACD,GAFD;;AAIA,SAAOse,UAAP;AACD,CA9B8B,CA8B7BhiB,GA9B6B,CAA/B;;;AAgCAgiB,UAAU,CAAC7B,YAAX,GAA0BA,YAA1B;AAEA,IAAI6I,mBAAmB,GAAGhH,UAAU,CAAC1iB,SAArC;AACA0pB,mBAAmB,CAACvoB,iBAAD,CAAnB,GAAyC,IAAzC;AACAuoB,mBAAmB,CAACb,GAApB,GAA0BG,0BAA0B,CAACH,GAArD;AACAa,mBAAmB,CAACX,OAApB,GAA8BC,0BAA0B,CAACD,OAAzD;AACAW,mBAAmB,CAACjZ,MAApB,GAA6BuY,0BAA0B,CAACvY,MAAxD;AAEAiZ,mBAAmB,CAAC/G,OAApB,GAA8B8G,eAA9B;AACAC,mBAAmB,CAAC9G,MAApB,GAA6B+G,cAA7B;;AAEA,SAASA,cAAT,CAAwBre,GAAxB,EAA6ByL,OAA7B,EAAsC;AACpC,MAAIhN,GAAG,GAAG9J,MAAM,CAACC,MAAP,CAAcwpB,mBAAd,CAAV;AACA3f,EAAAA,GAAG,CAACpM,IAAJ,GAAW2N,GAAG,GAAGA,GAAG,CAAC3N,IAAP,GAAc,CAA5B;AACAoM,EAAAA,GAAG,CAACqV,IAAJ,GAAW9T,GAAX;AACAvB,EAAAA,GAAG,CAACuK,SAAJ,GAAgByC,OAAhB;AACA,SAAOhN,GAAP;AACD;;AAED,IAAI6f,iBAAJ;;AACA,SAASH,eAAT,GAA2B;AACzB,SACEG,iBAAiB,KAAKA,iBAAiB,GAAGD,cAAc,CAACxK,eAAe,EAAhB,CAAvC,CADnB;AAGD;;AAED,SAAS0K,2BAAT,CAAqCC,aAArC,EAAoD;AAClD,MAAI/oB,QAAQ,CAAC+oB,aAAD,CAAZ,EAA6B;AAC3B,UAAM,IAAIlhB,KAAJ,CACJ,0GADI,CAAN;AAGD;;AAED,MAAI3H,WAAW,CAAC6oB,aAAD,CAAf,EAAgC;AAC9B,UAAM,IAAIlhB,KAAJ,CACJ,8GADI,CAAN;AAGD;;AAED,MAAIkhB,aAAa,KAAK,IAAlB,IAA0B,OAAOA,aAAP,KAAyB,QAAvD,EAAiE;AAC/D,UAAM,IAAIlhB,KAAJ,CACJ,mGADI,CAAN;AAGD;AACF;;AAED,IAAImhB,MAAM,GAAG,SAASA,MAAT,CAAgBD,aAAhB,EAA+BE,IAA/B,EAAqC;AAChD,MAAIC,cAAJ;AAEAJ,EAAAA,2BAA2B,CAACC,aAAD,CAA3B;;AAEA,MAAII,UAAU,GAAG,SAASH,MAAT,CAAgBvb,MAAhB,EAAwB;AACvC,QAAIrD,QAAQ,GAAG,IAAf;;AAEA,QAAIqD,MAAM,YAAY0b,UAAtB,EAAkC;AAChC,aAAO1b,MAAP;AACD;;AACD,QAAI,EAAE,gBAAgB0b,UAAlB,CAAJ,EAAmC;AACjC,aAAO,IAAIA,UAAJ,CAAe1b,MAAf,CAAP;AACD;;AACD,QAAI,CAACyb,cAAL,EAAqB;AACnBA,MAAAA,cAAc,GAAG,IAAjB;AACA,UAAItmB,IAAI,GAAG1D,MAAM,CAAC0D,IAAP,CAAYmmB,aAAZ,CAAX;AACA,UAAIK,OAAO,GAAIC,mBAAmB,CAACC,QAApB,GAA+B,EAA9C,CAHmB,CAInB;AACA;AACA;;AACAD,MAAAA,mBAAmB,CAACE,KAApB,GAA4BN,IAA5B;AACAI,MAAAA,mBAAmB,CAACjkB,KAApB,GAA4BxC,IAA5B;AACAymB,MAAAA,mBAAmB,CAACG,cAApB,GAAqCT,aAArC;;AACA,WAAK,IAAIjlB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlB,IAAI,CAACK,MAAzB,EAAiCa,CAAC,EAAlC,EAAsC;AACpC,YAAI2lB,QAAQ,GAAG7mB,IAAI,CAACkB,CAAD,CAAnB;AACAslB,QAAAA,OAAO,CAACK,QAAD,CAAP,GAAoB3lB,CAApB;;AACA,YAAIulB,mBAAmB,CAACI,QAAD,CAAvB,EAAmC;AACjC;AACA,iBAAOC,OAAP,KAAmB,QAAnB,IACEA,OAAO,CAACC,IADV,IAEED,OAAO,CAACC,IAAR,CACE,mBACEC,UAAU,CAAC,IAAD,CADZ,GAEE,kBAFF,GAGEH,QAHF,GAIE,uDALJ,CAFF;AASA;AACD,SAZD,MAYO;AACLI,UAAAA,OAAO,CAACR,mBAAD,EAAsBI,QAAtB,CAAP;AACD;AACF;AACF;;AACD,SAAKlW,SAAL,GAAiB1W,SAAjB;AACA,SAAKitB,OAAL,GAAevP,IAAI,GAAG/G,aAAP,CAAqB,UAAUuW,CAAV,EAAa;AAC/CA,MAAAA,CAAC,CAAClP,OAAF,CAAUzQ,QAAQ,CAAChF,KAAT,CAAenC,MAAzB;AACAnE,MAAAA,eAAe,CAAC2O,MAAD,CAAf,CAAwB0B,OAAxB,CAAgC,UAAUzN,CAAV,EAAaD,CAAb,EAAgB;AAC9CsoB,QAAAA,CAAC,CAAC/gB,GAAF,CAAMoB,QAAQ,CAACkf,QAAT,CAAkB7nB,CAAlB,CAAN,EAA4BC,CAAC,KAAK0I,QAAQ,CAACof,cAAT,CAAwB/nB,CAAxB,CAAN,GAAmC5E,SAAnC,GAA+C6E,CAA3E;AACD,OAFD;AAGD,KALc,CAAf;AAMA,WAAO,IAAP;AACD,GA/CD;;AAiDA,MAAI2nB,mBAAmB,GAAIF,UAAU,CAAClqB,SAAX,GACzBC,MAAM,CAACC,MAAP,CAAc6qB,eAAd,CADF;AAEAX,EAAAA,mBAAmB,CAACjqB,WAApB,GAAkC+pB,UAAlC;;AAEA,MAAIF,IAAJ,EAAU;AACRE,IAAAA,UAAU,CAACc,WAAX,GAAyBhB,IAAzB;AACD;;AAED,SAAOE,UAAP;AACD,CA/DD;;;;AAiEAH,MAAM,CAAC/pB,SAAP,CAAiBgC,QAAjB,GAA4B,SAASA,QAAT,GAAqB;AAC/C,MAAIipB,GAAG,GAAGN,UAAU,CAAC,IAAD,CAAV,GAAmB,KAA7B;AACA,MAAIhnB,IAAI,GAAG,KAAKwC,KAAhB;AACA,MAAI3D,CAAJ;;AACA,OAAK,IAAIqC,CAAC,GAAG,CAAR,EAAWimB,CAAC,GAAGnnB,IAAI,CAACK,MAAzB,EAAiCa,CAAC,KAAKimB,CAAvC,EAA0CjmB,CAAC,EAA3C,EAA+C;AAC7CrC,IAAAA,CAAC,GAAGmB,IAAI,CAACkB,CAAD,CAAR;AACAomB,IAAAA,GAAG,IAAI,CAACpmB,CAAC,GAAG,IAAH,GAAU,EAAZ,IAAkBrC,CAAlB,GAAsB,IAAtB,GAA6B0P,WAAW,CAAC,KAAKtM,GAAL,CAASpD,CAAT,CAAD,CAA/C;AACD;;AACD,SAAOyoB,GAAG,GAAG,IAAb;AACD,CATD;;AAWAlB,MAAM,CAAC/pB,SAAP,CAAiBqH,MAAjB,GAA0B,SAASA,MAAT,CAAiBwc,KAAjB,EAAwB;AAChD,SACE,SAASA,KAAT,IAAmBA,KAAK,IAAIqH,SAAS,CAAC,IAAD,CAAT,CAAgB7jB,MAAhB,CAAuB6jB,SAAS,CAACrH,KAAD,CAAhC,CAD9B;AAGD,CAJD;;AAMAkG,MAAM,CAAC/pB,SAAP,CAAiBsH,QAAjB,GAA4B,SAASA,QAAT,GAAqB;AAC/C,SAAO4jB,SAAS,CAAC,IAAD,CAAT,CAAgB5jB,QAAhB,EAAP;AACD,CAFD,EAIA;;;AAEAyiB,MAAM,CAAC/pB,SAAP,CAAiB8F,GAAjB,GAAuB,SAASA,GAAT,CAActD,CAAd,EAAiB;AACtC,SAAO,KAAK6nB,QAAL,CAAczmB,cAAd,CAA6BpB,CAA7B,CAAP;AACD,CAFD;;AAIAunB,MAAM,CAAC/pB,SAAP,CAAiB4F,GAAjB,GAAuB,SAASA,GAAT,CAAcpD,CAAd,EAAiBqD,WAAjB,EAA8B;AACnD,MAAI,CAAC,KAAKC,GAAL,CAAStD,CAAT,CAAL,EAAkB;AAChB,WAAOqD,WAAP;AACD;;AACD,MAAI7H,KAAK,GAAG,KAAKqsB,QAAL,CAAc7nB,CAAd,CAAZ;;AACA,MAAInF,KAAK,GAAG,KAAKwtB,OAAL,CAAajlB,GAAb,CAAiB5H,KAAjB,CAAZ;;AACA,SAAOX,KAAK,KAAKO,SAAV,GAAsB,KAAK2sB,cAAL,CAAoB/nB,CAApB,CAAtB,GAA+CnF,KAAtD;AACD,CAPD,EASA;;;AAEA0sB,MAAM,CAAC/pB,SAAP,CAAiB+J,GAAjB,GAAuB,SAASA,GAAT,CAAcvH,CAAd,EAAiBC,CAAjB,EAAoB;AACzC,MAAI,KAAKqD,GAAL,CAAStD,CAAT,CAAJ,EAAiB;AACf,QAAI2oB,SAAS,GAAG,KAAKN,OAAL,CAAa9gB,GAAb,CACd,KAAKsgB,QAAL,CAAc7nB,CAAd,CADc,EAEdC,CAAC,KAAK,KAAK8nB,cAAL,CAAoB/nB,CAApB,CAAN,GAA+B5E,SAA/B,GAA2C6E,CAF7B,CAAhB;;AAIA,QAAI0oB,SAAS,KAAK,KAAKN,OAAnB,IAA8B,CAAC,KAAKvW,SAAxC,EAAmD;AACjD,aAAO8W,UAAU,CAAC,IAAD,EAAOD,SAAP,CAAjB;AACD;AACF;;AACD,SAAO,IAAP;AACD,CAXD;;AAaApB,MAAM,CAAC/pB,SAAP,CAAiB0S,MAAjB,GAA0B,SAASA,MAAT,CAAiBlQ,CAAjB,EAAoB;AAC5C,SAAO,KAAKuH,GAAL,CAASvH,CAAT,CAAP;AACD,CAFD;;AAIAunB,MAAM,CAAC/pB,SAAP,CAAiB0W,KAAjB,GAAyB,SAASA,KAAT,GAAkB;AACzC,MAAIyU,SAAS,GAAG,KAAKN,OAAL,CAAanU,KAAb,GAAqBkF,OAArB,CAA6B,KAAKzV,KAAL,CAAWnC,MAAxC,CAAhB;;AAEA,SAAO,KAAKsQ,SAAL,GAAiB,IAAjB,GAAwB8W,UAAU,CAAC,IAAD,EAAOD,SAAP,CAAzC;AACD,CAJD;;AAMApB,MAAM,CAAC/pB,SAAP,CAAiBmW,UAAjB,GAA8B,SAASA,UAAT,GAAuB;AACnD,SAAO,KAAK0U,OAAL,CAAa1U,UAAb,EAAP;AACD,CAFD;;AAIA4T,MAAM,CAAC/pB,SAAP,CAAiBkE,KAAjB,GAAyB,SAASA,KAAT,GAAkB;AACzC,SAAOgnB,SAAS,CAAC,IAAD,CAAhB;AACD,CAFD;;AAIAnB,MAAM,CAAC/pB,SAAP,CAAiB0hB,IAAjB,GAAwB,SAAS4C,MAAT,GAAmB;AACzC,SAAO5C,IAAI,CAAC,IAAD,CAAX;AACD,CAFD;;AAIAqI,MAAM,CAAC/pB,SAAP,CAAiByD,OAAjB,GAA2B,SAASA,OAAT,GAAoB;AAC7C,SAAO,KAAKsB,UAAL,CAAgBvD,eAAhB,CAAP;AACD,CAFD;;AAIAuoB,MAAM,CAAC/pB,SAAP,CAAiB+E,UAAjB,GAA8B,SAASA,UAAT,CAAqBxC,IAArB,EAA2BoC,OAA3B,EAAoC;AAChE,SAAOumB,SAAS,CAAC,IAAD,CAAT,CAAgBnmB,UAAhB,CAA2BxC,IAA3B,EAAiCoC,OAAjC,CAAP;AACD,CAFD;;AAIAolB,MAAM,CAAC/pB,SAAP,CAAiBnC,SAAjB,GAA6B,SAASA,SAAT,CAAoB6G,EAApB,EAAwBC,OAAxB,EAAiC;AAC5D,SAAOumB,SAAS,CAAC,IAAD,CAAT,CAAgBrtB,SAAhB,CAA0B6G,EAA1B,EAA8BC,OAA9B,CAAP;AACD,CAFD;;AAIAolB,MAAM,CAAC/pB,SAAP,CAAiBoW,aAAjB,GAAiC,SAASA,aAAT,CAAwBW,OAAxB,EAAiC;AAChE,MAAIA,OAAO,KAAK,KAAKzC,SAArB,EAAgC;AAC9B,WAAO,IAAP;AACD;;AACD,MAAI6W,SAAS,GAAG,KAAKN,OAAL,CAAazU,aAAb,CAA2BW,OAA3B,CAAhB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ,SAAKzC,SAAL,GAAiByC,OAAjB;AACA,SAAK8T,OAAL,GAAeM,SAAf;AACA,WAAO,IAAP;AACD;;AACD,SAAOC,UAAU,CAAC,IAAD,EAAOD,SAAP,EAAkBpU,OAAlB,CAAjB;AACD,CAXD;;AAaAgT,MAAM,CAAChpB,QAAP,GAAkBA,QAAlB;AACAgpB,MAAM,CAACsB,kBAAP,GAA4BV,UAA5B;AACA,IAAII,eAAe,GAAGhB,MAAM,CAAC/pB,SAA7B;AACA+qB,eAAe,CAACjqB,gBAAD,CAAf,GAAoC,IAApC;AACAiqB,eAAe,CAAChuB,MAAD,CAAf,GAA0BguB,eAAe,CAACrY,MAA1C;AACAqY,eAAe,CAAClX,QAAhB,GAA2BkX,eAAe,CAACnX,QAAhB,GAA2BC,QAAtD;AACAkX,eAAe,CAAC/G,KAAhB,GAAwBA,KAAxB;AACA+G,eAAe,CAAC7G,KAAhB,GAAwB4D,mBAAmB,CAAC5D,KAA5C;AACA6G,eAAe,CAACrW,KAAhB,GAAwBV,OAAxB;AACA+W,eAAe,CAAClW,SAAhB,GAA4BX,WAA5B;AACA6W,eAAe,CAAChV,OAAhB,GAA0BA,OAA1B;AACAgV,eAAe,CAAClV,SAAhB,GAA4BA,SAA5B;AACAkV,eAAe,CAACjV,aAAhB,GAAgCA,aAAhC;AACAiV,eAAe,CAAC9U,WAAhB,GAA8BA,WAA9B;AACA8U,eAAe,CAACpX,KAAhB,GAAwBA,KAAxB;AACAoX,eAAe,CAACje,MAAhB,GAAyBA,MAAzB;AACAie,eAAe,CAAChX,QAAhB,GAA2BA,QAA3B;AACAgX,eAAe,CAACxW,aAAhB,GAAgCA,aAAhC;AACAwW,eAAe,CAACle,SAAhB,GAA4BA,SAA5B;AACAke,eAAe,CAAChe,WAAhB,GAA8BA,WAA9B;AACAge,eAAe,CAAClpB,eAAD,CAAf,GAAmCkpB,eAAe,CAACtnB,OAAnD;AACAsnB,eAAe,CAAChD,MAAhB,GAAyBgD,eAAe,CAAC5G,QAAhB,GACvB2D,mBAAmB,CAAC3D,QADtB;;AAEA4G,eAAe,CAAC3oB,OAAhB,GAA0B2oB,eAAe,CAAC1oB,QAAhB,GAA2B,YAAY;AAC/D,SAAO,KAAKL,QAAL,EAAP;AACD,CAFD;;AAIA,SAASopB,UAAT,CAAoBE,UAApB,EAAgC9c,MAAhC,EAAwCuI,OAAxC,EAAiD;AAC/C,MAAIwU,MAAM,GAAGtrB,MAAM,CAACC,MAAP,CAAcD,MAAM,CAAC6R,cAAP,CAAsBwZ,UAAtB,CAAd,CAAb;AACAC,EAAAA,MAAM,CAACV,OAAP,GAAiBrc,MAAjB;AACA+c,EAAAA,MAAM,CAACjX,SAAP,GAAmByC,OAAnB;AACA,SAAOwU,MAAP;AACD;;AAED,SAASZ,UAAT,CAAoBY,MAApB,EAA4B;AAC1B,SAAOA,MAAM,CAACprB,WAAP,CAAmB6qB,WAAnB,IAAkCO,MAAM,CAACprB,WAAP,CAAmB6pB,IAArD,IAA6D,QAApE;AACD;;AAED,SAASkB,SAAT,CAAmBK,MAAnB,EAA2B;AACzB,SAAOpmB,iBAAiB,CAAComB,MAAM,CAACplB,KAAP,CAAamF,GAAb,CAAiB,UAAU9I,CAAV,EAAa;AAAE,WAAO,CAACA,CAAD,EAAI+oB,MAAM,CAAC3lB,GAAP,CAAWpD,CAAX,CAAJ,CAAP;AAA4B,GAA5D,CAAD,CAAxB;AACD;;AAED,SAASooB,OAAT,CAAiB5qB,SAAjB,EAA4BgqB,IAA5B,EAAkC;AAChC,MAAI;AACF/pB,IAAAA,MAAM,CAACgK,cAAP,CAAsBjK,SAAtB,EAAiCgqB,IAAjC,EAAuC;AACrCpkB,MAAAA,GAAG,EAAE,YAAY;AACf,eAAO,KAAKA,GAAL,CAASokB,IAAT,CAAP;AACD,OAHoC;AAIrCjgB,MAAAA,GAAG,EAAE,UAAU1M,KAAV,EAAiB;AACpBiU,QAAAA,SAAS,CAAC,KAAKgD,SAAN,EAAiB,oCAAjB,CAAT;AACA,aAAKvK,GAAL,CAASigB,IAAT,EAAe3sB,KAAf;AACD;AAPoC,KAAvC;AASD,GAVD,CAUE,OAAOmU,KAAP,EAAc,CACd;AACD;AACF;AAED;AACA;AACA;AACA;;;AACA,IAAIga,MAAM,GAAG,aAAc,UAAUnrB,UAAV,EAAsB;AAC/C,WAASmrB,MAAT,CAAgBnuB,KAAhB,EAAuBouB,KAAvB,EAA8B;AAC5B,QAAI,EAAE,gBAAgBD,MAAlB,CAAJ,EAA+B;AAC7B,aAAO,IAAIA,MAAJ,CAAWnuB,KAAX,EAAkBouB,KAAlB,CAAP;AACD;;AACD,SAAKC,MAAL,GAAcruB,KAAd;AACA,SAAKM,IAAL,GAAY8tB,KAAK,KAAK7tB,SAAV,GAAsBe,QAAtB,GAAiCC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY4sB,KAAZ,CAA7C;;AACA,QAAI,KAAK9tB,IAAL,KAAc,CAAlB,EAAqB;AACnB,UAAIguB,YAAJ,EAAkB;AAChB,eAAOA,YAAP;AACD;;AACDA,MAAAA,YAAY,GAAG,IAAf;AACD;AACF;;AAED,MAAKtrB,UAAL,EAAkBmrB,MAAM,CAACzrB,SAAP,GAAmBM,UAAnB;AAClBmrB,EAAAA,MAAM,CAACxrB,SAAP,GAAmBC,MAAM,CAACC,MAAP,CAAeG,UAAU,IAAIA,UAAU,CAACL,SAAxC,CAAnB;AACAwrB,EAAAA,MAAM,CAACxrB,SAAP,CAAiBG,WAAjB,GAA+BqrB,MAA/B;;AAEAA,EAAAA,MAAM,CAACxrB,SAAP,CAAiBgC,QAAjB,GAA4B,SAASA,QAAT,GAAqB;AAC/C,QAAI,KAAKrE,IAAL,KAAc,CAAlB,EAAqB;AACnB,aAAO,WAAP;AACD;;AACD,WAAO,cAAc,KAAK+tB,MAAnB,GAA4B,GAA5B,GAAkC,KAAK/tB,IAAvC,GAA8C,UAArD;AACD,GALD;;AAOA6tB,EAAAA,MAAM,CAACxrB,SAAP,CAAiB4F,GAAjB,GAAuB,SAASA,GAAT,CAAc5H,KAAd,EAAqB6H,WAArB,EAAkC;AACvD,WAAO,KAAKC,GAAL,CAAS9H,KAAT,IAAkB,KAAK0tB,MAAvB,GAAgC7lB,WAAvC;AACD,GAFD;;AAIA2lB,EAAAA,MAAM,CAACxrB,SAAP,CAAiB4L,QAAjB,GAA4B,SAASA,QAAT,CAAmB2X,WAAnB,EAAgC;AAC1D,WAAOhc,EAAE,CAAC,KAAKmkB,MAAN,EAAcnI,WAAd,CAAT;AACD,GAFD;;AAIAiI,EAAAA,MAAM,CAACxrB,SAAP,CAAiBsT,KAAjB,GAAyB,SAASA,KAAT,CAAgBlV,KAAhB,EAAuBC,GAAvB,EAA4B;AACnD,QAAIV,IAAI,GAAG,KAAKA,IAAhB;AACA,WAAOQ,UAAU,CAACC,KAAD,EAAQC,GAAR,EAAaV,IAAb,CAAV,GACH,IADG,GAEH,IAAI6tB,MAAJ,CACE,KAAKE,MADP,EAEEjtB,UAAU,CAACJ,GAAD,EAAMV,IAAN,CAAV,GAAwBY,YAAY,CAACH,KAAD,EAAQT,IAAR,CAFtC,CAFJ;AAMD,GARD;;AAUA6tB,EAAAA,MAAM,CAACxrB,SAAP,CAAiB2E,OAAjB,GAA2B,SAASA,OAAT,GAAoB;AAC7C,WAAO,IAAP;AACD,GAFD;;AAIA6mB,EAAAA,MAAM,CAACxrB,SAAP,CAAiB0jB,OAAjB,GAA2B,SAASA,OAAT,CAAkBH,WAAlB,EAA+B;AACxD,QAAIhc,EAAE,CAAC,KAAKmkB,MAAN,EAAcnI,WAAd,CAAN,EAAkC;AAChC,aAAO,CAAP;AACD;;AACD,WAAO,CAAC,CAAR;AACD,GALD;;AAOAiI,EAAAA,MAAM,CAACxrB,SAAP,CAAiB4jB,WAAjB,GAA+B,SAASA,WAAT,CAAsBL,WAAtB,EAAmC;AAChE,QAAIhc,EAAE,CAAC,KAAKmkB,MAAN,EAAcnI,WAAd,CAAN,EAAkC;AAChC,aAAO,KAAK5lB,IAAZ;AACD;;AACD,WAAO,CAAC,CAAR;AACD,GALD;;AAOA6tB,EAAAA,MAAM,CAACxrB,SAAP,CAAiBnC,SAAjB,GAA6B,SAASA,SAAT,CAAoB6G,EAApB,EAAwBC,OAAxB,EAAiC;AAC5D,QAAIhH,IAAI,GAAG,KAAKA,IAAhB;AACA,QAAIkH,CAAC,GAAG,CAAR;;AACA,WAAOA,CAAC,KAAKlH,IAAb,EAAmB;AACjB,UAAI+G,EAAE,CAAC,KAAKgnB,MAAN,EAAc/mB,OAAO,GAAGhH,IAAI,GAAG,EAAEkH,CAAZ,GAAgBA,CAAC,EAAtC,EAA0C,IAA1C,CAAF,KAAsD,KAA1D,EAAiE;AAC/D;AACD;AACF;;AACD,WAAOA,CAAP;AACD,GATD;;AAWA2mB,EAAAA,MAAM,CAACxrB,SAAP,CAAiB+E,UAAjB,GAA8B,SAASA,UAAT,CAAqBxC,IAArB,EAA2BoC,OAA3B,EAAoC;AAChE,QAAIwG,QAAQ,GAAG,IAAf;AAEA,QAAIxN,IAAI,GAAG,KAAKA,IAAhB;AACA,QAAIkH,CAAC,GAAG,CAAR;AACA,WAAO,IAAI/C,QAAJ,CAAa,YAAY;AAAE,aAAO+C,CAAC,KAAKlH,IAAN,GACnCiF,YAAY,EADuB,GAEnCN,aAAa,CAACC,IAAD,EAAOoC,OAAO,GAAGhH,IAAI,GAAG,EAAEkH,CAAZ,GAAgBA,CAAC,EAA/B,EAAmCsG,QAAQ,CAACugB,MAA5C,CAFe;AAEuC,KAFlE,CAAP;AAID,GATD;;AAWAF,EAAAA,MAAM,CAACxrB,SAAP,CAAiBqH,MAAjB,GAA0B,SAASA,MAAT,CAAiBwc,KAAjB,EAAwB;AAChD,WAAOA,KAAK,YAAY2H,MAAjB,GACHjkB,EAAE,CAAC,KAAKmkB,MAAN,EAAc7H,KAAK,CAAC6H,MAApB,CADC,GAEH3K,SAAS,CAAC8C,KAAD,CAFb;AAGD,GAJD;;AAMA,SAAO2H,MAAP;AACD,CA3F0B,CA2FzBnrB,UA3FyB,CAA3B;;;AA6FA,IAAIsrB,YAAJ;;AAEA,SAASC,MAAT,CAAgBvuB,KAAhB,EAAuBwuB,SAAvB,EAAkC;AAChC,SAAOC,UAAU,CACf,EADe,EAEfD,SAAS,IAAIE,gBAFE,EAGf1uB,KAHe,EAIf,EAJe,EAKfwuB,SAAS,IAAIA,SAAS,CAAC7nB,MAAV,GAAmB,CAAhC,GAAoC,EAApC,GAAyCpG,SAL1B,EAMf;AAAE,QAAIP;AAAN,GANe,CAAjB;AAQD;;AAED,SAASyuB,UAAT,CAAoBtc,KAApB,EAA2Bqc,SAA3B,EAAsCxuB,KAAtC,EAA6C+I,GAA7C,EAAkDuL,OAAlD,EAA2Dqa,WAA3D,EAAwE;AACtE,MACE,OAAO3uB,KAAP,KAAiB,QAAjB,IACA,CAAC4D,WAAW,CAAC5D,KAAD,CADZ,KAECwG,WAAW,CAACxG,KAAD,CAAX,IAAsBwF,WAAW,CAACxF,KAAD,CAAjC,IAA4CuU,aAAa,CAACvU,KAAD,CAF1D,CADF,EAIE;AACA,QAAI,CAACmS,KAAK,CAACkU,OAAN,CAAcrmB,KAAd,CAAL,EAA2B;AACzB,YAAM,IAAIwJ,SAAJ,CAAc,gDAAd,CAAN;AACD;;AACD2I,IAAAA,KAAK,CAACrC,IAAN,CAAW9P,KAAX;AACAsU,IAAAA,OAAO,IAAIvL,GAAG,KAAK,EAAnB,IAAyBuL,OAAO,CAACxE,IAAR,CAAa/G,GAAb,CAAzB;AACA,QAAI6lB,SAAS,GAAGJ,SAAS,CAACtoB,IAAV,CACdyoB,WADc,EAEd5lB,GAFc,EAGdxG,GAAG,CAACvC,KAAD,CAAH,CAAWiO,GAAX,CAAe,UAAU7I,CAAV,EAAaD,CAAb,EAAgB;AAAE,aAAOspB,UAAU,CAACtc,KAAD,EAAQqc,SAAR,EAAmBppB,CAAnB,EAAsBD,CAAtB,EAAyBmP,OAAzB,EAAkCtU,KAAlC,CAAjB;AAA4D,KAA7F,CAHc,EAKdsU,OAAO,IAAIA,OAAO,CAAC2B,KAAR,EALG,CAAhB;AAOA9D,IAAAA,KAAK,CAACC,GAAN;AACAkC,IAAAA,OAAO,IAAIA,OAAO,CAAClC,GAAR,EAAX;AACA,WAAOwc,SAAP;AACD;;AACD,SAAO5uB,KAAP;AACD;;AAED,SAAS0uB,gBAAT,CAA0BvpB,CAA1B,EAA6BC,CAA7B,EAAgC;AAC9B;AACA,SAAOlD,SAAS,CAACkD,CAAD,CAAT,GAAeA,CAAC,CAACkiB,MAAF,EAAf,GAA4BvlB,OAAO,CAACqD,CAAD,CAAP,GAAaA,CAAC,CAACmd,KAAF,EAAb,GAAyBnd,CAAC,CAACgiB,KAAF,EAA5D;AACD;;AAED,IAAIyH,OAAO,GAAG,OAAd;;AAEA,IAAIC,SAAS,GAAG;AACdD,EAAAA,OAAO,EAAEA,OADK;AAGdvsB,EAAAA,UAAU,EAAEA,UAHE;AAId;AACAysB,EAAAA,QAAQ,EAAEzsB,UALI;AAOdC,EAAAA,GAAG,EAAEA,GAPS;AAQdgN,EAAAA,GAAG,EAAEA,GARS;AASdM,EAAAA,UAAU,EAAEA,UATE;AAUdoO,EAAAA,IAAI,EAAEA,IAVQ;AAWd0E,EAAAA,KAAK,EAAEA,KAXO;AAYdtf,EAAAA,GAAG,EAAEA,GAZS;AAadgiB,EAAAA,UAAU,EAAEA,UAbE;AAedqH,EAAAA,MAAM,EAAEA,MAfM;AAgBdhH,EAAAA,KAAK,EAAEA,KAhBO;AAiBdyI,EAAAA,MAAM,EAAEA,MAjBM;AAmBdjkB,EAAAA,EAAE,EAAEA,EAnBU;AAoBdqkB,EAAAA,MAAM,EAAEA,MApBM;AAqBdzjB,EAAAA,IAAI,EAAEA,IArBQ;AAuBdlH,EAAAA,WAAW,EAAEA,WAvBC;AAwBdjC,EAAAA,YAAY,EAAEA,YAxBA;AAyBdI,EAAAA,OAAO,EAAEA,OAzBK;AA0BdG,EAAAA,SAAS,EAAEA,SA1BG;AA2BdE,EAAAA,aAAa,EAAEA,aA3BD;AA4Bd2B,EAAAA,SAAS,EAAEA,SA5BG;AA6Bd+F,EAAAA,aAAa,EAAEA,aA7BD;AA8BdyK,EAAAA,aAAa,EAAEA,aA9BD;AA+BdhR,EAAAA,KAAK,EAAEA,KA/BO;AAgCdwa,EAAAA,MAAM,EAAEA,MAhCM;AAiCdrU,EAAAA,KAAK,EAAEA,KAjCO;AAkCdE,EAAAA,YAAY,EAAEA,YAlCA;AAmCd6Y,EAAAA,OAAO,EAAEA,OAnCK;AAoCda,EAAAA,KAAK,EAAEA,KApCO;AAqCdE,EAAAA,YAAY,EAAEA,YArCA;AAsCd9f,EAAAA,QAAQ,EAAEA,QAtCI;AAwCd6E,EAAAA,GAAG,EAAEA,GAxCS;AAyCdoe,EAAAA,KAAK,EAAEF,OAzCO;AA0Cdhe,EAAAA,GAAG,EAAEA,GA1CS;AA2Cdoe,EAAAA,KAAK,EAAED,OA3CO;AA4CdvP,EAAAA,KAAK,EAAEA,KA5CO;AA6CdmB,EAAAA,SAAS,EAAEf,WA7CG;AA8CdD,EAAAA,SAAS,EAAEA,SA9CG;AA+CdiB,EAAAA,aAAa,EAAEd,eA/CD;AAgDdtC,EAAAA,MAAM,EAAEA,MAhDM;AAiDdkB,EAAAA,QAAQ,EAAEA,QAjDI;AAkDd7J,EAAAA,GAAG,EAAEA,GAlDS;AAmDd4J,EAAAA,KAAK,EAAED,OAnDO;AAoDd5G,EAAAA,MAAM,EAAEgH,QApDM;AAqDdC,EAAAA,QAAQ,EAAElB;AArDI,CAAhB,EAwDA;;AACA,IAAIuZ,QAAQ,GAAGzsB,UAAf;;eAEewsB;;;;;;;;;;;ACryLf;;;;;;;;IAEM;AACJ,gBAAqB,MAArB,EAAkD,KAAlD,EAAkE;AAAA;;AAA7C,SAAA,MAAA,GAAA,MAAA;AAA6B,SAAA,KAAA,GAAA,KAAA;AAAoB;;;;+BAE9D;AACN,4BAAe,KAAK,MAApB,eAA+B,KAAK,KAApC;AACD;;;2BAEM,OAAc;AACnB,UAAM,CAAC,GAAG,KAAV;AACA,aAAO,CAAC,IAAI,mBAAG,CAAC,CAAC,MAAL,EAAa,KAAK,MAAlB,CAAL,IAAkC,mBAAG,CAAC,CAAC,KAAL,EAAY,KAAK,KAAjB,CAAzC;AACD;;;+BAEO;AACN,aAAO,qBAAK,KAAK,MAAL,CAAY,QAAZ,EAAL,IAA+B,qBAAK,KAAK,KAAL,CAAW,QAAX,EAAL,CAAtC;AACD;;;;;;;;IAGG;AACJ,0BAAqB,IAArB,EAA0C,QAA1C,EAA4D;AAAA;;AAAvC,SAAA,IAAA,GAAA,IAAA;AAAqB,SAAA,QAAA,GAAA,QAAA;AAAsB;;;;+BAkBxD;AACN,wBAAW,KAAK,IAAL,CAAU,QAAV,EAAX,eAAoC,KAAK,QAAL,CAAc,QAAd,EAApC;AACD;;;2BAEM,OAAc;AACnB,UAAM,CAAC,GAAG,KAAV;AACA,aAAO,CAAC,IAAI,mBAAG,CAAC,CAAC,QAAL,EAAe,KAAK,QAApB,CAAL,IAAsC,mBAAG,CAAC,CAAC,IAAL,EAAW,KAAK,IAAhB,CAA7C;AACD;;;+BAEO;AACN,aAAO,KAAK,IAAL,CAAU,QAAV,KAAuB,KAAK,QAAL,CAAc,QAAd,EAA9B;AACD;;;wBAnBS;AACR,aAAO,KAAK,IAAL,CAAU,MAAjB;AACD;;;wBAEQ;AACP,aAAO,KAAK,IAAL,CAAU,KAAjB;AACD;;;yBAbC,UACA,QACA,OAAgB;AAEhB,aAAO,IAAI,cAAJ,CAAmB,IAAI,IAAJ,CAAS,MAAT,EAAiB,KAAjB,CAAnB,EAA4C,QAA5C,CAAP;AACD;;;;;;;;IAwBG;AAGJ,oBAAqB,CAArB,EAAyC,CAAzC,EAAkD;AAAA;;AAA7B,SAAA,CAAA,GAAA,CAAA;AAAoB,SAAA,CAAA,GAAA,CAAA;AAAa;;;;0BAkBhD,OAAe;AACnB,aAAO,IAAI,QAAJ,CAAa,KAAK,CAAL,GAAS,KAAK,CAAC,CAA5B,EAA+B,KAAK,CAAL,GAAS,KAAK,CAAC,CAA9C,CAAP;AACD;;;yBAEI,OAAe;AAClB,aAAO,IAAI,QAAJ,CAAa,KAAK,CAAL,GAAS,KAAK,CAAC,CAA5B,EAA+B,KAAK,CAAL,GAAS,KAAK,CAAC,CAA9C,CAAP;AACD;;;+BAEO;AACN,wBAAW,KAAK,CAAhB,eAAsB,KAAK,CAA3B;AACD;;;2BAEM,OAAc;AACnB,UAAM,CAAC,GAAG,KAAV;AACA,aAAO,CAAC,IAAI,CAAC,CAAC,CAAF,KAAQ,KAAK,CAAlB,IAAuB,CAAC,CAAC,CAAF,KAAQ,KAAK,CAA3C;AACD;;;+BAEO;AACN,aAAO,qBAAK,KAAK,CAAV,IAAe,qBAAK,KAAK,CAAV,CAAtB;AACD;;;0BAnCmB,KAAa;AAC/B,aAAO,IAAI,QAAJ,CAAa,GAAG,CAAC,CAAjB,EAAoB,GAAG,CAAC,CAAJ,GAAQ,CAA5B,CAAP;AACD;;;0BAEmB,KAAa;AAC/B,aAAO,IAAI,QAAJ,CAAa,GAAG,CAAC,CAAjB,EAAoB,GAAG,CAAC,CAAJ,GAAQ,CAA5B,CAAP;AACD;;;yBAEkB,KAAa;AAC9B,aAAO,IAAI,QAAJ,CAAa,GAAG,CAAC,CAAJ,GAAQ,CAArB,EAAwB,GAAG,CAAC,CAA5B,CAAP;AACD;;;0BAEmB,KAAa;AAC/B,aAAO,IAAI,QAAJ,CAAa,GAAG,CAAC,CAAJ,GAAQ,CAArB,EAAwB,GAAG,CAAC,CAA5B,CAAP;AACD;;;;;;;AAlBa,QAAA,CAAA,IAAA,GAAiB,IAAI,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAjB;;IA0CV;AACJ,gBACW,QADX,EAEW,KAFX,EAGW,MAHX,EAGyB;AAAA;;AAFd,SAAA,QAAA,GAAA,QAAA;AACA,SAAA,KAAA,GAAA,KAAA;AACA,SAAA,MAAA,GAAA,MAAA;AACP;;;;6BAEK,UAAkB;AACzB,aACE,QAAQ,CAAC,CAAT,IAAc,KAAK,QAAL,CAAc,CAA5B,IACA,QAAQ,CAAC,CAAT,IAAc,KAAK,QAAL,CAAc,CAAd,GAAkB,KAAK,KADrC,IAEA,QAAQ,CAAC,CAAT,IAAc,KAAK,QAAL,CAAc,CAF5B,IAGA,QAAQ,CAAC,CAAT,IAAc,KAAK,QAAL,CAAc,CAAd,GAAkB,KAAK,MAJvC;AAMD;;;6BAEK;AACJ,aAAO,IAAI,QAAJ,CACL,KAAK,QAAL,CAAc,CAAd,GAAkB,KAAK,KAAL,GAAa,CAD1B,EAEL,KAAK,QAAL,CAAc,CAAd,GAAkB,KAAK,MAAL,GAAc,CAF3B,CAAP;AAID;;;+BAEO;AACN,wBAAW,KAAK,QAAL,CAAc,QAAd,EAAX,qBAA8C,KAAK,KAAnD,sBACE,KAAK,MADP;AAGD;;;2BAEM,OAAc;AACnB,UAAM,CAAC,GAAG,KAAV;AACA,aACE,CAAC,IACD,CAAC,CAAC,QAAF,CAAW,MAAX,CAAkB,KAAK,QAAvB,CADA,IAEA,CAAC,CAAC,KAAF,KAAY,KAAK,KAFjB,IAGA,CAAC,CAAC,MAAF,KAAa,KAAK,MAJpB;AAMD;;;+BAEO;AACN,aAAO,KAAK,QAAL,CAAc,QAAd,KAA2B,qBAAK,KAAK,KAAV,CAA3B,GAA8C,qBAAK,KAAK,MAAV,CAArD;AACD;;;;;;;;AAwCH,SAAS,WAAT,CAAqB,eAArB,EAAqD;AACnD,UAAQ,eAAe,CAAC,IAAxB;AACE,SAAK,SAAL;AACE,uBAAU,eAAe,CAAC,IAA1B,8BAAkD,eAAe,CAAC,QAAhB,CAAyB,IAA3E;;AACF,SAAK,iCAAL;AACE,uBAAU,eAAe,CAAC,IAA1B,eAAmC,eAAe,CAAC,KAAnD;;AACF,SAAK,oCAAL;AACE,uBAAU,eAAe,CAAC,IAA1B;;AACF,SAAK,oBAAL;AACE,uBAAU,eAAe,CAAC,IAA1B,eAAmC,eAAe,CAAC,KAAnD;;AACF,SAAK,qBAAL;AACE,uBAAU,eAAe,CAAC,IAA1B,eAAmC,eAAe,CAAC,KAAnD;;AACF,SAAK,6BAAL;AACE,uBAAU,eAAe,CAAC,IAA1B;AAZJ;AAcD;;AAED,IAAK,UAAL;;;AAAA,CAAA,UAAK,UAAL,EAAe;AACb,EAAA,UAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,UAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AACA,EAAA,UAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,UAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,UAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,UAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACD,CAPD,EAAK,UAAU,0BAAV,UAAU,GAAA,EAAA,CAAf;;AASA,IAAK,SAAL;;;AAAA,CAAA,UAAK,SAAL,EAAc;AACZ,EAAA,SAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AACA,EAAA,SAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AACA,EAAA,SAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,SAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,SAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AACD,CAPD,EAAK,SAAS,yBAAT,SAAS,GAAA,EAAA,CAAdtJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrvzwhBM,SAAU,SAAV,CAAoB,GAApB,EAA+B;AACnC,MAAM,GAAG,GAAG,IAAI,KAAJ,EAAZ;AACA,EAAA,GAAG,CAAC,GAAJ,GAAU,GAAV;AACA,SAAO,GAAP;AACD;;;;;;;;;ACJD;;AACA;;AACA;;;;;;;;AAEA,SAAS,cAAT,GAAuB;AACrB,MAAI,OAAO,GAAsD,IAAI,GAAJ,EAAjE;AAEA,qBAAM,kBAAN,EAAkB,UAAC,WAAD,EAAc,CAAd,EAAmB;AACnC,QAAI,MAAM,GAAqC,IAAI,GAAJ,EAA/C;AACA,uBAAM,iBAAN,EAAiB,UAAC,UAAD,EAAa,CAAb,EAAkB;AACjC,UAAM,GAAG,sBAAe,UAAU,CAAC,QAAX,EAAf,cAAwC,WAAW,CAAC,QAAZ,EAAxC,SAAT;AACA,MAAA,MAAM,CAAC,GAAP,CAAW,UAAX,EAAuB,wBAAU,GAAV,CAAvB;AACD,KAHD;AAIA,IAAA,OAAO,CAAC,GAAR,CAAY,WAAZ,EAAyB,MAAzB;AACD,GAPD;AASA,SAAO,OAAP;AACD;;AAED,IAAM,UAAU,GAA+C,cAAc,EAA7E;AAEA,IAAM,cAAc,GAAG,wBAAU,yBAAV,CAAvB;AACA,IAAM,cAAc,GAAG,wBAAU,yBAAV,CAAvB;AACA,IAAM,cAAc,GAAG,wBAAU,yBAAV,CAAvB;AACA,IAAM,eAAe,GAAG,wBAAU,0BAAV,CAAxB;AAEA,IAAM,QAAQ,GAAG,cAAc,CAAC,KAAf,GAAuB,CAAxC;AACA,IAAM,SAAS,GAAG,cAAc,CAAC,MAAf,GAAwB,CAA1C;AAEA,IAAM,OAAO,GAAG,EAAhB;;IAEa;;;;;;;kCAET,SACA,UAAkB;AAElB,MAAA,OAAO,CAAC,SAAR,CACE,cADF,EAEE,QAAQ,CAAC,CAFX,EAGE,QAAQ,CAAC,CAHX,EAIE,cAAc,CAAC,KAJjB,EAKE,cAAc,CAAC,MALjB;AAOD;;;kCAWC,SACA,UACA,MAAU;AAEV,WAAK,QAAL,CAAc,OAAd,EAAuB,QAAvB,EAAiC,IAAjC,EAAuC,cAAvC;AACD;;;qCAGC,SACA,UACA,MAAU;AAEV,WAAK,QAAL,CAAc,OAAd,EAAuB,QAAvB,EAAiC,IAAjC,EAAuC,cAAvC;AACD;;;mCAGC,SACA,UACA,MAAU;AAEV,WAAK,QAAL,CAAc,OAAd,EAAuB,QAAvB,EAAiC,IAAjC,EAAuC,eAAvC;AACD;;;6BAGC,SACA,UACA,MACA,gBAAgC;;;AAEhC,MAAA,OAAO,CAAC,SAAR,CACE,cADF,EAEE,QAAQ,CAAC,CAFX,EAGE,QAAQ,CAAC,CAHX,EAIE,cAAc,CAAC,KAJjB,EAKE,cAAc,CAAC,MALjB;AAOA,UAAM,KAAK,GAAG,CAAA,EAAA,GAAA,UAAU,CACrB,GADW,CACP,IAAI,CAAC,MADE,CAAA,MACK,IADL,IACK,EAAA,KAAA,KAAA,CADL,GACK,KAAA,CADL,GACK,EAAA,CACf,GADe,CACX,IAAI,CAAC,KADM,CADnB;;AAIA,UAAI,KAAJ,EAAW;AACT,QAAA,OAAO,CAAC,SAAR,CACE,KADF,EAEE,QAAQ,CAAC,CAAT,GAAa,QAAQ,GAAG,CAF1B,EAGE,QAAQ,CAAC,CAAT,GAAa,SAAS,GAAG,CAH3B,EAIE,QAJF,EAKE,SALF;AAOD;AACF;;;iCAEmB,KAAe,KAAa;AAC9C,UAAM,KAAK,GAAG,GAAG,CAAC,CAAJ,GAAQ,YAAY,CAAC,SAArB,GAAiC,GAAG,CAAC,CAAJ,GAAQ,OAAvD;AACA,UAAM,KAAK,GAAG,GAAG,CAAC,CAAJ,GAAQ,YAAY,CAAC,UAArB,GAAkC,GAAG,CAAC,CAAJ,GAAQ,OAAxD;AACA,aAAO,IAAI,gBAAJ,CAAa,GAAG,CAAC,CAAJ,GAAQ,KAArB,EAA4B,GAAG,CAAC,CAAJ,GAAQ,KAApC,CAAP;AACD;;;uCAEyB,QAAkB,KAAa;AACvD,UAAM,KAAK,GAAG,CAAC,MAAM,CAAC,CAAP,GAAW,GAAG,CAAC,CAAhB,KAAsB,YAAY,CAAC,SAAb,GAAyB,OAA/C,CAAd;AACA,UAAM,KAAK,GAAG,CAAC,MAAM,CAAC,CAAP,GAAW,GAAG,CAAC,CAAhB,KAAsB,YAAY,CAAC,UAAb,GAA0B,OAAhD,CAAd;AACA,aAAO,IAAI,gBAAJ,CAAa,IAAI,CAAC,KAAL,CAAW,KAAX,CAAb,EAAgC,IAAI,CAAC,KAAL,CAAW,KAAX,CAAhC,CAAP;AACD;;;wBAtEmB;AAClB,aAAO,cAAc,CAAC,KAAtB;AACD;;;wBAEoB;AACnB,aAAO,cAAc,CAAC,MAAtB;AACD;;;;;;;;;;;;;;;ACnDH;;AACA;;AACA;;AACA;;;;;;;;AAIA,IAAM,eAAe,GAAG,wBAAU,0BAAV,CAAxB;AACA,IAAM,uBAAuB,GAAG,EAAhC;AACO,IAAM,YAAY,GAAG,GAArB;;AACP,IAAM,qBAAqB,GAAG,EAA9B;AACA,IAAM,WAAW,GAAG,CAApB;AACA,IAAM,OAAO,GAAG,CAAhB;AACA,IAAM,aAAa,GAAG,wBAAU,wBAAV,CAAtB;AACA,IAAM,WAAW,GAAG,wBAAU,2BAAV,CAApB;AAEA,IAAM,WAAW,GACf,uBAAuB,GACvB,OADA,GAEA,WAAW,GAAG,2BAAa,SAF3B,GAGA,CAAC,WAAW,GAAG,CAAf,IAAoB,OAHpB,GAIA,OAJA,GAKA,qBANF;AAQA,IAAM,wBAAwB,GAC5B,WAAW,GAAG,uBAAd,GAAwC,qBAD1C;;IAGa;AAUX,yBAAY,KAAZ,EAA4B;AAAA;;AAC1B,SAAK,QAAL,GAAgB,KAAK,WAAL,CAAiB,KAAjB,CAAhB;AACD;;;;gCATmB,OAAgB;AAClC,aAAO,IAAI,gBAAJ,CACL,KAAK,CAAC,UAAN,CAAiB,KAAjB,GAAyB,CAAzB,GAA6B,WAAW,GAAG,CADtC,EAEL,KAAK,CAAC,UAAN,CAAiB,MAAjB,GAA0B,OAA1B,GAAoC,YAF/B,CAAP;AAID;;;8BAMiB,OAAgB;AAChC,UAAM,KAAK,GACT,KAAK,QAAL,CAAc,CAAd,GACA,eAAe,CAAC,MAAhB,GAAyB,CADzB,GAEA,2BAAa,UAAb,GAA0B,CAH5B;AAKA,UAAM,UAAU,GAAG,KAAK,QAAL,CAAc,CAAd,GAAkB,eAAe,CAAC,KAAlC,GAA0C,OAA7D;AAEA,aAAO,oBACL,KAAK,CAAC,IAAN,CAAW,GAAX,CAAe,UAAC,CAAD,EAAI,CAAJ,EAAS;AACtB,YAAM,KAAK,GAAG,UAAU,GAAG,CAAC,GAAG,2BAAa,SAA9B,GAA0C,CAAC,GAAG,OAA5D;AACA,YAAM,YAAY,GAAG,IAAI,gBAAJ,CAAa,KAAb,EAAoB,KAApB,CAArB;AACA,eAAO,CACL,CADK,EAEL,IAAI,YAAJ,CACE,YADF,EAEE,2BAAa,SAFf,EAGE,2BAAa,UAHf,CAFK,CAAP;AAQD,OAXD,CADK,CAAP;AAcD;;;oCAEe,OAAgB;AAC9B,WAAK,QAAL,GAAgB,KAAK,WAAL,CAAiB,KAAjB,CAAhB;AACA,UAAM,SAAS,GAAG,KAAK,SAAL,CAAe,KAAf,CAAlB;AAEA,UAAI,QAAJ;AAEA,UAAM,aAAa,GAAG,KAAK,CAAC,aAA5B;;AACA,UAAI,aAAJ,EAAmB;AACjB,QAAA,SAAS,CAAC,OAAV,CAAkB,UAAC,IAAD,EAAO,CAAP,EAAY;AAC5B,cAAI,IAAI,CAAC,QAAL,CAAc,aAAd,CAAJ,EAAkC;AAChC,YAAA,QAAQ,GAAG,CAAX;AACA,mBAAO,KAAP;AACD;AACF,SALD;AAMD;;AAED,MAAA,KAAK,CAAC,WAAN,CAAkB,OAAlB,CAA0B,UAAC,CAAD,EAAM;AAC9B,YAAI,CAAC,CAAC,IAAF,IAAU,YAAd,EAA4B;AAC1B,UAAA,SAAS,CAAC,OAAV,CAAkB,UAAC,IAAD,EAAO,CAAP,EAAY;AAC5B,gBAAI,IAAI,CAAC,QAAL,CAAc,CAAC,CAAC,QAAhB,CAAJ,EAA+B;AAC7B,cAAA,KAAK,CAAC,kBAAN,CACE,CADF,EAEE,CAAC,KAAK,CAAC,uBAAN,CAA8B,QAA9B,CAAuC,CAAvC,CAFH;AAIA,qBAAO,KAAP;AACD;AACF,WARD;AASD;AACF,OAZD;AAcA,MAAA,KAAK,CAAC,mBAAN,GAA4B,QAA5B;AACD;;;yBAEI,SAAmC,OAAgB;AACtD,WAAK,SAAL,CAAe,OAAf;AACA,UAAM,SAAS,GAAG,KAAK,SAAL,CAAe,KAAf,CAAlB;AAEA,MAAA,KAAK,CAAC,IAAN,CAAW,GAAX,CAAe,UAAC,IAAD,EAAO,CAAP,EAAY;AACzB,YAAM,IAAI,GAAG,SAAS,CAAC,GAAV,CAAc,CAAd,CAAb;;AACA,YAAI,IAAJ,EAAU;AACR,cAAI,KAAK,CAAC,uBAAN,CAA8B,QAA9B,CAAuC,CAAvC,CAAJ,EAA+C;AAC7C,uCAAa,cAAb,CAA4B,OAA5B,EAAqC,IAAI,CAAC,QAA1C,EAAoD,IAApD;AACD,WAFD,MAEO,IACL,KAAK,CAAC,mBAAN,IAA6B,SAA7B,IACA,mBAAG,KAAK,CAAC,mBAAT,EAA8B,CAA9B,CAFK,EAGL;AACA,uCAAa,aAAb,CAA2B,OAA3B,EAAoC,IAAI,CAAC,QAAzC,EAAmD,IAAnD;AACD,WALM,MAKA;AACL,uCAAa,gBAAb,CAA8B,OAA9B,EAAuC,IAAI,CAAC,QAA5C,EAAsD,IAAtD;AACD;AACF;AACF,OAdD;AAeD;;;8BAEiB,SAAiC;AACjD,UAAM,QAAQ,GAAG,KAAK,QAAtB;AAEA,MAAA,OAAO,CAAC,SAAR,CACE,eADF,EAEE,QAAQ,CAAC,CAFX,EAGE,QAAQ,CAAC,CAAT,GAAa,OAHf,EAIE,uBAJF,EAKE,YALF;AAQA,MAAA,OAAO,CAAC,SAAR,CACE,aADF,EAEE,QAAQ,CAAC,CAAT,GAAa,WAAb,GAA2B,qBAF7B,EAGE,QAAQ,CAAC,CAAT,GAAa,OAHf,EAIE,qBAJF,EAKE,YALF;AAQA,MAAA,OAAO,CAAC,SAAR,CACE,WADF,EAEE,QAAQ,CAAC,CAAT,GAAa,uBAFf,EAGE,QAAQ,CAAC,CAAT,GAAa,OAHf,EAIE,wBAJF,EAKE,YALF;AAOD;;;;;;;;;;;;;;;AC9IH;;;;;;;;;;;;;;IAEa;AAIX,4BAAqB,YAArB,EAAuC;AAAA;;AAAlB,SAAA,YAAA,GAAA,YAAA;AACnB,SAAK,GAAL,GAAW,YAAY,CAAC,MAAb,EAAX;AACA,SAAK,YAAL,GAAoB,YAAY,CAAC,MAAb,EAApB;AACD;;;;mCAEsB,WAAoB;AAAA;;AACzC,UAAM,KAAK,GAAG,SAAR,KAAQ,CAAC,CAAD;AAAA,eAAkB,CAAC,CAAC,IAAF,CAAO,KAAP,CAAa,CAAC,CAAC,EAAf,CAAlB;AAAA,OAAd;;AACA,MAAA,SAAS,CAAC,WAAV,CAAsB,OAAtB,CAA8B,UAAC,CAAD,EAAM;AAClC,YAAI,CAAC,CAAC,IAAF,IAAU,WAAd,EAA2B;AACzB,UAAA,KAAI,CAAC,GAAL,GAAW,KAAI,CAAC,GAAL,CAAS,KAAT,CAAe,KAAK,CAAC,CAAD,CAApB,CAAX;AACD;AACF,OAJD;AAMA,WAAK,YAAL,GAAoB,KAAK,GAAzB;;AAEA,UAAI,SAAS,CAAC,mBAAd,EAAmC;AACjC,aAAK,YAAL,GAAoB,KAAK,GAAL,CAAS,KAAT,CAAe,KAAK,CAAC,SAAS,CAAC,mBAAX,CAApB,CAApB;AACD;AACF;;;2CAE8B,WAAoB;AAAA;;AACjD,UAAM,oBAAoB,GAAG,IAAI,KAAJ,EAA7B;AACA,MAAA,SAAS,CAAC,WAAV,CAAsB,OAAtB,CAA8B,UAAC,CAAD,EAAM;AAClC,YAAI,CAAC,CAAC,IAAF,IAAU,YAAd,EAA4B;AAC1B,cAAI,MAAI,CAAC,YAAL,CAAkB,QAAlB,CAA2B,CAAC,CAAC,QAA7B,CAAJ,EAA4C;AAC1C,gBAAM,EAAE,GAAG,2BAAa,kBAAb,CACT,CAAC,CAAC,QADO,EAET,MAAI,CAAC,YAFI,CAAX;;AAIA,YAAA,oBAAoB,CAAC,IAArB,CAA0B,EAA1B;AACD;AACF;AACF,OAVD;AAYA,MAAA,SAAS,CAAC,oBAAV,GAAiC,oBAAjC;AACD;;;oCAEe,OAAgB;AAC9B,WAAK,cAAL,CAAoB,KAApB;AACA,WAAK,sBAAL,CAA4B,KAA5B;AACD;;;yBAEI,SAAmC,OAAgB;AAAA,iDACrC,KAAK,CAAC,QAAN,CAAe,MADsB;AAAA;;AAAA;AACtD,4DAAwC;AAAA,cAA7B,EAA6B;;AACtC,cAAM,MAAM,GAAG,2BAAa,YAAb,CAA0B,EAAE,CAAC,QAA7B,EAAuC,KAAK,YAA5C,CAAf;;AACA,qCAAa,gBAAb,CAA8B,OAA9B,EAAuC,MAAvC,EAA+C,EAAE,CAAC,IAAlD;AACD;AAJqD;AAAA;AAAA;AAAA;AAAA;AAKvD;;;;;;;;;;;;;;;ACxDH;;AACA;;AACA;;;;;;;;IAEa;AACX,mBAA6B,QAA7B,EAAiD;AAAA;;AAApB,SAAA,QAAA,GAAA,QAAA;AAAwB;;;;yBAEhD,GAAS;AACZ,UAAM,IAAI,GAAG,KAAK,QAAL,CAAc,IAAd,CAAmB,CAAnB,CAAb;AACA,aAAO,CAAC,IAAD,EAAO,IAAI,OAAJ,CAAY,KAAK,QAAL,CAAc,IAAd,CAAmB,CAAnB,CAAZ,CAAP,CAAP;AACD;;;gCAEuB;AACtB,aAAO,uBAAa,aAAb,CAA2B,UAAC,OAAD,EAAY;AAC5C,2BAAM,kBAAN,EAAkB,UAAC,MAAD,EAAS,CAAT,EAAc;AAC9B,6BAAM,iBAAN,EAAiB,UAAC,KAAD,EAAQ,CAAR,EAAa;AAC5B,YAAA,OAAO,CAAC,IAAR,CAAa,IAAI,YAAJ,CAAS,MAAT,EAAiB,KAAjB,CAAb;AACD,WAFD;AAGD,SAJD;AAKD,OANM,CAAP;AAOD;;;2BAEU;AACT,UAAM,IAAI,GAAG,KAAK,SAAL,GACV,MADU,CACH,KAAK,SAAL,EADG,EAEV,MAFU,CAEH,KAAK,SAAL,EAFG,CAAb;AAIA,aAAO,IAAI,OAAJ,CAAY,IAAI,CAAC,MAAL,CAAY,IAAI,CAAC,MAAjB,CAAZ,CAAP;AACD;;;;;;;;;;AC5BU,QAAA,YAAY,GAAkB,MAAM,CAAC,OAAO,CAAC,CAAC;AAe9C,QAAA,OAAO,GAAG,CAAI,KAAU,EAAqB,EAAE;IAC1D,OAAO,OAAO,KAAK,KAAK,UAAU,IAAI,KAAK,CAAC,SAAS,KAAK,oBAAY,CAAC;AACzE,CAAC,CAAC;AAEW,QAAA,OAAO,GAAG,CAAI,EAAW,EAAY,EAAE;IAClD,MAAM,KAAK,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;IACzB,KAAK,CAAC,SAAS,GAAG,oBAAY,CAAC;IAC/B,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;;;;;ACtBF,mCAMiB;AAkBJ,QAAA,UAAU,GAAG,CAAsC,EAAK,EAAiB,EAAE;IACtF,MAAM,IAAI,GAAG,CAAC,GAAG,IAAsB,EAAE,EAAE,CAAC,eAAO,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IAEvE,OAAO,MAAM,CAAC,MAAM,CAClB,CAAC,GAAG,IAAsB,EAAwB,EAAE;QAClD,IAAI,MAAM,GAAgC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;QAEtD,OAAO,eAAO,CAAgB,MAAM,CAAC,EAAE;YACrC,MAAM,GAAG,MAAM,EAAE,CAAC;SACnB;QAED,OAAO,MAAM,CAAC;IAChB,CAAC,EACD,EAAE,IAAI,EAAE,CACT,CAAC;AACJ,CAAC,CAAC;AAEW,QAAA,eAAe,GAAG,CAAsC,EAAK,EAAsB,EAAE;IAChG,MAAM,IAAI,GAAG,CAAC,GAAG,IAAsB,EAAE,EAAE,CAAC,eAAO,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IAEvE,OAAO,MAAM,CAAC,MAAM,CAClB,KAAK,EAAE,GAAG,IAAsB,EAAiC,EAAE;QACjE,IAAI,MAAM,GAAgC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;QAE5D,OAAO,eAAO,CAAgB,MAAM,CAAC,EAAE;YACrC,MAAM,GAAG,MAAM,MAAM,EAAE,CAAC;SACzB;QAED,OAAO,MAAM,CAAC;IAChB,CAAC,EACD,EAAE,IAAI,EAAE,CACT,CAAC;AACJ,CAAC,CAAC;;;;;;;;ACzDF,6BAAwB;AACxB,kCAA6B;;;;;;;;;;;ACD7B;;AACA;;AAOA;;;;;;;;AAEA,SAAS,UAAT,CACE,IADF,EAEE,QAFF,EAGE,SAHF,EAGsC;AAEpC,MAAM,KAAK,GAAG,8BACZ,UACE,CADF,EAEE,GAFF,EAGoD;AAClD,QAAM,IAAI,GAAG,IAAI,CAAC,EAAL,CAAQ,CAAR,CAAb;;AAEA,QAAI,IAAJ,EAAU;AACR,UAAI,GAAJ,EAAS;AACP,eAAO,KAAK,CAAC,IAAN,CAAW,SAAS,CAAC,CAAD,CAApB,EAAyB,GAAG,CAAC,IAAJ,CAAS,IAAT,CAAzB,CAAP;AACD,OAFD,MAEO;AACL,eAAO,KAAK,CAAC,IAAN,CAAW,SAAS,CAAC,CAAD,CAApB,EAAyB,gBAAK,EAAL,CAAQ,IAAR,CAAzB,CAAP;AACD;AACF,KAND,MAMO;AACL,aAAO,GAAP;AACD;AACF,GAhBW,CAAd;AAmBA,SAAO,KAAK,CAAC,SAAS,CAAC,QAAD,CAAV,EAAsB,SAAtB,CAAZ;AACD;;AAED,SAAS,SAAT,CACE,MADF,EAEE,IAFF,EAGE,KAHF,EAGyC;AAEvC,MAAI,MAAJ,EAAY;AACV,WAAO,MAAM,CAAC,IAAP,CAAY,IAAZ,EAAkB,MAAlB,CAAyB,KAAK,KAAA,IAAL,IAAA,KAAK,KAAA,KAAA,CAAL,GAAA,KAAA,GAAS,sBAAlC,CAAP;AACD,GAFD,MAEO,IAAI,KAAJ,EAAW;AAChB,WAAO,gBAAK,EAAL,CAAQ,IAAR,EAAc,MAAd,CAAqB,KAArB,CAAP;AACD,GAFM,MAEA;AACL,WAAO,SAAP;AACD;AACF;;AAED,SAAS,WAAT,CAAqB,IAArB,EAA+C;AAC7C,MAAM,eAAe,GAAG,oBAAI,IAAI,CAAC,GAAL,CAAS,UAAC,CAAD;AAAA,WAAO,CAAC,CAAC,MAAT;AAAA,GAAT,CAAJ,EAA+B,IAAvD;AACA,MAAM,cAAc,GAAG,oBAAI,IAAI,CAAC,GAAL,CAAS,UAAC,CAAD;AAAA,WAAO,CAAC,CAAC,KAAT;AAAA,GAAT,CAAJ,EAA8B,IAArD;;AAEA,MAAI,eAAe,KAAK,CAAxB,EAA2B;AACzB,WAAO,cAAc,KAAK,IAAI,CAAC,IAA/B;AACD,GAFD,MAEO,IAAI,cAAc,KAAK,CAAvB,EAA0B;AAC/B,WAAO,eAAe,KAAK,IAAI,CAAC,IAAhC;AACD,GAFM,MAEA;AACL,WAAO,KAAP;AACD;AACF;;AAEK,SAAU,QAAV,CACJ,IADI,EAEJ,UAFI,EAE2B;AAE/B,SAAO,UAAU,CACd,OADI,CACI,UAAC,SAAD,EAAc;;;AACrB,QAAM,CAAC,GAAG,UAAU,CAAC,IAAD,EAAO,SAAS,CAAC,QAAjB,EAA2B,iBAAS,IAApC,CAApB;AACA,QAAM,CAAC,GAAG,UAAU,CAAC,IAAD,EAAO,SAAS,CAAC,QAAjB,EAA2B,iBAAS,KAApC,CAApB;AACA,QAAM,CAAC,GAAG,UAAU,CAAC,IAAD,EAAO,SAAS,CAAC,QAAjB,EAA2B,iBAAS,KAApC,CAApB;AACA,QAAM,CAAC,GAAG,UAAU,CAAC,IAAD,EAAO,SAAS,CAAC,QAAjB,EAA2B,iBAAS,KAApC,CAApB;AAEA,QAAM,EAAE,GAAA,CAAA,EAAA,GAAG,SAAS,CAAC,CAAD,EAAI,SAAJ,EAAe,CAAf,CAAZ,MAA6B,IAA7B,IAA6B,EAAA,KAAA,KAAA,CAA7B,GAA6B,EAA7B,GAAiC,sBAAzC;AACA,QAAM,EAAE,GAAA,CAAA,EAAA,GAAG,SAAS,CAAC,CAAD,EAAI,SAAJ,EAAe,CAAf,CAAZ,MAA6B,IAA7B,IAA6B,EAAA,KAAA,KAAA,CAA7B,GAA6B,EAA7B,GAAiC,sBAAzC;AAEA,WAAO,gBAAK,EAAL,CAAQ,EAAR,EAAY,EAAZ,EAAgB,MAAhB,CAAuB,UAAC,CAAD;AAAA,aAAO,CAAC,CAAC,IAAF,GAAS,CAAhB;AAAA,KAAvB,CAAP;AACD,GAXI,EAYJ,KAZI,EAAP;AAaD;;AAED,SAAS,SAAT,CAAmB,IAAnB,EAA4C;AAC1C,MAAI,IAAI,CAAC,IAAL,KAAc,CAAlB,EAAqB;AACnB,WAAO,EAAP;AACD,GAFD,MAEO;AACL,WAAO,IAAI,CAAC,IAAZ;AACD;AACF;;AAED,SAAS,UAAT,CAAoB,KAApB,EAAoD;AAClD,MAAM,OAAO,GAAG,KAAK,CAAC,GAAN,CAAU,UAAC,CAAD;AAAA,WAAO,CAAC,CAAC,KAAF,EAAP;AAAA,GAAV,CAAhB;AACA,SAAO,OAAO,CACX,MADI,GAEJ,GAFI,CAEA,SAFA,EAGJ,MAHI,CAGG,UAAC,GAAD,EAAM,CAAN;AAAA,WAAY,GAAG,GAAG,CAAlB;AAAA,GAHH,EAGwB,CAHxB,CAAP;AAID;;IAEY;AAGX,oBAAoB,KAApB,EAAsD;AAAA;;AACpD,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,KAAL,CAAW,MAAX;AACD;;;;2BAMc,UAAkB;AAC/B,uBAAU,QAAQ,CAAC,CAAnB,cAAwB,QAAQ,CAAC,CAAjC;AACD;;;0BAMK,YAA+B;AAAA;;AACnC,UAAM,WAAW,GAAG,UAAU,CAAC,MAAX,CAAkB,UAAC,CAAD;AAAA,eACpC,KAAI,CAAC,KAAL,CAAW,GAAX,CAAe,KAAI,CAAC,MAAL,CAAY,CAAC,CAAC,QAAd,CAAf,CADoC;AAAA,OAAlB,CAApB;;AAGA,UAAI,WAAW,CAAC,IAAZ,GAAmB,CAAvB,EAA0B;AACxB,eAAO;AAAE,UAAA,IAAI,EAAE,iCAAR;AAA2C,UAAA,KAAK,EAAE;AAAlD,SAAP;AACD;;AAED,UACE,KAAK,KAAL,CAAW,IAAX,KAAoB,CAApB,IACA,CAAC,UAAU,CAAC,IAAX,CAAgB,UAAC,CAAD;AAAA,eAAO,CAAC,CAAC,QAAF,CAAW,MAAX,CAAkB,IAAI,gBAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAlB,CAAP;AAAA,OAAhB,CAFH,EAGE;AACA,eAAO;AAAE,UAAA,IAAI,EAAE;AAAR,SAAP;AACD;;AAED,UAAM,KAAK,GAAG,UAAU,CAAC,MAAX,CACZ,UAAC,CAAD;AAAA,eAAO,UAAU,CAAC,MAAX,CAAkB,UAAC,EAAD;AAAA,iBAAQ,mBAAG,CAAH,EAAM,EAAN,CAAR;AAAA,SAAlB,EAAqC,IAArC,GAA4C,CAAnD;AAAA,OADY,CAAd;;AAIA,UAAI,KAAK,CAAC,IAAN,GAAa,CAAjB,EAAoB;AAClB,eAAO;AAAE,UAAA,IAAI,EAAE,oBAAR;AAA8B,UAAA,KAAK,EAAE;AAArC,SAAP;AACD,OArBkC,CAuBnC;;;AACA,UAAM,CAAC,GAAG,IAAI,GAAJ,EAAV;AACA,WAAK,KAAL,CAAW,OAAX,CAAmB,UAAC,CAAD,EAAI,CAAJ;AAAA,eAAU,CAAC,CAAC,GAAF,CAAM,CAAN,EAAS,CAAT,CAAV;AAAA,OAAnB;AACA,MAAA,UAAU,CAAC,OAAX,CAAmB,UAAC,EAAD;AAAA,eAAQ,CAAC,CAAC,GAAF,CAAM,KAAI,CAAC,MAAL,CAAY,EAAE,CAAC,QAAf,CAAN,EAAgC,EAAhC,CAAR;AAAA,OAAnB;AACA,UAAM,GAAG,GAAG,IAAI,QAAJ,CAAa,CAAb,CAAZ;AAEA,UAAM,KAAK,GAAG,QAAQ,CAAC,GAAD,EAAM,UAAN,CAAtB;AACA,UAAM,YAAY,GAAG,KAAK,CAAC,MAAN,CAAa,UAAC,CAAD;AAAA,eAAO,CAAC,WAAW,CAAC,CAAD,CAAnB;AAAA,OAAb,CAArB;;AAEA,UAAI,CAAC,YAAY,CAAC,OAAb,EAAL,EAA6B;AAC3B,eAAO;AAAE,UAAA,IAAI,EAAE,qBAAR;AAA+B,UAAA,KAAK,EAAE;AAAtC,SAAP;AACD;;AAED,UAAM,uBAAuB,GAAG,KAAK,IAAL,KAAc,CAAd,IAAmB,UAAU,CAAC,IAAX,KAAoB,CAAvE;;AAEA,UACE,CAAC,KAAK,CAAC,IAAN,CAAW,UAAC,CAAD;AAAA,eAAO,UAAU,CAAC,KAAX,CAAiB,UAAC,CAAD;AAAA,iBAAO,CAAC,CAAC,IAAF,CAAO,UAAC,EAAD;AAAA,mBAAQ,mBAAG,CAAH,EAAM,EAAN,CAAR;AAAA,WAAP,CAAP;AAAA,SAAjB,CAAP;AAAA,OAAX,CAAD,IACA,CAAC,uBAFH,EAGE;AACA,eAAO;AAAE,UAAA,IAAI,EAAE;AAAR,SAAP;AACD;;AAED,UAAM,KAAK,GAAG,uBAAuB,GAAG,CAAH,GAAO,UAAU,CAAC,KAAD,CAAtD;AAEA,aAAO;AAAE,QAAA,IAAI,EAAE,SAAR;AAAmB,QAAA,QAAQ,EAAE,GAA7B;AAAkC,QAAA,KAAK,EAAE;AAAzC,OAAP;AACD;;;uBAEE,KAAa;AACd,aAAO,KAAK,KAAL,CAAW,GAAX,CAAe,KAAK,MAAL,CAAY,GAAZ,CAAf,CAAP;AACD;;;wBAxDS;AACR,aAAO,KAAK,KAAL,CAAW,MAAX,EAAP;AACD;;;wBAwDO;AACN,aAAO,KAAK,KAAL,CAAW,IAAlB;AACD;;;4BApEkB;AACjB,aAAO,IAAI,QAAJ,CAAa,IAAI,GAAJ,EAAb,CAAP;AACD;;;;;;;;;;;;;;;AC7GH;;AACA;;AAUA;;AACA;;;;;;;;;;;;;;;;;;;;IAEa;AACX,qBACS,IADT,EAES,OAFT,EAGS,UAHT,EAIS,QAJT,EAKS,kBALT,EAMS,eANT,EAOS,aAPT,EAQS,WART,EASS,oBATT,EAUS,mBAVT,EAWS,iBAXT,EAYS,iBAZT,EAaS,uBAbT,EAcS,KAdT,EAeS,qBAfT,EAgBS,mBAhBT,EAiBS,mBAjBT,EAiBgD;AAAA;;AAhBvC,SAAA,IAAA,GAAA,IAAA;AACA,SAAA,OAAA,GAAA,OAAA;AACA,SAAA,UAAA,GAAA,UAAA;AACA,SAAA,QAAA,GAAA,QAAA;AACA,SAAA,kBAAA,GAAA,kBAAA;AACA,SAAA,eAAA,GAAA,eAAA;AACA,SAAA,aAAA,GAAA,aAAA;AACA,SAAA,WAAA,GAAA,WAAA;AACA,SAAA,oBAAA,GAAA,oBAAA;AACA,SAAA,mBAAA,GAAA,mBAAA;AACA,SAAA,iBAAA,GAAA,iBAAA;AACA,SAAA,iBAAA,GAAA,iBAAA;AACA,SAAA,uBAAA,GAAA,uBAAA;AACA,SAAA,KAAA,GAAA,KAAA;AACA,SAAA,qBAAA,GAAA,qBAAA;AACA,SAAA,mBAAA,GAAA,mBAAA;AACA,SAAA,mBAAA,GAAA,mBAAA;AACL;;;;qCAEa,KAAa,WAAkB;AAC9C,UAAI,SAAJ,EAAe,KAAK,iBAAL,GAAyB,KAAK,iBAAL,CAAuB,GAAvB,CAA2B,GAA3B,CAAzB,CAAf,KACK,KAAK,iBAAL,GAAyB,KAAK,iBAAL,CAAuB,MAAvB,CAA8B,GAA9B,CAAzB;AACN;;;qCAEgB,KAAa,WAAkB;AAC9C,UAAI,SAAJ,EAAe,KAAK,iBAAL,GAAyB,KAAK,iBAAL,CAAuB,GAAvB,CAA2B,GAA3B,CAAzB,CAAf,KACK,KAAK,iBAAL,GAAyB,KAAK,iBAAL,CAAuB,MAAvB,CAA8B,GAA9B,CAAzB;AACN;;;uCAEkB,OAAe,UAAiB;AACjD,UAAI,QAAJ,EACE,KAAK,uBAAL,GAA+B,KAAK,uBAAL,CAA6B,GAA7B,CAAiC,KAAjC,CAA/B,CADF,KAGE,KAAK,uBAAL,GAA+B,KAAK,uBAAL,CAA6B,MAA7B,CAAoC,KAApC,CAA/B;AACH;;;4BAEc,YAAgB;AAC7B,UAAM,QAAQ,GAAG,mBAAS,KAAT,GAAiB,KAAjB,CACf,eAAI,EAAJ,CACE,IAAI,sBAAJ,CACE,IAAI,YAAJ,CAAS,mBAAW,IAApB,EAA0B,kBAAU,IAApC,CADF,EAEE,IAAI,gBAAJ,CAAa,CAAb,EAAgB,CAAhB,CAFF,CADF,CADe,CAAjB;;AAD6B,+BAUP,iBAAQ,IAAR,GAAe,IAAf,CAAoB,CAApB,CAVO;AAAA;AAAA,UAUxB,IAVwB;AAAA,UAUlB,OAVkB;;AAY7B,aAAO,IAAI,SAAJ,CACL,IADK,EAEL,OAFK,EAGL,UAHK,EAIL,QAAQ,CAAC,QAJJ,EAKL,QAAQ,CAAC,QALJ,EAML,QAAQ,CAAC,QANJ,EAOL,IAAI,gBAAJ,CAAa,CAAb,EAAgB,CAAhB,CAPK,EAQL,EARK,EASL,EATK,EAUL,eAAI,EAAJ,EAVK,EAWL,eAAI,EAAJ,EAXK,EAYL,eAAI,EAAJ,EAZK,EAaL,eAAI,EAAJ,EAbK,EAcL,CAdK,EAeL,CAfK,EAgBL,SAhBK,EAiBL,SAjBK,CAAP;AAmBD;;;;;;;;;;;;;;;ACnFH;;;;;;;;IAgBa;AAAb,mBAAA;AAAA;;AAIU,SAAA,UAAA,GAAsB,KAAtB;AAGA,SAAA,MAAA,GAAS,KAAK,EAAd;AA0FT;;;;kCAxFoB;AACjB,aAAO,KAAK,gBAAL,IAAyB,SAAzB,IAAsC,KAAK,gBAAL,IAAyB,CAAtE;AACD;;;oCAuEe,OAAgB;AAC9B,MAAA,KAAK,CAAC,aAAN,GAAsB,KAAK,aAA3B;AACA,MAAA,KAAK,CAAC,WAAN,GAAoB,KAAK,MAAzB;;AACA,UAAI,KAAK,UAAL,IAAmB,KAAK,CAAC,aAAzB,IAA0C,KAAK,cAAnD,EAAmE;AACjE,YAAM,CAAC,GAAc;AACnB,UAAA,IAAI,EAAE,WADa;AAEnB,UAAA,IAAI,EAAE,KAAK,cAFQ;AAGnB,UAAA,EAAE,EAAE,KAAK,CAAC;AAHS,SAArB;AAKA,QAAA,KAAK,CAAC,mBAAN,GAA4B,CAA5B;AACD,OAPD,MAOO;AACL,QAAA,KAAK,CAAC,mBAAN,GAA4B,SAA5B;AACD;;AACD,WAAK,MAAL,GAAc,EAAd;AACD;;;kCAnFoB,OAAY;AAC/B,aAAO,YAAK;;;AACV,YAAM,UAAU,GAAG,KAAK,CAAC,WAAN,EAAnB;AAEA,QAAA,KAAK,CAAC,gBAAN,GAAyB,CAAA,CAAA,EAAA,GAAC,KAAK,CAAC,gBAAP,MAAuB,IAAvB,IAAuB,EAAA,KAAA,KAAA,CAAvB,GAAuB,EAAvB,GAA2B,CAA3B,IAAgC,CAAzD;AAEA,YAAM,UAAU,GAAG,KAAK,CAAC,aAAzB;;AAEA,YACE,KAAK,CAAC,UAAN,IACA,UADA,IAEA,KAAK,CAAC,cAFN,IAGA,UAHA,IAIA,CAAC,KAAK,CAAC,WAAN,EALH,EAME;AACA,UAAA,KAAK,CAAC,UAAN,GAAmB,KAAnB;AACA,cAAM,CAAC,GAAc;AACnB,YAAA,IAAI,EAAE,WADa;AAEnB,YAAA,IAAI,EAAE,KAAK,CAAC,cAFO;AAGnB,YAAA,EAAE,EAAE;AAHe,WAArB;AAKA,UAAA,KAAK,CAAC,MAAN,CAAa,IAAb,CAAkB,CAAlB;AACA,UAAA,KAAK,CAAC,cAAN,GAAuB,SAAvB;AACD,SAfD,MAeO,IAAI,UAAU,IAAI,UAAd,IAA4B,CAAC,KAAK,CAAC,WAAN,EAAjC,EAAsD;AAC3D,cAAM,EAAC,GAAe;AACpB,YAAA,IAAI,EAAE,YADc;AAEpB,YAAA,QAAQ,EAAE;AAFU,WAAtB;AAIA,UAAA,KAAK,CAAC,cAAN,GAAuB,SAAvB;AACA,UAAA,KAAK,CAAC,MAAN,CAAa,IAAb,CAAkB,EAAlB;AACD;AACF,OA9BD;AA+BD;;;oCAEsB,OAAY;AACjC,aAAO,YAAK;;;AACV,YAAM,UAAU,GAAG,KAAK,CAAC,WAAN,EAAnB;AACA,QAAA,KAAK,CAAC,gBAAN,GAAyB,CAAA,CAAA,EAAA,GAAC,KAAK,CAAC,gBAAP,MAAuB,IAAvB,IAAuB,EAAA,KAAA,KAAA,CAAvB,GAAuB,EAAvB,GAA2B,CAA3B,IAAgC,CAAzD;;AACA,YACE,CAAC,UAAD,IACA,KAAK,CAAC,WAAN,EADA,IAEA,KAAK,CAAC,aAFN,IAGA,KAAK,CAAC,cAAN,IAAwB,SAJ1B,EAKE;AACA,UAAA,KAAK,CAAC,cAAN,GAAuB,KAAK,CAAC,aAA7B;AACD;AACF,OAXD;AAYD;;;wCAE0B,OAAY;AACrC,aAAO,UAAC,CAAD,EAAM;AACX,QAAA,KAAK,CAAC,aAAN,GAAsB,IAAI,gBAAJ,CAAa,CAAC,CAAC,KAAf,EAAsB,CAAC,CAAC,KAAxB,CAAtB;;AAEA,YACE,KAAK,CAAC,WAAN,MACA,KAAK,CAAC,cADN,IAEA,KAAK,CAAC,aAFN,IAGA,CAAC,KAAK,CAAC,UAJT,EAKE;AACA,cAAM,EAAE,GAAG,IAAI,CAAC,GAAL,CAAS,KAAK,CAAC,cAAN,CAAqB,CAArB,GAAyB,KAAK,CAAC,aAAN,CAAoB,CAAtD,CAAX;AACA,cAAM,EAAE,GAAG,IAAI,CAAC,GAAL,CAAS,KAAK,CAAC,cAAN,CAAqB,CAArB,GAAyB,KAAK,CAAC,aAAN,CAAoB,CAAtD,CAAX;;AAEA,cAAI,EAAE,GAAG,CAAL,IAAU,EAAE,GAAG,CAAnB,EAAsB;AACpB,YAAA,KAAK,CAAC,UAAN,GAAmB,IAAnB;AACD;AACF;AACF,OAhBD;AAiBD;;;;;;;;;;;;;;;AChGH;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;AAEA,SAAS,gBAAT,CACE,SADF,EAEE,UAFF,EAEiC;AAE/B,MAAM,KAAK,GAAG,SAAS,CAAC,eAAV,CAA0B,KAA1B,CAAgC,UAAhC,CAAd;;AAEA,MAAI,KAAJ,EAAW;AACT,YAAQ,KAAK,CAAC,IAAd;AACE,WAAK,SAAL;AACE,QAAA,SAAS,CAAC,kBAAV,GAA+B,KAAK,CAAC,QAArC;AACA,QAAA,SAAS,CAAC,qBAAV,GAAkC,KAAK,CAAC,KAAxC;AACA,eAAO,IAAP;;AACF;AACE,QAAA,OAAO,CAAC,GAAR,iCAAqC,yBAAY,KAAZ,CAArC;AACA;AAPJ;AASD,GAVD,MAUO;AACL,IAAA,OAAO,CAAC,GAAR,CAAY,mCAAZ;AACD;;AACD,SAAO,KAAP;AACD;;IAEY;;;;;;;oCACmB,WAAoB;AAChD,UAAM,gBAAgB,GAEN,SAAS,CAAC,uBAAV,CAAkC,KAAlC,EAFhB;;AAGA,UAAI,gBAAgB,IAAI,SAAxB,EAAmC;AACjC,YAAM,UAAU,GAAG,SAAS,CAAC,IAAV,CAAe,GAAf,CAAmB,gBAAnB,CAAnB;;AACA,YAAI,UAAJ,EAAgB;AACd,UAAA,SAAS,CAAC,oBAAV,CAA+B,OAA/B,CAAuC,UAAC,CAAD,EAAM;AAC3C,gBAAM,YAAY,GAAG,SAAS,CAAC,mBAAV,CAA8B,GAA9B,CACnB,IAAI,sBAAJ,CAAmB,UAAnB,EAA+B,CAA/B,CADmB,CAArB;;AAGA,gBAAI,gBAAgB,CAAC,SAAD,EAAY,YAAZ,CAApB,EAA+C;AAC7C,kBAAM,OAAO,GAAG,SAAS,CAAC,IAAV,CAAe,MAAf,CAAsB,gBAAtB,CAAhB;AACA,cAAA,SAAS,CAAC,uBAAV,GAAoC,eAAI,EAAJ,EAApC;AACA,cAAA,SAAS,CAAC,IAAV,GAAiB,OAAjB;AACA,cAAA,SAAS,CAAC,mBAAV,GAAgC,YAAhC;AACD;AACF,WAVD;AAWD;AACF;;AAED,UAAI,SAAS,CAAC,iBAAV,CAA4B,QAA5B,CAAqC,oBAAa,GAAlD,CAAJ,EAA4D;AAC1D,QAAA,SAAS,CAAC,eAAV,GAA4B,SAAS,CAAC,kBAAtC;AAEA,YAAM,MAAM,GAAG,SAAS,CAAC,mBAAV,CAA8B,IAA7C;;AAH0D,oCAKlC,SAAS,CAAC,OAAV,CAAkB,IAAlB,CAAuB,MAAvB,CALkC;AAAA;AAAA,YAKnD,KALmD;AAAA,YAK5C,MAL4C;;AAM1D,QAAA,SAAS,CAAC,IAAV,GAAiB,SAAS,CAAC,IAAV,CAAe,MAAf,CAAsB,KAAtB,CAAjB;AACA,QAAA,SAAS,CAAC,OAAV,GAAoB,MAApB;AACA,QAAA,SAAS,CAAC,KAAV,GAAkB,SAAS,CAAC,KAAV,GAAkB,SAAS,CAAC,qBAA9C;AACA,QAAA,SAAS,CAAC,qBAAV,GAAkC,CAAlC;AACA,QAAA,SAAS,CAAC,mBAAV,GAAgC,eAAI,EAAJ,EAAhC;AACD,OAXD,MAWO,IACL,SAAS,CAAC,iBAAV,CAA4B,QAA5B,CAAqC,kBAAW,GAAhD,KACA,CAAC,SAAS,CAAC,uBAAV,CAAkC,OAAlC,EAFI,EAGL;AAAA,qCACwB,SAAS,CAAC,OAAV,CAAkB,IAAlB,CACtB,SAAS,CAAC,uBAAV,CAAkC,IADZ,CADxB;AAAA;AAAA,YACO,MADP;AAAA,YACc,OADd;;AAKA,YAAM,OAAO,GAAG,SAAS,CAAC,IAAV,CACb,SADa,CACH,UAAC,CAAD,EAAI,CAAJ;AAAA,iBAAU,SAAS,CAAC,uBAAV,CAAkC,QAAlC,CAA2C,CAA3C,CAAV;AAAA,SADG,EAEb,MAFa,CAEN,MAFM,CAAhB;AAGA,QAAA,SAAS,CAAC,IAAV,GAAiB,OAAjB;AACA,QAAA,SAAS,CAAC,OAAV,GAAoB,OAApB;AACA,QAAA,SAAS,CAAC,uBAAV,GAAoC,eAAI,EAAJ,EAApC;AACD,OAdM,MAcA,IACL,SAAS,CAAC,iBAAV,CAA4B,QAA5B,CAAqC,oBAAa,GAAlD,KACA,CAAC,SAAS,CAAC,mBAAV,CAA8B,OAA9B,EAFI,EAGL;AACA,YAAM,QAAO,GAAG,SAAS,CAAC,IAAV,CAAe,MAAf,CACd,SAAS,CAAC,mBAAV,CAA8B,GAA9B,CAAkC,UAAC,CAAD;AAAA,iBAAO,CAAC,CAAC,IAAT;AAAA,SAAlC,CADc,CAAhB;;AAGA,QAAA,SAAS,CAAC,IAAV,GAAiB,QAAjB;AACA,QAAA,SAAS,CAAC,kBAAV,GAA+B,SAAS,CAAC,eAAzC;AACA,QAAA,SAAS,CAAC,mBAAV,GAAgC,eAAI,EAAJ,EAAhC;AACD;;AAED,UAAM,uBAAuB,GAAG,CAAC,SAAS,CAAC,mBAAV,CAA8B,OAA9B,EAAjC;AAEA,MAAA,SAAS,CAAC,gBAAV,CAA2B,oBAAa,GAAxC,EAA6C,uBAA7C;AACA,MAAA,SAAS,CAAC,gBAAV,CAA2B,oBAAa,GAAxC,EAA6C,uBAA7C;AACA,MAAA,SAAS,CAAC,gBAAV,CACE,kBAAW,GADb,EAEE,CAAC,SAAS,CAAC,uBAAV,CAAkC,OAAlC,EAAD,IACE,SAAS,CAAC,mBAAV,CAA8B,OAA9B,EAHJ;AAMA,MAAA,SAAS,CAAC,QAAV,GAAqB,SAAS,CAAC,mBAAV,CAA8B,OAA9B,KACjB,SAAS,CAAC,eADO,GAEjB,SAAS,CAAC,kBAFd;AAGD;;;;;;;;;;;;;;;ACnGH;;;;;;;;IAIa;AAIX,kBACW,QADX,EAEW,QAFX,EAGW,KAHX,EAIW,GAJX,EAIsB;AAAA;;AAHX,SAAA,QAAA,GAAA,QAAA;AACA,SAAA,QAAA,GAAA,QAAA;AACA,SAAA,KAAA,GAAA,KAAA;AACA,SAAA,GAAA,GAAA,GAAA;AAET,SAAK,YAAL,GAAoB,QAApB;AACA,SAAK,IAAL,GAAY,IAAI,YAAJ,CAAS,QAAT,EAAmB,QAAQ,CAAC,KAA5B,EAAmC,QAAQ,CAAC,MAA5C,CAAZ;AACD;;;;oCAEe,WAAoB;AAAA;;AAClC,UAAI,QAAQ,GAAG,KAAf;AACA,UAAI,SAAS,GAAG,KAAhB;;AAEA,UAAI,SAAS,CAAC,aAAd,EAA6B;AAC3B,QAAA,SAAS,CAAC,WAAV,CAAsB,OAAtB,CAA8B,UAAC,CAAD,EAAM;AAClC,cAAI,CAAC,CAAC,IAAF,IAAU,YAAV,IAA0B,KAAI,CAAC,IAAL,CAAU,QAAV,CAAmB,CAAC,CAAC,QAArB,CAA9B,EAA8D;AAC5D,YAAA,SAAS,GAAG,IAAZ;AACA,mBAAO,KAAP;AACD;AACF,SALD;AAOA,QAAA,QAAQ,GAAG,KAAK,IAAL,CAAU,QAAV,CAAmB,SAAS,CAAC,aAA7B,CAAX;AACD;;AAED,UAAM,OAAO,GAAG,SAAS,CAAC,iBAAV,CAA4B,QAA5B,CAAqC,KAAK,GAA1C,CAAhB;AAEA,WAAK,YAAL,GACE,QAAQ,IAAI,CAAC,SAAb,IAA0B,OAA1B,GAAoC,KAAK,KAAzC,GAAiD,KAAK,QADxD;AAGA,MAAA,SAAS,CAAC,gBAAV,CAA2B,KAAK,GAAhC,EAAqC,SAAS,IAAI,OAAlD;AACD;;;yBAEI,SAAmC,WAAoB;AAC1D,UAAM,OAAO,GAAG,SAAS,CAAC,iBAAV,CAA4B,QAA5B,CAAqC,KAAK,GAA1C,IAAiD,GAAjD,GAAuD,GAAvE;AACA,MAAA,OAAO,CAAC,IAAR;AACA,MAAA,OAAO,CAAC,WAAR,GAAsB,OAAtB;AACA,MAAA,OAAO,CAAC,SAAR,CAAkB,KAAK,YAAvB,EAAqC,KAAK,QAAL,CAAc,CAAnD,EAAsD,KAAK,QAAL,CAAc,CAApE;AACA,MAAA,OAAO,CAAC,OAAR;AACD;;;;;;;;;;;;;;;;;;;;;IC5CU;AACX,iBAAqB,QAArB,EAAuC;AAAA;;AAAlB,SAAA,QAAA,GAAA,QAAA;AAAsB;;;;yBAEtC,SAAmC,WAAoB;AAC1D,MAAA,OAAO,CAAC,IAAR;AACA,MAAA,OAAO,CAAC,IAAR,GAAe,YAAf;AACA,UAAM,KAAK,GAAG,SAAS,CAAC,KAAV,CAAgB,QAAhB,EAAd;AACA,MAAA,OAAO,CAAC,YAAR,GAAuB,KAAvB;AACA,MAAA,OAAO,CAAC,SAAR,GAAoB,OAApB;AACA,MAAA,OAAO,CAAC,QAAR,CAAiB,KAAjB,EAAwB,KAAK,QAAL,CAAc,CAAtC,EAAyC,KAAK,QAAL,CAAc,CAAvD;;AAEA,UAAI,SAAS,CAAC,qBAAV,GAAkC,CAAtC,EAAyC;AACvC,YAAM,UAAU,GAAG,OAAO,CAAC,WAAR,CAAoB,KAApB,EAA2B,KAA9C;AACA,YAAM,eAAe,gBAAS,SAAS,CAAC,qBAAnB,CAArB;AACA,QAAA,OAAO,CAAC,SAAR,GAAoB,MAApB;AACA,QAAA,OAAO,CAAC,QAAR,CACE,eADF,EAEE,KAAK,QAAL,CAAc,CAAd,GAAkB,UAFpB,EAGE,KAAK,QAAL,CAAc,CAHhB;AAKD;;AAED,MAAA,OAAO,CAAC,OAAR;AACD;;;;;;;;;;;;;;;AC1BH;;AAIA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAM,MAAM,GAAG,QAAQ,CAAC,aAAT,CAAuB,OAAvB,CAAf;AACA,IAAM,OAAO,GAAG,MAAM,CAAC,UAAP,CAAkB,IAAlB,CAAhB;AAEA,MAAM,CAAC,KAAP,GAAe,MAAM,CAAC,UAAtB;AACA,MAAM,CAAC,MAAP,GAAgB,MAAM,CAAC,WAAvB;AAEA,IAAM,UAAU,GAAG,IAAI,YAAJ,CAAS,IAAI,gBAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAT,EAA6B,MAAM,CAAC,KAApC,EAA2C,MAAM,CAAC,MAAlD,CAAnB;;AAEA,IAAM,SAAS,GAAc,qBAAU,OAAV,CAAkB,UAAlB,CAA7B;;AAEA,IAAM,YAAY,GAAG,IAAI,YAAJ,CACnB,IAAI,gBAAJ,CAAa,EAAb,EAAiB,EAAjB,CADmB,EAEnB,UAAU,CAAC,KAFQ,EAGnB,UAAU,CAAC,MAAX,GAAoB,2BAApB,GAAmC,EAHhB,CAArB;AAMA,IAAI,KAAJ;AAEA,IAAI,QAAJ;AAEA,IAAM,KAAK,GAAU,IAAI,YAAJ,EAArB;AAEA,QAAQ,CAAC,gBAAT,CAA0B,WAA1B,EAAuC,aAAM,eAAN,CAAsB,KAAtB,CAAvC;AACA,QAAQ,CAAC,gBAAT,CAA0B,SAA1B,EAAqC,aAAM,aAAN,CAAoB,KAApB,CAArC;AACA,QAAQ,CAAC,gBAAT,CAA0B,WAA1B,EAAuC,aAAM,mBAAN,CAA0B,KAA1B,CAAvC;AAEA,IAAM,cAAc,GAAG,wBAAU,8BAAV,CAAvB;AACA,IAAM,WAAW,GAAG,wBAAU,2BAAV,CAApB;AAEA,IAAM,YAAY,GAAG,wBAAU,4BAAV,CAArB;AACA,IAAM,SAAS,GAAG,wBAAU,yBAAV,CAAlB;AAEA,IAAM,cAAc,GAAG,wBAAU,8BAAV,CAAvB;AACA,IAAM,WAAW,GAAG,wBAAU,2BAAV,CAApB;AAEO,IAAM,YAAY,GAAG,IAAI,cAAJ,CAC1B,IAAI,gBAAJ,CAAa,UAAU,CAAC,KAAX,GAAmB,cAAc,CAAC,KAAlC,GAA0C,EAAvD,EAA2D,EAA3D,CAD0B,EAE1B,cAF0B,EAG1B,WAH0B,EAI1B,QAJ0B,CAArB;;AAOA,IAAM,UAAU,GAAG,IAAI,cAAJ,CACxB,YAAY,CAAC,QAAb,CAAsB,IAAtB,CAA2B,IAAI,gBAAJ,CAAa,CAAb,EAAgB,cAAc,CAAC,MAAf,GAAwB,EAAxC,CAA3B,CADwB,EAExB,YAFwB,EAGxB,SAHwB,EAIxB,MAJwB,CAAnB;;AAOA,IAAM,YAAY,GAAG,IAAI,cAAJ,CAC1B,UAAU,CAAC,QAAX,CAAoB,IAApB,CAAyB,IAAI,gBAAJ,CAAa,CAAb,EAAgB,YAAY,CAAC,MAAb,GAAsB,EAAtC,CAAzB,CAD0B,EAE1B,cAF0B,EAG1B,WAH0B,EAI1B,QAJ0B,CAArB;;AAOP,IAAM,KAAK,GAAU,IAAI,YAAJ,CAAU,IAAI,gBAAJ,CAAa,EAAb,EAAiB,EAAjB,CAAV,CAArB;;AAEA,SAAS,QAAT,CAAkB,OAAlB,EAAmD;AACjD,EAAA,OAAO,CAAC,SAAR,GAAoB,KAApB;AACA,EAAA,OAAO,CAAC,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,OAAO,CAAC,MAAR,CAAe,KAAvC,EAA8C,OAAO,CAAC,MAAR,CAAe,MAA7D;;AAEA,MAAI,CAAC,KAAL,EAAY;AACV,IAAA,KAAK,GAAG,IAAI,4BAAJ,CAAkB,SAAlB,CAAR;AACD;;AACD,MAAI,CAAC,QAAL,EAAe;AACb,IAAA,QAAQ,GAAG,IAAI,kCAAJ,CAAqB,YAArB,CAAX;AACD;;AAED,EAAA,KAAK,CAAC,eAAN,CAAsB,SAAtB;AACA,EAAA,KAAK,CAAC,eAAN,CAAsB,SAAtB;AACA,EAAA,QAAQ,CAAC,eAAT,CAAyB,SAAzB;AACA,EAAA,YAAY,CAAC,eAAb,CAA6B,SAA7B;AACA,EAAA,UAAU,CAAC,eAAX,CAA2B,SAA3B;AACA,EAAA,YAAY,CAAC,eAAb,CAA6B,SAA7B;;AACA,uBAAU,eAAV,CAA0B,SAA1B;;AAEA,EAAA,QAAQ,CAAC,IAAT,CAAc,OAAd,EAAuB,SAAvB;AACA,EAAA,KAAK,CAAC,IAAN,CAAW,OAAX,EAAoB,SAApB;AACA,EAAA,YAAY,CAAC,IAAb,CAAkB,OAAlB,EAA2B,SAA3B;AACA,EAAA,UAAU,CAAC,IAAX,CAAgB,OAAhB,EAAyB,SAAzB;AACA,EAAA,YAAY,CAAC,IAAb,CAAkB,OAAlB,EAA2B,SAA3B;AACA,EAAA,KAAK,CAAC,IAAN,CAAW,OAAX,EAAoB,SAApB;AAEA,EAAA,qBAAqB,CAAC;AAAA,WAAM,QAAQ,CAAC,OAAD,CAAd;AAAA,GAAD,CAArB;AACD;;AAED,QAAQ,CAAC,OAAD,CAAR;;;ACpGA,IAAIE,UAAU,GAAG,4BAAjB;AAEA,IAAIC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcC,MAA9B;;AAEA,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC1BJ,EAAAA,SAAS,CAAC/oB,IAAV,CAAe,IAAf,EAAqBmpB,UAArB;AACA,OAAKC,GAAL,GAAW;AACTC,IAAAA,IAAI,EAAEL,MAAM,CAACC,MAAP,CAAcK,OADX;AAETC,IAAAA,gBAAgB,EAAE,EAFT;AAGTC,IAAAA,iBAAiB,EAAE,EAHV;AAITC,IAAAA,MAAM,EAAE,UAAUtoB,EAAV,EAAc;AACpB,WAAKooB,gBAAL,CAAsB3f,IAAtB,CAA2BzI,EAAE,IAAI,YAAY,CAAE,CAA/C;AACD,KANQ;AAOTuoB,IAAAA,OAAO,EAAE,UAAUvoB,EAAV,EAAc;AACrB,WAAKqoB,iBAAL,CAAuB5f,IAAvB,CAA4BzI,EAA5B;AACD;AATQ,GAAX;AAYA6nB,EAAAA,MAAM,CAACC,MAAP,CAAcK,OAAd,GAAwB,IAAxB;AACD;;AAEDN,MAAM,CAACC,MAAP,CAAcC,MAAd,GAAuBA,MAAvB;AACA,IAAIS,aAAJ,EAAmBC,cAAnB;AAEA,IAAIC,MAAM,GAAGb,MAAM,CAACC,MAAP,CAAcY,MAA3B;;AACA,IAAI,CAAC,CAACA,MAAD,IAAW,CAACA,MAAM,CAACC,eAApB,KAAwC,OAAOC,SAAP,KAAqB,WAAjE,EAA8E;AAC5E,MAAIC,QAAQ,GAAG,MAA4BC,QAAQ,CAACD,QAApD;AACA,MAAIE,QAAQ,GAAGD,QAAQ,CAACC,QAAT,KAAsB,QAAtB,GAAiC,KAAjC,GAAyC,IAAxD;AACA,MAAIC,EAAE,GAAG,IAAIJ,SAAJ,CAAcG,QAAQ,GAAG,KAAX,GAAmBF,QAAnB,GAA8B,GAA9B,aAA2D,GAAzE,CAAT;;AACAG,EAAAA,EAAE,CAACC,SAAH,GAAe,UAASC,KAAT,EAAgB;AAC7BV,IAAAA,aAAa,GAAG,EAAhB;AACAC,IAAAA,cAAc,GAAG,EAAjB;AAEA,QAAIP,IAAI,GAAGza,IAAI,CAAC0b,KAAL,CAAWD,KAAK,CAAChB,IAAjB,CAAX;;AAEA,QAAIA,IAAI,CAACrqB,IAAL,KAAc,QAAlB,EAA4B;AAC1B,UAAIurB,OAAO,GAAG,KAAd;AACAlB,MAAAA,IAAI,CAACmB,MAAL,CAAY7d,OAAZ,CAAoB,UAAS8d,KAAT,EAAgB;AAClC,YAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;AAChB,cAAIC,SAAS,GAAGC,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBL,KAAK,CAACM,EAA7B,CAA9B;;AACA,cAAIJ,SAAJ,EAAe;AACbJ,YAAAA,OAAO,GAAG,IAAV;AACD;AACF;AACF,OAPD,EAF0B,CAW1B;;AACAA,MAAAA,OAAO,GAAGA,OAAO,IAAIlB,IAAI,CAACmB,MAAL,CAAYhd,KAAZ,CAAkB,UAASid,KAAT,EAAgB;AACrD,eAAOA,KAAK,CAACzrB,IAAN,KAAe,KAAf,IAAwByrB,KAAK,CAACO,SAAN,CAAgBC,EAA/C;AACD,OAFoB,CAArB;;AAIA,UAAIV,OAAJ,EAAa;AACXrD,QAAAA,OAAO,CAAC/T,KAAR;AAEAkW,QAAAA,IAAI,CAACmB,MAAL,CAAY7d,OAAZ,CAAoB,UAAU8d,KAAV,EAAiB;AACnCS,UAAAA,QAAQ,CAACL,MAAM,CAACC,aAAR,EAAuBL,KAAvB,CAAR;AACD,SAFD;AAIAb,QAAAA,cAAc,CAACjd,OAAf,CAAuB,UAAUzN,CAAV,EAAa;AAClCisB,UAAAA,YAAY,CAACjsB,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,CAAZ;AACD,SAFD;AAGD,OAVD,MAUO,IAAI+qB,QAAQ,CAACmB,MAAb,EAAqB;AAAE;AAC5BnB,QAAAA,QAAQ,CAACmB,MAAT;AACD;AACF;;AAED,QAAI/B,IAAI,CAACrqB,IAAL,KAAc,QAAlB,EAA4B;AAC1BmrB,MAAAA,EAAE,CAACkB,KAAH;;AACAlB,MAAAA,EAAE,CAACmB,OAAH,GAAa,YAAY;AACvBrB,QAAAA,QAAQ,CAACmB,MAAT;AACD,OAFD;AAGD;;AAED,QAAI/B,IAAI,CAACrqB,IAAL,KAAc,gBAAlB,EAAoC;AAClCkoB,MAAAA,OAAO,CAACqE,GAAR,CAAY,2BAAZ;AAEAC,MAAAA,kBAAkB;AACnB;;AAED,QAAInC,IAAI,CAACrqB,IAAL,KAAc,OAAlB,EAA2B;AACzBkoB,MAAAA,OAAO,CAACjZ,KAAR,CAAc,kBAAkBob,IAAI,CAACpb,KAAL,CAAWwd,OAA7B,GAAuC,IAAvC,GAA8CpC,IAAI,CAACpb,KAAL,CAAWhC,KAAvE;AAEAuf,MAAAA,kBAAkB;AAElB,UAAIE,OAAO,GAAGC,kBAAkB,CAACtC,IAAD,CAAhC;AACAuC,MAAAA,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA0BJ,OAA1B;AACD;AACF,GA1DD;AA2DD;;AAED,SAASF,kBAAT,GAA8B;AAC5B,MAAIE,OAAO,GAAGE,QAAQ,CAACG,cAAT,CAAwBjD,UAAxB,CAAd;;AACA,MAAI4C,OAAJ,EAAa;AACXA,IAAAA,OAAO,CAACvc,MAAR;AACD;AACF;;AAED,SAASwc,kBAAT,CAA4BtC,IAA5B,EAAkC;AAChC,MAAIqC,OAAO,GAAGE,QAAQ,CAACI,aAAT,CAAuB,KAAvB,CAAd;AACAN,EAAAA,OAAO,CAACX,EAAR,GAAajC,UAAb,CAFgC,CAIhC;;AACA,MAAI2C,OAAO,GAAGG,QAAQ,CAACI,aAAT,CAAuB,KAAvB,CAAd;AACA,MAAIC,UAAU,GAAGL,QAAQ,CAACI,aAAT,CAAuB,KAAvB,CAAjB;AACAP,EAAAA,OAAO,CAACS,SAAR,GAAoB7C,IAAI,CAACpb,KAAL,CAAWwd,OAA/B;AACAQ,EAAAA,UAAU,CAACC,SAAX,GAAuB7C,IAAI,CAACpb,KAAL,CAAWhC,KAAlC;AAEAyf,EAAAA,OAAO,CAACS,SAAR,GACE,2NACE,mFADF,GAEE,yEAFF,GAGE,qEAHF,GAG0EV,OAAO,CAACU,SAHlF,GAG8F,QAH9F,GAIE,OAJF,GAIYF,UAAU,CAACE,SAJvB,GAImC,QAJnC,GAKA,QANF;AASA,SAAOT,OAAP;AAED;;AAED,SAASU,UAAT,CAAoBnD,MAApB,EAA4B8B,EAA5B,EAAgC;AAC9B,MAAIsB,OAAO,GAAGpD,MAAM,CAACoD,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO,EAAP;AACD;;AAED,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIrtB,CAAJ,EAAOuF,CAAP,EAAU+nB,GAAV;;AAEA,OAAKttB,CAAL,IAAUotB,OAAV,EAAmB;AACjB,SAAK7nB,CAAL,IAAU6nB,OAAO,CAACptB,CAAD,CAAP,CAAW,CAAX,CAAV,EAAyB;AACvBstB,MAAAA,GAAG,GAAGF,OAAO,CAACptB,CAAD,CAAP,CAAW,CAAX,EAAcuF,CAAd,CAAN;;AACA,UAAI+nB,GAAG,KAAKxB,EAAR,IAAevrB,KAAK,CAACC,OAAN,CAAc8sB,GAAd,KAAsBA,GAAG,CAACA,GAAG,CAAC9rB,MAAJ,GAAa,CAAd,CAAH,KAAwBsqB,EAAjE,EAAsE;AACpEuB,QAAAA,OAAO,CAAC1iB,IAAR,CAAa3K,CAAb;AACD;AACF;AACF;;AAED,MAAIgqB,MAAM,CAACY,MAAX,EAAmB;AACjByC,IAAAA,OAAO,GAAGA,OAAO,CAAClhB,MAAR,CAAeghB,UAAU,CAACnD,MAAM,CAACY,MAAR,EAAgBkB,EAAhB,CAAzB,CAAV;AACD;;AAED,SAAOuB,OAAP;AACD;;AAED,SAASpB,QAAT,CAAkBjC,MAAlB,EAA0BwB,KAA1B,EAAiC;AAC/B,MAAI4B,OAAO,GAAGpD,MAAM,CAACoD,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAIA,OAAO,CAAC5B,KAAK,CAACM,EAAP,CAAP,IAAqB,CAAC9B,MAAM,CAACY,MAAjC,EAAyC;AACvC,QAAI1oB,EAAE,GAAG,IAAIqrB,QAAJ,CAAa,SAAb,EAAwB,QAAxB,EAAkC,SAAlC,EAA6C/B,KAAK,CAACO,SAAN,CAAgBC,EAA7D,CAAT;AACAR,IAAAA,KAAK,CAACC,KAAN,GAAc,CAAC2B,OAAO,CAAC5B,KAAK,CAACM,EAAP,CAAtB;AACAsB,IAAAA,OAAO,CAAC5B,KAAK,CAACM,EAAP,CAAP,GAAoB,CAAC5pB,EAAD,EAAKspB,KAAK,CAACgC,IAAX,CAApB;AACD,GAJD,MAIO,IAAIxD,MAAM,CAACY,MAAX,EAAmB;AACxBqB,IAAAA,QAAQ,CAACjC,MAAM,CAACY,MAAR,EAAgBY,KAAhB,CAAR;AACD;AACF;;AAED,SAASG,cAAT,CAAwB3B,MAAxB,EAAgC8B,EAAhC,EAAoC;AAClC,MAAIsB,OAAO,GAAGpD,MAAM,CAACoD,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAI,CAACA,OAAO,CAACtB,EAAD,CAAR,IAAgB9B,MAAM,CAACY,MAA3B,EAAmC;AACjC,WAAOe,cAAc,CAAC3B,MAAM,CAACY,MAAR,EAAgBkB,EAAhB,CAArB;AACD;;AAED,MAAIpB,aAAa,CAACoB,EAAD,CAAjB,EAAuB;AACrB;AACD;;AACDpB,EAAAA,aAAa,CAACoB,EAAD,CAAb,GAAoB,IAApB;AAEA,MAAI2B,MAAM,GAAGzD,MAAM,CAAC5nB,KAAP,CAAa0pB,EAAb,CAAb;AAEAnB,EAAAA,cAAc,CAAChgB,IAAf,CAAoB,CAACqf,MAAD,EAAS8B,EAAT,CAApB;;AAEA,MAAI2B,MAAM,IAAIA,MAAM,CAACtD,GAAjB,IAAwBsD,MAAM,CAACtD,GAAP,CAAWG,gBAAX,CAA4B9oB,MAAxD,EAAgE;AAC9D,WAAO,IAAP;AACD;;AAED,SAAO2rB,UAAU,CAACvB,MAAM,CAACC,aAAR,EAAuBC,EAAvB,CAAV,CAAqCrd,IAArC,CAA0C,UAAUqd,EAAV,EAAc;AAC7D,WAAOH,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBC,EAAvB,CAArB;AACD,GAFM,CAAP;AAGD;;AAED,SAASI,YAAT,CAAsBlC,MAAtB,EAA8B8B,EAA9B,EAAkC;AAChC,MAAI2B,MAAM,GAAGzD,MAAM,CAAC5nB,KAAP,CAAa0pB,EAAb,CAAb;AACA9B,EAAAA,MAAM,CAACK,OAAP,GAAiB,EAAjB;;AACA,MAAIoD,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAACtD,GAAP,CAAWC,IAAX,GAAkBJ,MAAM,CAACK,OAAzB;AACD;;AAED,MAAIoD,MAAM,IAAIA,MAAM,CAACtD,GAAjB,IAAwBsD,MAAM,CAACtD,GAAP,CAAWI,iBAAX,CAA6B/oB,MAAzD,EAAiE;AAC/DisB,IAAAA,MAAM,CAACtD,GAAP,CAAWI,iBAAX,CAA6B7c,OAA7B,CAAqC,UAAUggB,EAAV,EAAc;AACjDA,MAAAA,EAAE,CAAC1D,MAAM,CAACK,OAAR,CAAF;AACD,KAFD;AAGD;;AAED,SAAOL,MAAM,CAAC5nB,KAAP,CAAa0pB,EAAb,CAAP;AACA9B,EAAAA,MAAM,CAAC8B,EAAD,CAAN;AAEA2B,EAAAA,MAAM,GAAGzD,MAAM,CAAC5nB,KAAP,CAAa0pB,EAAb,CAAT;;AACA,MAAI2B,MAAM,IAAIA,MAAM,CAACtD,GAAjB,IAAwBsD,MAAM,CAACtD,GAAP,CAAWG,gBAAX,CAA4B9oB,MAAxD,EAAgE;AAC9DisB,IAAAA,MAAM,CAACtD,GAAP,CAAWG,gBAAX,CAA4B5c,OAA5B,CAAoC,UAAUggB,EAAV,EAAc;AAChDA,MAAAA,EAAE;AACH,KAFD;;AAGA,WAAO,IAAP;AACD;AACF","file":"src.77de5100.js","sourceRoot":"../src","sourcesContent":["/**\n * MIT License\n * \n * Copyright (c) 2014-present, Lee Byron and other contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar DELETE = 'delete';\n\n// Constants describing the size of trie nodes.\nvar SHIFT = 5; // Resulted in best performance after ______?\nvar SIZE = 1 << SHIFT;\nvar MASK = SIZE - 1;\n\n// A consistent shared value representing \"not set\" which equals nothing other\n// than itself, and nothing that could be provided externally.\nvar NOT_SET = {};\n\n// Boolean references, Rough equivalent of `bool &`.\nfunction MakeRef() {\n  return { value: false };\n}\n\nfunction SetRef(ref) {\n  if (ref) {\n    ref.value = true;\n  }\n}\n\n// A function which returns a value representing an \"owner\" for transient writes\n// to tries. The return value will only ever equal itself, and will not equal\n// the return of any subsequent call of this function.\nfunction OwnerID() {}\n\nfunction ensureSize(iter) {\n  if (iter.size === undefined) {\n    iter.size = iter.__iterate(returnTrue);\n  }\n  return iter.size;\n}\n\nfunction wrapIndex(iter, index) {\n  // This implements \"is array index\" which the ECMAString spec defines as:\n  //\n  //     A String property name P is an array index if and only if\n  //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n  //     to 2^32−1.\n  //\n  // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n  if (typeof index !== 'number') {\n    var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n    if ('' + uint32Index !== index || uint32Index === 4294967295) {\n      return NaN;\n    }\n    index = uint32Index;\n  }\n  return index < 0 ? ensureSize(iter) + index : index;\n}\n\nfunction returnTrue() {\n  return true;\n}\n\nfunction wholeSlice(begin, end, size) {\n  return (\n    ((begin === 0 && !isNeg(begin)) ||\n      (size !== undefined && begin <= -size)) &&\n    (end === undefined || (size !== undefined && end >= size))\n  );\n}\n\nfunction resolveBegin(begin, size) {\n  return resolveIndex(begin, size, 0);\n}\n\nfunction resolveEnd(end, size) {\n  return resolveIndex(end, size, size);\n}\n\nfunction resolveIndex(index, size, defaultIndex) {\n  // Sanitize indices using this shorthand for ToInt32(argument)\n  // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n  return index === undefined\n    ? defaultIndex\n    : isNeg(index)\n    ? size === Infinity\n      ? size\n      : Math.max(0, size + index) | 0\n    : size === undefined || size === index\n    ? index\n    : Math.min(size, index) | 0;\n}\n\nfunction isNeg(value) {\n  // Account for -0 which is negative, but not less than 0.\n  return value < 0 || (value === 0 && 1 / value === -Infinity);\n}\n\nvar IS_COLLECTION_SYMBOL = '@@__IMMUTABLE_ITERABLE__@@';\n\nfunction isCollection(maybeCollection) {\n  return Boolean(maybeCollection && maybeCollection[IS_COLLECTION_SYMBOL]);\n}\n\nvar IS_KEYED_SYMBOL = '@@__IMMUTABLE_KEYED__@@';\n\nfunction isKeyed(maybeKeyed) {\n  return Boolean(maybeKeyed && maybeKeyed[IS_KEYED_SYMBOL]);\n}\n\nvar IS_INDEXED_SYMBOL = '@@__IMMUTABLE_INDEXED__@@';\n\nfunction isIndexed(maybeIndexed) {\n  return Boolean(maybeIndexed && maybeIndexed[IS_INDEXED_SYMBOL]);\n}\n\nfunction isAssociative(maybeAssociative) {\n  return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n}\n\nvar Collection = function Collection(value) {\n  return isCollection(value) ? value : Seq(value);\n};\n\nvar KeyedCollection = /*@__PURE__*/(function (Collection) {\n  function KeyedCollection(value) {\n    return isKeyed(value) ? value : KeyedSeq(value);\n  }\n\n  if ( Collection ) KeyedCollection.__proto__ = Collection;\n  KeyedCollection.prototype = Object.create( Collection && Collection.prototype );\n  KeyedCollection.prototype.constructor = KeyedCollection;\n\n  return KeyedCollection;\n}(Collection));\n\nvar IndexedCollection = /*@__PURE__*/(function (Collection) {\n  function IndexedCollection(value) {\n    return isIndexed(value) ? value : IndexedSeq(value);\n  }\n\n  if ( Collection ) IndexedCollection.__proto__ = Collection;\n  IndexedCollection.prototype = Object.create( Collection && Collection.prototype );\n  IndexedCollection.prototype.constructor = IndexedCollection;\n\n  return IndexedCollection;\n}(Collection));\n\nvar SetCollection = /*@__PURE__*/(function (Collection) {\n  function SetCollection(value) {\n    return isCollection(value) && !isAssociative(value) ? value : SetSeq(value);\n  }\n\n  if ( Collection ) SetCollection.__proto__ = Collection;\n  SetCollection.prototype = Object.create( Collection && Collection.prototype );\n  SetCollection.prototype.constructor = SetCollection;\n\n  return SetCollection;\n}(Collection));\n\nCollection.Keyed = KeyedCollection;\nCollection.Indexed = IndexedCollection;\nCollection.Set = SetCollection;\n\nvar IS_SEQ_SYMBOL = '@@__IMMUTABLE_SEQ__@@';\n\nfunction isSeq(maybeSeq) {\n  return Boolean(maybeSeq && maybeSeq[IS_SEQ_SYMBOL]);\n}\n\nvar IS_RECORD_SYMBOL = '@@__IMMUTABLE_RECORD__@@';\n\nfunction isRecord(maybeRecord) {\n  return Boolean(maybeRecord && maybeRecord[IS_RECORD_SYMBOL]);\n}\n\nfunction isImmutable(maybeImmutable) {\n  return isCollection(maybeImmutable) || isRecord(maybeImmutable);\n}\n\nvar IS_ORDERED_SYMBOL = '@@__IMMUTABLE_ORDERED__@@';\n\nfunction isOrdered(maybeOrdered) {\n  return Boolean(maybeOrdered && maybeOrdered[IS_ORDERED_SYMBOL]);\n}\n\nvar ITERATE_KEYS = 0;\nvar ITERATE_VALUES = 1;\nvar ITERATE_ENTRIES = 2;\n\nvar REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nvar ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\nvar Iterator = function Iterator(next) {\n  this.next = next;\n};\n\nIterator.prototype.toString = function toString () {\n  return '[Iterator]';\n};\n\nIterator.KEYS = ITERATE_KEYS;\nIterator.VALUES = ITERATE_VALUES;\nIterator.ENTRIES = ITERATE_ENTRIES;\n\nIterator.prototype.inspect = Iterator.prototype.toSource = function () {\n  return this.toString();\n};\nIterator.prototype[ITERATOR_SYMBOL] = function () {\n  return this;\n};\n\nfunction iteratorValue(type, k, v, iteratorResult) {\n  var value = type === 0 ? k : type === 1 ? v : [k, v];\n  iteratorResult\n    ? (iteratorResult.value = value)\n    : (iteratorResult = {\n        value: value,\n        done: false,\n      });\n  return iteratorResult;\n}\n\nfunction iteratorDone() {\n  return { value: undefined, done: true };\n}\n\nfunction hasIterator(maybeIterable) {\n  if (Array.isArray(maybeIterable)) {\n    // IE11 trick as it does not support `Symbol.iterator`\n    return true;\n  }\n\n  return !!getIteratorFn(maybeIterable);\n}\n\nfunction isIterator(maybeIterator) {\n  return maybeIterator && typeof maybeIterator.next === 'function';\n}\n\nfunction getIterator(iterable) {\n  var iteratorFn = getIteratorFn(iterable);\n  return iteratorFn && iteratorFn.call(iterable);\n}\n\nfunction getIteratorFn(iterable) {\n  var iteratorFn =\n    iterable &&\n    ((REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||\n      iterable[FAUX_ITERATOR_SYMBOL]);\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\n\nfunction isEntriesIterable(maybeIterable) {\n  var iteratorFn = getIteratorFn(maybeIterable);\n  return iteratorFn && iteratorFn === maybeIterable.entries;\n}\n\nfunction isKeysIterable(maybeIterable) {\n  var iteratorFn = getIteratorFn(maybeIterable);\n  return iteratorFn && iteratorFn === maybeIterable.keys;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction isArrayLike(value) {\n  if (Array.isArray(value) || typeof value === 'string') {\n    return true;\n  }\n\n  return (\n    value &&\n    typeof value === 'object' &&\n    Number.isInteger(value.length) &&\n    value.length >= 0 &&\n    (value.length === 0\n      ? // Only {length: 0} is considered Array-like.\n        Object.keys(value).length === 1\n      : // An object is only Array-like if it has a property where the last value\n        // in the array-like may be found (which could be undefined).\n        value.hasOwnProperty(value.length - 1))\n  );\n}\n\nvar Seq = /*@__PURE__*/(function (Collection) {\n  function Seq(value) {\n    return value === null || value === undefined\n      ? emptySequence()\n      : isImmutable(value)\n      ? value.toSeq()\n      : seqFromValue(value);\n  }\n\n  if ( Collection ) Seq.__proto__ = Collection;\n  Seq.prototype = Object.create( Collection && Collection.prototype );\n  Seq.prototype.constructor = Seq;\n\n  Seq.prototype.toSeq = function toSeq () {\n    return this;\n  };\n\n  Seq.prototype.toString = function toString () {\n    return this.__toString('Seq {', '}');\n  };\n\n  Seq.prototype.cacheResult = function cacheResult () {\n    if (!this._cache && this.__iterateUncached) {\n      this._cache = this.entrySeq().toArray();\n      this.size = this._cache.length;\n    }\n    return this;\n  };\n\n  // abstract __iterateUncached(fn, reverse)\n\n  Seq.prototype.__iterate = function __iterate (fn, reverse) {\n    var cache = this._cache;\n    if (cache) {\n      var size = cache.length;\n      var i = 0;\n      while (i !== size) {\n        var entry = cache[reverse ? size - ++i : i++];\n        if (fn(entry[1], entry[0], this) === false) {\n          break;\n        }\n      }\n      return i;\n    }\n    return this.__iterateUncached(fn, reverse);\n  };\n\n  // abstract __iteratorUncached(type, reverse)\n\n  Seq.prototype.__iterator = function __iterator (type, reverse) {\n    var cache = this._cache;\n    if (cache) {\n      var size = cache.length;\n      var i = 0;\n      return new Iterator(function () {\n        if (i === size) {\n          return iteratorDone();\n        }\n        var entry = cache[reverse ? size - ++i : i++];\n        return iteratorValue(type, entry[0], entry[1]);\n      });\n    }\n    return this.__iteratorUncached(type, reverse);\n  };\n\n  return Seq;\n}(Collection));\n\nvar KeyedSeq = /*@__PURE__*/(function (Seq) {\n  function KeyedSeq(value) {\n    return value === null || value === undefined\n      ? emptySequence().toKeyedSeq()\n      : isCollection(value)\n      ? isKeyed(value)\n        ? value.toSeq()\n        : value.fromEntrySeq()\n      : isRecord(value)\n      ? value.toSeq()\n      : keyedSeqFromValue(value);\n  }\n\n  if ( Seq ) KeyedSeq.__proto__ = Seq;\n  KeyedSeq.prototype = Object.create( Seq && Seq.prototype );\n  KeyedSeq.prototype.constructor = KeyedSeq;\n\n  KeyedSeq.prototype.toKeyedSeq = function toKeyedSeq () {\n    return this;\n  };\n\n  return KeyedSeq;\n}(Seq));\n\nvar IndexedSeq = /*@__PURE__*/(function (Seq) {\n  function IndexedSeq(value) {\n    return value === null || value === undefined\n      ? emptySequence()\n      : isCollection(value)\n      ? isKeyed(value)\n        ? value.entrySeq()\n        : value.toIndexedSeq()\n      : isRecord(value)\n      ? value.toSeq().entrySeq()\n      : indexedSeqFromValue(value);\n  }\n\n  if ( Seq ) IndexedSeq.__proto__ = Seq;\n  IndexedSeq.prototype = Object.create( Seq && Seq.prototype );\n  IndexedSeq.prototype.constructor = IndexedSeq;\n\n  IndexedSeq.of = function of (/*...values*/) {\n    return IndexedSeq(arguments);\n  };\n\n  IndexedSeq.prototype.toIndexedSeq = function toIndexedSeq () {\n    return this;\n  };\n\n  IndexedSeq.prototype.toString = function toString () {\n    return this.__toString('Seq [', ']');\n  };\n\n  return IndexedSeq;\n}(Seq));\n\nvar SetSeq = /*@__PURE__*/(function (Seq) {\n  function SetSeq(value) {\n    return (\n      isCollection(value) && !isAssociative(value) ? value : IndexedSeq(value)\n    ).toSetSeq();\n  }\n\n  if ( Seq ) SetSeq.__proto__ = Seq;\n  SetSeq.prototype = Object.create( Seq && Seq.prototype );\n  SetSeq.prototype.constructor = SetSeq;\n\n  SetSeq.of = function of (/*...values*/) {\n    return SetSeq(arguments);\n  };\n\n  SetSeq.prototype.toSetSeq = function toSetSeq () {\n    return this;\n  };\n\n  return SetSeq;\n}(Seq));\n\nSeq.isSeq = isSeq;\nSeq.Keyed = KeyedSeq;\nSeq.Set = SetSeq;\nSeq.Indexed = IndexedSeq;\n\nSeq.prototype[IS_SEQ_SYMBOL] = true;\n\n// #pragma Root Sequences\n\nvar ArraySeq = /*@__PURE__*/(function (IndexedSeq) {\n  function ArraySeq(array) {\n    this._array = array;\n    this.size = array.length;\n  }\n\n  if ( IndexedSeq ) ArraySeq.__proto__ = IndexedSeq;\n  ArraySeq.prototype = Object.create( IndexedSeq && IndexedSeq.prototype );\n  ArraySeq.prototype.constructor = ArraySeq;\n\n  ArraySeq.prototype.get = function get (index, notSetValue) {\n    return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n  };\n\n  ArraySeq.prototype.__iterate = function __iterate (fn, reverse) {\n    var array = this._array;\n    var size = array.length;\n    var i = 0;\n    while (i !== size) {\n      var ii = reverse ? size - ++i : i++;\n      if (fn(array[ii], ii, this) === false) {\n        break;\n      }\n    }\n    return i;\n  };\n\n  ArraySeq.prototype.__iterator = function __iterator (type, reverse) {\n    var array = this._array;\n    var size = array.length;\n    var i = 0;\n    return new Iterator(function () {\n      if (i === size) {\n        return iteratorDone();\n      }\n      var ii = reverse ? size - ++i : i++;\n      return iteratorValue(type, ii, array[ii]);\n    });\n  };\n\n  return ArraySeq;\n}(IndexedSeq));\n\nvar ObjectSeq = /*@__PURE__*/(function (KeyedSeq) {\n  function ObjectSeq(object) {\n    var keys = Object.keys(object);\n    this._object = object;\n    this._keys = keys;\n    this.size = keys.length;\n  }\n\n  if ( KeyedSeq ) ObjectSeq.__proto__ = KeyedSeq;\n  ObjectSeq.prototype = Object.create( KeyedSeq && KeyedSeq.prototype );\n  ObjectSeq.prototype.constructor = ObjectSeq;\n\n  ObjectSeq.prototype.get = function get (key, notSetValue) {\n    if (notSetValue !== undefined && !this.has(key)) {\n      return notSetValue;\n    }\n    return this._object[key];\n  };\n\n  ObjectSeq.prototype.has = function has (key) {\n    return hasOwnProperty.call(this._object, key);\n  };\n\n  ObjectSeq.prototype.__iterate = function __iterate (fn, reverse) {\n    var object = this._object;\n    var keys = this._keys;\n    var size = keys.length;\n    var i = 0;\n    while (i !== size) {\n      var key = keys[reverse ? size - ++i : i++];\n      if (fn(object[key], key, this) === false) {\n        break;\n      }\n    }\n    return i;\n  };\n\n  ObjectSeq.prototype.__iterator = function __iterator (type, reverse) {\n    var object = this._object;\n    var keys = this._keys;\n    var size = keys.length;\n    var i = 0;\n    return new Iterator(function () {\n      if (i === size) {\n        return iteratorDone();\n      }\n      var key = keys[reverse ? size - ++i : i++];\n      return iteratorValue(type, key, object[key]);\n    });\n  };\n\n  return ObjectSeq;\n}(KeyedSeq));\nObjectSeq.prototype[IS_ORDERED_SYMBOL] = true;\n\nvar CollectionSeq = /*@__PURE__*/(function (IndexedSeq) {\n  function CollectionSeq(collection) {\n    this._collection = collection;\n    this.size = collection.length || collection.size;\n  }\n\n  if ( IndexedSeq ) CollectionSeq.__proto__ = IndexedSeq;\n  CollectionSeq.prototype = Object.create( IndexedSeq && IndexedSeq.prototype );\n  CollectionSeq.prototype.constructor = CollectionSeq;\n\n  CollectionSeq.prototype.__iterateUncached = function __iterateUncached (fn, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var collection = this._collection;\n    var iterator = getIterator(collection);\n    var iterations = 0;\n    if (isIterator(iterator)) {\n      var step;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n    }\n    return iterations;\n  };\n\n  CollectionSeq.prototype.__iteratorUncached = function __iteratorUncached (type, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var collection = this._collection;\n    var iterator = getIterator(collection);\n    if (!isIterator(iterator)) {\n      return new Iterator(iteratorDone);\n    }\n    var iterations = 0;\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, iterations++, step.value);\n    });\n  };\n\n  return CollectionSeq;\n}(IndexedSeq));\n\n// # pragma Helper functions\n\nvar EMPTY_SEQ;\n\nfunction emptySequence() {\n  return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n}\n\nfunction keyedSeqFromValue(value) {\n  var seq = maybeIndexedSeqFromValue(value);\n  if (seq) {\n    return seq.fromEntrySeq();\n  }\n  if (typeof value === 'object') {\n    return new ObjectSeq(value);\n  }\n  throw new TypeError(\n    'Expected Array or collection object of [k, v] entries, or keyed object: ' +\n      value\n  );\n}\n\nfunction indexedSeqFromValue(value) {\n  var seq = maybeIndexedSeqFromValue(value);\n  if (seq) {\n    return seq;\n  }\n  throw new TypeError(\n    'Expected Array or collection object of values: ' + value\n  );\n}\n\nfunction seqFromValue(value) {\n  var seq = maybeIndexedSeqFromValue(value);\n  if (seq) {\n    return isEntriesIterable(value)\n      ? seq.fromEntrySeq()\n      : isKeysIterable(value)\n      ? seq.toSetSeq()\n      : seq;\n  }\n  if (typeof value === 'object') {\n    return new ObjectSeq(value);\n  }\n  throw new TypeError(\n    'Expected Array or collection object of values, or keyed object: ' + value\n  );\n}\n\nfunction maybeIndexedSeqFromValue(value) {\n  return isArrayLike(value)\n    ? new ArraySeq(value)\n    : hasIterator(value)\n    ? new CollectionSeq(value)\n    : undefined;\n}\n\nvar IS_MAP_SYMBOL = '@@__IMMUTABLE_MAP__@@';\n\nfunction isMap(maybeMap) {\n  return Boolean(maybeMap && maybeMap[IS_MAP_SYMBOL]);\n}\n\nfunction isOrderedMap(maybeOrderedMap) {\n  return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n}\n\nfunction isValueObject(maybeValue) {\n  return Boolean(\n    maybeValue &&\n      typeof maybeValue.equals === 'function' &&\n      typeof maybeValue.hashCode === 'function'\n  );\n}\n\n/**\n * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n *\n * NaN is considered the same as NaN, however -0 and 0 are considered the same\n * value, which is different from the algorithm described by\n * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n *\n * This is extended further to allow Objects to describe the values they\n * represent, by way of `valueOf` or `equals` (and `hashCode`).\n *\n * Note: because of this extension, the key equality of Immutable.Map and the\n * value equality of Immutable.Set will differ from ES6 Map and Set.\n *\n * ### Defining custom values\n *\n * The easiest way to describe the value an object represents is by implementing\n * `valueOf`. For example, `Date` represents a value by returning a unix\n * timestamp for `valueOf`:\n *\n *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n *     var date2 = new Date(1234567890000);\n *     date1.valueOf(); // 1234567890000\n *     assert( date1 !== date2 );\n *     assert( Immutable.is( date1, date2 ) );\n *\n * Note: overriding `valueOf` may have other implications if you use this object\n * where JavaScript expects a primitive, such as implicit string coercion.\n *\n * For more complex types, especially collections, implementing `valueOf` may\n * not be performant. An alternative is to implement `equals` and `hashCode`.\n *\n * `equals` takes another object, presumably of similar type, and returns true\n * if it is equal. Equality is symmetrical, so the same result should be\n * returned if this and the argument are flipped.\n *\n *     assert( a.equals(b) === b.equals(a) );\n *\n * `hashCode` returns a 32bit integer number representing the object which will\n * be used to determine how to store the value object in a Map or Set. You must\n * provide both or neither methods, one must not exist without the other.\n *\n * Also, an important relationship between these methods must be upheld: if two\n * values are equal, they *must* return the same hashCode. If the values are not\n * equal, they might have the same hashCode; this is called a hash collision,\n * and while undesirable for performance reasons, it is acceptable.\n *\n *     if (a.equals(b)) {\n *       assert( a.hashCode() === b.hashCode() );\n *     }\n *\n * All Immutable collections are Value Objects: they implement `equals()`\n * and `hashCode()`.\n */\nfunction is(valueA, valueB) {\n  if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n    return true;\n  }\n  if (!valueA || !valueB) {\n    return false;\n  }\n  if (\n    typeof valueA.valueOf === 'function' &&\n    typeof valueB.valueOf === 'function'\n  ) {\n    valueA = valueA.valueOf();\n    valueB = valueB.valueOf();\n    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n      return true;\n    }\n    if (!valueA || !valueB) {\n      return false;\n    }\n  }\n  return !!(\n    isValueObject(valueA) &&\n    isValueObject(valueB) &&\n    valueA.equals(valueB)\n  );\n}\n\nvar imul =\n  typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2\n    ? Math.imul\n    : function imul(a, b) {\n        a |= 0; // int\n        b |= 0; // int\n        var c = a & 0xffff;\n        var d = b & 0xffff;\n        // Shift by 0 fixes the sign on the high part.\n        return (c * d + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0)) | 0; // int\n      };\n\n// v8 has an optimization for storing 31-bit signed numbers.\n// Values which have either 00 or 11 as the high order bits qualify.\n// This function drops the highest order bit in a signed number, maintaining\n// the sign bit.\nfunction smi(i32) {\n  return ((i32 >>> 1) & 0x40000000) | (i32 & 0xbfffffff);\n}\n\nvar defaultValueOf = Object.prototype.valueOf;\n\nfunction hash(o) {\n  if (o == null) {\n    return hashNullish(o);\n  }\n\n  if (typeof o.hashCode === 'function') {\n    // Drop any high bits from accidentally long hash codes.\n    return smi(o.hashCode(o));\n  }\n\n  var v = valueOf(o);\n\n  if (v == null) {\n    return hashNullish(v);\n  }\n\n  switch (typeof v) {\n    case 'boolean':\n      // The hash values for built-in constants are a 1 value for each 5-byte\n      // shift region expect for the first, which encodes the value. This\n      // reduces the odds of a hash collision for these common values.\n      return v ? 0x42108421 : 0x42108420;\n    case 'number':\n      return hashNumber(v);\n    case 'string':\n      return v.length > STRING_HASH_CACHE_MIN_STRLEN\n        ? cachedHashString(v)\n        : hashString(v);\n    case 'object':\n    case 'function':\n      return hashJSObj(v);\n    case 'symbol':\n      return hashSymbol(v);\n    default:\n      if (typeof v.toString === 'function') {\n        return hashString(v.toString());\n      }\n      throw new Error('Value type ' + typeof v + ' cannot be hashed.');\n  }\n}\n\nfunction hashNullish(nullish) {\n  return nullish === null ? 0x42108422 : /* undefined */ 0x42108423;\n}\n\n// Compress arbitrarily large numbers into smi hashes.\nfunction hashNumber(n) {\n  if (n !== n || n === Infinity) {\n    return 0;\n  }\n  var hash = n | 0;\n  if (hash !== n) {\n    hash ^= n * 0xffffffff;\n  }\n  while (n > 0xffffffff) {\n    n /= 0xffffffff;\n    hash ^= n;\n  }\n  return smi(hash);\n}\n\nfunction cachedHashString(string) {\n  var hashed = stringHashCache[string];\n  if (hashed === undefined) {\n    hashed = hashString(string);\n    if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n      STRING_HASH_CACHE_SIZE = 0;\n      stringHashCache = {};\n    }\n    STRING_HASH_CACHE_SIZE++;\n    stringHashCache[string] = hashed;\n  }\n  return hashed;\n}\n\n// http://jsperf.com/hashing-strings\nfunction hashString(string) {\n  // This is the hash from JVM\n  // The hash code for a string is computed as\n  // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n  // where s[i] is the ith character of the string and n is the length of\n  // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n  // (exclusive) by dropping high bits.\n  var hashed = 0;\n  for (var ii = 0; ii < string.length; ii++) {\n    hashed = (31 * hashed + string.charCodeAt(ii)) | 0;\n  }\n  return smi(hashed);\n}\n\nfunction hashSymbol(sym) {\n  var hashed = symbolMap[sym];\n  if (hashed !== undefined) {\n    return hashed;\n  }\n\n  hashed = nextHash();\n\n  symbolMap[sym] = hashed;\n\n  return hashed;\n}\n\nfunction hashJSObj(obj) {\n  var hashed;\n  if (usingWeakMap) {\n    hashed = weakMap.get(obj);\n    if (hashed !== undefined) {\n      return hashed;\n    }\n  }\n\n  hashed = obj[UID_HASH_KEY];\n  if (hashed !== undefined) {\n    return hashed;\n  }\n\n  if (!canDefineProperty) {\n    hashed = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n    if (hashed !== undefined) {\n      return hashed;\n    }\n\n    hashed = getIENodeHash(obj);\n    if (hashed !== undefined) {\n      return hashed;\n    }\n  }\n\n  hashed = nextHash();\n\n  if (usingWeakMap) {\n    weakMap.set(obj, hashed);\n  } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n    throw new Error('Non-extensible objects are not allowed as keys.');\n  } else if (canDefineProperty) {\n    Object.defineProperty(obj, UID_HASH_KEY, {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: hashed,\n    });\n  } else if (\n    obj.propertyIsEnumerable !== undefined &&\n    obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable\n  ) {\n    // Since we can't define a non-enumerable property on the object\n    // we'll hijack one of the less-used non-enumerable properties to\n    // save our hash on it. Since this is a function it will not show up in\n    // `JSON.stringify` which is what we want.\n    obj.propertyIsEnumerable = function () {\n      return this.constructor.prototype.propertyIsEnumerable.apply(\n        this,\n        arguments\n      );\n    };\n    obj.propertyIsEnumerable[UID_HASH_KEY] = hashed;\n  } else if (obj.nodeType !== undefined) {\n    // At this point we couldn't get the IE `uniqueID` to use as a hash\n    // and we couldn't use a non-enumerable property to exploit the\n    // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n    // itself.\n    obj[UID_HASH_KEY] = hashed;\n  } else {\n    throw new Error('Unable to set a non-enumerable property on object.');\n  }\n\n  return hashed;\n}\n\n// Get references to ES5 object methods.\nvar isExtensible = Object.isExtensible;\n\n// True if Object.defineProperty works as expected. IE8 fails this test.\nvar canDefineProperty = (function () {\n  try {\n    Object.defineProperty({}, '@', {});\n    return true;\n  } catch (e) {\n    return false;\n  }\n})();\n\n// IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n// and avoid memory leaks from the IE cloneNode bug.\nfunction getIENodeHash(node) {\n  if (node && node.nodeType > 0) {\n    switch (node.nodeType) {\n      case 1: // Element\n        return node.uniqueID;\n      case 9: // Document\n        return node.documentElement && node.documentElement.uniqueID;\n    }\n  }\n}\n\nfunction valueOf(obj) {\n  return obj.valueOf !== defaultValueOf && typeof obj.valueOf === 'function'\n    ? obj.valueOf(obj)\n    : obj;\n}\n\nfunction nextHash() {\n  var nextHash = ++_objHashUID;\n  if (_objHashUID & 0x40000000) {\n    _objHashUID = 0;\n  }\n  return nextHash;\n}\n\n// If possible, use a WeakMap.\nvar usingWeakMap = typeof WeakMap === 'function';\nvar weakMap;\nif (usingWeakMap) {\n  weakMap = new WeakMap();\n}\n\nvar symbolMap = Object.create(null);\n\nvar _objHashUID = 0;\n\nvar UID_HASH_KEY = '__immutablehash__';\nif (typeof Symbol === 'function') {\n  UID_HASH_KEY = Symbol(UID_HASH_KEY);\n}\n\nvar STRING_HASH_CACHE_MIN_STRLEN = 16;\nvar STRING_HASH_CACHE_MAX_SIZE = 255;\nvar STRING_HASH_CACHE_SIZE = 0;\nvar stringHashCache = {};\n\nvar ToKeyedSequence = /*@__PURE__*/(function (KeyedSeq) {\n  function ToKeyedSequence(indexed, useKeys) {\n    this._iter = indexed;\n    this._useKeys = useKeys;\n    this.size = indexed.size;\n  }\n\n  if ( KeyedSeq ) ToKeyedSequence.__proto__ = KeyedSeq;\n  ToKeyedSequence.prototype = Object.create( KeyedSeq && KeyedSeq.prototype );\n  ToKeyedSequence.prototype.constructor = ToKeyedSequence;\n\n  ToKeyedSequence.prototype.get = function get (key, notSetValue) {\n    return this._iter.get(key, notSetValue);\n  };\n\n  ToKeyedSequence.prototype.has = function has (key) {\n    return this._iter.has(key);\n  };\n\n  ToKeyedSequence.prototype.valueSeq = function valueSeq () {\n    return this._iter.valueSeq();\n  };\n\n  ToKeyedSequence.prototype.reverse = function reverse () {\n    var this$1$1 = this;\n\n    var reversedSequence = reverseFactory(this, true);\n    if (!this._useKeys) {\n      reversedSequence.valueSeq = function () { return this$1$1._iter.toSeq().reverse(); };\n    }\n    return reversedSequence;\n  };\n\n  ToKeyedSequence.prototype.map = function map (mapper, context) {\n    var this$1$1 = this;\n\n    var mappedSequence = mapFactory(this, mapper, context);\n    if (!this._useKeys) {\n      mappedSequence.valueSeq = function () { return this$1$1._iter.toSeq().map(mapper, context); };\n    }\n    return mappedSequence;\n  };\n\n  ToKeyedSequence.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1$1 = this;\n\n    return this._iter.__iterate(function (v, k) { return fn(v, k, this$1$1); }, reverse);\n  };\n\n  ToKeyedSequence.prototype.__iterator = function __iterator (type, reverse) {\n    return this._iter.__iterator(type, reverse);\n  };\n\n  return ToKeyedSequence;\n}(KeyedSeq));\nToKeyedSequence.prototype[IS_ORDERED_SYMBOL] = true;\n\nvar ToIndexedSequence = /*@__PURE__*/(function (IndexedSeq) {\n  function ToIndexedSequence(iter) {\n    this._iter = iter;\n    this.size = iter.size;\n  }\n\n  if ( IndexedSeq ) ToIndexedSequence.__proto__ = IndexedSeq;\n  ToIndexedSequence.prototype = Object.create( IndexedSeq && IndexedSeq.prototype );\n  ToIndexedSequence.prototype.constructor = ToIndexedSequence;\n\n  ToIndexedSequence.prototype.includes = function includes (value) {\n    return this._iter.includes(value);\n  };\n\n  ToIndexedSequence.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1$1 = this;\n\n    var i = 0;\n    reverse && ensureSize(this);\n    return this._iter.__iterate(\n      function (v) { return fn(v, reverse ? this$1$1.size - ++i : i++, this$1$1); },\n      reverse\n    );\n  };\n\n  ToIndexedSequence.prototype.__iterator = function __iterator (type, reverse) {\n    var this$1$1 = this;\n\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    var i = 0;\n    reverse && ensureSize(this);\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done\n        ? step\n        : iteratorValue(\n            type,\n            reverse ? this$1$1.size - ++i : i++,\n            step.value,\n            step\n          );\n    });\n  };\n\n  return ToIndexedSequence;\n}(IndexedSeq));\n\nvar ToSetSequence = /*@__PURE__*/(function (SetSeq) {\n  function ToSetSequence(iter) {\n    this._iter = iter;\n    this.size = iter.size;\n  }\n\n  if ( SetSeq ) ToSetSequence.__proto__ = SetSeq;\n  ToSetSequence.prototype = Object.create( SetSeq && SetSeq.prototype );\n  ToSetSequence.prototype.constructor = ToSetSequence;\n\n  ToSetSequence.prototype.has = function has (key) {\n    return this._iter.includes(key);\n  };\n\n  ToSetSequence.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1$1 = this;\n\n    return this._iter.__iterate(function (v) { return fn(v, v, this$1$1); }, reverse);\n  };\n\n  ToSetSequence.prototype.__iterator = function __iterator (type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done\n        ? step\n        : iteratorValue(type, step.value, step.value, step);\n    });\n  };\n\n  return ToSetSequence;\n}(SetSeq));\n\nvar FromEntriesSequence = /*@__PURE__*/(function (KeyedSeq) {\n  function FromEntriesSequence(entries) {\n    this._iter = entries;\n    this.size = entries.size;\n  }\n\n  if ( KeyedSeq ) FromEntriesSequence.__proto__ = KeyedSeq;\n  FromEntriesSequence.prototype = Object.create( KeyedSeq && KeyedSeq.prototype );\n  FromEntriesSequence.prototype.constructor = FromEntriesSequence;\n\n  FromEntriesSequence.prototype.entrySeq = function entrySeq () {\n    return this._iter.toSeq();\n  };\n\n  FromEntriesSequence.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1$1 = this;\n\n    return this._iter.__iterate(function (entry) {\n      // Check if entry exists first so array access doesn't throw for holes\n      // in the parent iteration.\n      if (entry) {\n        validateEntry(entry);\n        var indexedCollection = isCollection(entry);\n        return fn(\n          indexedCollection ? entry.get(1) : entry[1],\n          indexedCollection ? entry.get(0) : entry[0],\n          this$1$1\n        );\n      }\n    }, reverse);\n  };\n\n  FromEntriesSequence.prototype.__iterator = function __iterator (type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    return new Iterator(function () {\n      while (true) {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n        if (entry) {\n          validateEntry(entry);\n          var indexedCollection = isCollection(entry);\n          return iteratorValue(\n            type,\n            indexedCollection ? entry.get(0) : entry[0],\n            indexedCollection ? entry.get(1) : entry[1],\n            step\n          );\n        }\n      }\n    });\n  };\n\n  return FromEntriesSequence;\n}(KeyedSeq));\n\nToIndexedSequence.prototype.cacheResult =\n  ToKeyedSequence.prototype.cacheResult =\n  ToSetSequence.prototype.cacheResult =\n  FromEntriesSequence.prototype.cacheResult =\n    cacheResultThrough;\n\nfunction flipFactory(collection) {\n  var flipSequence = makeSequence(collection);\n  flipSequence._iter = collection;\n  flipSequence.size = collection.size;\n  flipSequence.flip = function () { return collection; };\n  flipSequence.reverse = function () {\n    var reversedSequence = collection.reverse.apply(this); // super.reverse()\n    reversedSequence.flip = function () { return collection.reverse(); };\n    return reversedSequence;\n  };\n  flipSequence.has = function (key) { return collection.includes(key); };\n  flipSequence.includes = function (key) { return collection.has(key); };\n  flipSequence.cacheResult = cacheResultThrough;\n  flipSequence.__iterateUncached = function (fn, reverse) {\n    var this$1$1 = this;\n\n    return collection.__iterate(function (v, k) { return fn(k, v, this$1$1) !== false; }, reverse);\n  };\n  flipSequence.__iteratorUncached = function (type, reverse) {\n    if (type === ITERATE_ENTRIES) {\n      var iterator = collection.__iterator(type, reverse);\n      return new Iterator(function () {\n        var step = iterator.next();\n        if (!step.done) {\n          var k = step.value[0];\n          step.value[0] = step.value[1];\n          step.value[1] = k;\n        }\n        return step;\n      });\n    }\n    return collection.__iterator(\n      type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,\n      reverse\n    );\n  };\n  return flipSequence;\n}\n\nfunction mapFactory(collection, mapper, context) {\n  var mappedSequence = makeSequence(collection);\n  mappedSequence.size = collection.size;\n  mappedSequence.has = function (key) { return collection.has(key); };\n  mappedSequence.get = function (key, notSetValue) {\n    var v = collection.get(key, NOT_SET);\n    return v === NOT_SET\n      ? notSetValue\n      : mapper.call(context, v, key, collection);\n  };\n  mappedSequence.__iterateUncached = function (fn, reverse) {\n    var this$1$1 = this;\n\n    return collection.__iterate(\n      function (v, k, c) { return fn(mapper.call(context, v, k, c), k, this$1$1) !== false; },\n      reverse\n    );\n  };\n  mappedSequence.__iteratorUncached = function (type, reverse) {\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n    return new Iterator(function () {\n      var step = iterator.next();\n      if (step.done) {\n        return step;\n      }\n      var entry = step.value;\n      var key = entry[0];\n      return iteratorValue(\n        type,\n        key,\n        mapper.call(context, entry[1], key, collection),\n        step\n      );\n    });\n  };\n  return mappedSequence;\n}\n\nfunction reverseFactory(collection, useKeys) {\n  var this$1$1 = this;\n\n  var reversedSequence = makeSequence(collection);\n  reversedSequence._iter = collection;\n  reversedSequence.size = collection.size;\n  reversedSequence.reverse = function () { return collection; };\n  if (collection.flip) {\n    reversedSequence.flip = function () {\n      var flipSequence = flipFactory(collection);\n      flipSequence.reverse = function () { return collection.flip(); };\n      return flipSequence;\n    };\n  }\n  reversedSequence.get = function (key, notSetValue) { return collection.get(useKeys ? key : -1 - key, notSetValue); };\n  reversedSequence.has = function (key) { return collection.has(useKeys ? key : -1 - key); };\n  reversedSequence.includes = function (value) { return collection.includes(value); };\n  reversedSequence.cacheResult = cacheResultThrough;\n  reversedSequence.__iterate = function (fn, reverse) {\n    var this$1$1 = this;\n\n    var i = 0;\n    reverse && ensureSize(collection);\n    return collection.__iterate(\n      function (v, k) { return fn(v, useKeys ? k : reverse ? this$1$1.size - ++i : i++, this$1$1); },\n      !reverse\n    );\n  };\n  reversedSequence.__iterator = function (type, reverse) {\n    var i = 0;\n    reverse && ensureSize(collection);\n    var iterator = collection.__iterator(ITERATE_ENTRIES, !reverse);\n    return new Iterator(function () {\n      var step = iterator.next();\n      if (step.done) {\n        return step;\n      }\n      var entry = step.value;\n      return iteratorValue(\n        type,\n        useKeys ? entry[0] : reverse ? this$1$1.size - ++i : i++,\n        entry[1],\n        step\n      );\n    });\n  };\n  return reversedSequence;\n}\n\nfunction filterFactory(collection, predicate, context, useKeys) {\n  var filterSequence = makeSequence(collection);\n  if (useKeys) {\n    filterSequence.has = function (key) {\n      var v = collection.get(key, NOT_SET);\n      return v !== NOT_SET && !!predicate.call(context, v, key, collection);\n    };\n    filterSequence.get = function (key, notSetValue) {\n      var v = collection.get(key, NOT_SET);\n      return v !== NOT_SET && predicate.call(context, v, key, collection)\n        ? v\n        : notSetValue;\n    };\n  }\n  filterSequence.__iterateUncached = function (fn, reverse) {\n    var this$1$1 = this;\n\n    var iterations = 0;\n    collection.__iterate(function (v, k, c) {\n      if (predicate.call(context, v, k, c)) {\n        iterations++;\n        return fn(v, useKeys ? k : iterations - 1, this$1$1);\n      }\n    }, reverse);\n    return iterations;\n  };\n  filterSequence.__iteratorUncached = function (type, reverse) {\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n    var iterations = 0;\n    return new Iterator(function () {\n      while (true) {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        var value = entry[1];\n        if (predicate.call(context, value, key, collection)) {\n          return iteratorValue(type, useKeys ? key : iterations++, value, step);\n        }\n      }\n    });\n  };\n  return filterSequence;\n}\n\nfunction countByFactory(collection, grouper, context) {\n  var groups = Map().asMutable();\n  collection.__iterate(function (v, k) {\n    groups.update(grouper.call(context, v, k, collection), 0, function (a) { return a + 1; });\n  });\n  return groups.asImmutable();\n}\n\nfunction groupByFactory(collection, grouper, context) {\n  var isKeyedIter = isKeyed(collection);\n  var groups = (isOrdered(collection) ? OrderedMap() : Map()).asMutable();\n  collection.__iterate(function (v, k) {\n    groups.update(\n      grouper.call(context, v, k, collection),\n      function (a) { return ((a = a || []), a.push(isKeyedIter ? [k, v] : v), a); }\n    );\n  });\n  var coerce = collectionClass(collection);\n  return groups.map(function (arr) { return reify(collection, coerce(arr)); }).asImmutable();\n}\n\nfunction sliceFactory(collection, begin, end, useKeys) {\n  var originalSize = collection.size;\n\n  if (wholeSlice(begin, end, originalSize)) {\n    return collection;\n  }\n\n  var resolvedBegin = resolveBegin(begin, originalSize);\n  var resolvedEnd = resolveEnd(end, originalSize);\n\n  // begin or end will be NaN if they were provided as negative numbers and\n  // this collection's size is unknown. In that case, cache first so there is\n  // a known size and these do not resolve to NaN.\n  if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n    return sliceFactory(collection.toSeq().cacheResult(), begin, end, useKeys);\n  }\n\n  // Note: resolvedEnd is undefined when the original sequence's length is\n  // unknown and this slice did not supply an end and should contain all\n  // elements after resolvedBegin.\n  // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n  var resolvedSize = resolvedEnd - resolvedBegin;\n  var sliceSize;\n  if (resolvedSize === resolvedSize) {\n    sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n  }\n\n  var sliceSeq = makeSequence(collection);\n\n  // If collection.size is undefined, the size of the realized sliceSeq is\n  // unknown at this point unless the number of items to slice is 0\n  sliceSeq.size =\n    sliceSize === 0 ? sliceSize : (collection.size && sliceSize) || undefined;\n\n  if (!useKeys && isSeq(collection) && sliceSize >= 0) {\n    sliceSeq.get = function (index, notSetValue) {\n      index = wrapIndex(this, index);\n      return index >= 0 && index < sliceSize\n        ? collection.get(index + resolvedBegin, notSetValue)\n        : notSetValue;\n    };\n  }\n\n  sliceSeq.__iterateUncached = function (fn, reverse) {\n    var this$1$1 = this;\n\n    if (sliceSize === 0) {\n      return 0;\n    }\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var skipped = 0;\n    var isSkipping = true;\n    var iterations = 0;\n    collection.__iterate(function (v, k) {\n      if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n        iterations++;\n        return (\n          fn(v, useKeys ? k : iterations - 1, this$1$1) !== false &&\n          iterations !== sliceSize\n        );\n      }\n    });\n    return iterations;\n  };\n\n  sliceSeq.__iteratorUncached = function (type, reverse) {\n    if (sliceSize !== 0 && reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    // Don't bother instantiating parent iterator if taking 0.\n    if (sliceSize === 0) {\n      return new Iterator(iteratorDone);\n    }\n    var iterator = collection.__iterator(type, reverse);\n    var skipped = 0;\n    var iterations = 0;\n    return new Iterator(function () {\n      while (skipped++ < resolvedBegin) {\n        iterator.next();\n      }\n      if (++iterations > sliceSize) {\n        return iteratorDone();\n      }\n      var step = iterator.next();\n      if (useKeys || type === ITERATE_VALUES || step.done) {\n        return step;\n      }\n      if (type === ITERATE_KEYS) {\n        return iteratorValue(type, iterations - 1, undefined, step);\n      }\n      return iteratorValue(type, iterations - 1, step.value[1], step);\n    });\n  };\n\n  return sliceSeq;\n}\n\nfunction takeWhileFactory(collection, predicate, context) {\n  var takeSequence = makeSequence(collection);\n  takeSequence.__iterateUncached = function (fn, reverse) {\n    var this$1$1 = this;\n\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var iterations = 0;\n    collection.__iterate(\n      function (v, k, c) { return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$1$1); }\n    );\n    return iterations;\n  };\n  takeSequence.__iteratorUncached = function (type, reverse) {\n    var this$1$1 = this;\n\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n    var iterating = true;\n    return new Iterator(function () {\n      if (!iterating) {\n        return iteratorDone();\n      }\n      var step = iterator.next();\n      if (step.done) {\n        return step;\n      }\n      var entry = step.value;\n      var k = entry[0];\n      var v = entry[1];\n      if (!predicate.call(context, v, k, this$1$1)) {\n        iterating = false;\n        return iteratorDone();\n      }\n      return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n    });\n  };\n  return takeSequence;\n}\n\nfunction skipWhileFactory(collection, predicate, context, useKeys) {\n  var skipSequence = makeSequence(collection);\n  skipSequence.__iterateUncached = function (fn, reverse) {\n    var this$1$1 = this;\n\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var isSkipping = true;\n    var iterations = 0;\n    collection.__iterate(function (v, k, c) {\n      if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n        iterations++;\n        return fn(v, useKeys ? k : iterations - 1, this$1$1);\n      }\n    });\n    return iterations;\n  };\n  skipSequence.__iteratorUncached = function (type, reverse) {\n    var this$1$1 = this;\n\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n    var skipping = true;\n    var iterations = 0;\n    return new Iterator(function () {\n      var step;\n      var k;\n      var v;\n      do {\n        step = iterator.next();\n        if (step.done) {\n          if (useKeys || type === ITERATE_VALUES) {\n            return step;\n          }\n          if (type === ITERATE_KEYS) {\n            return iteratorValue(type, iterations++, undefined, step);\n          }\n          return iteratorValue(type, iterations++, step.value[1], step);\n        }\n        var entry = step.value;\n        k = entry[0];\n        v = entry[1];\n        skipping && (skipping = predicate.call(context, v, k, this$1$1));\n      } while (skipping);\n      return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n    });\n  };\n  return skipSequence;\n}\n\nfunction concatFactory(collection, values) {\n  var isKeyedCollection = isKeyed(collection);\n  var iters = [collection]\n    .concat(values)\n    .map(function (v) {\n      if (!isCollection(v)) {\n        v = isKeyedCollection\n          ? keyedSeqFromValue(v)\n          : indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedCollection) {\n        v = KeyedCollection(v);\n      }\n      return v;\n    })\n    .filter(function (v) { return v.size !== 0; });\n\n  if (iters.length === 0) {\n    return collection;\n  }\n\n  if (iters.length === 1) {\n    var singleton = iters[0];\n    if (\n      singleton === collection ||\n      (isKeyedCollection && isKeyed(singleton)) ||\n      (isIndexed(collection) && isIndexed(singleton))\n    ) {\n      return singleton;\n    }\n  }\n\n  var concatSeq = new ArraySeq(iters);\n  if (isKeyedCollection) {\n    concatSeq = concatSeq.toKeyedSeq();\n  } else if (!isIndexed(collection)) {\n    concatSeq = concatSeq.toSetSeq();\n  }\n  concatSeq = concatSeq.flatten(true);\n  concatSeq.size = iters.reduce(function (sum, seq) {\n    if (sum !== undefined) {\n      var size = seq.size;\n      if (size !== undefined) {\n        return sum + size;\n      }\n    }\n  }, 0);\n  return concatSeq;\n}\n\nfunction flattenFactory(collection, depth, useKeys) {\n  var flatSequence = makeSequence(collection);\n  flatSequence.__iterateUncached = function (fn, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var iterations = 0;\n    var stopped = false;\n    function flatDeep(iter, currentDepth) {\n      iter.__iterate(function (v, k) {\n        if ((!depth || currentDepth < depth) && isCollection(v)) {\n          flatDeep(v, currentDepth + 1);\n        } else {\n          iterations++;\n          if (fn(v, useKeys ? k : iterations - 1, flatSequence) === false) {\n            stopped = true;\n          }\n        }\n        return !stopped;\n      }, reverse);\n    }\n    flatDeep(collection, 0);\n    return iterations;\n  };\n  flatSequence.__iteratorUncached = function (type, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterator = collection.__iterator(type, reverse);\n    var stack = [];\n    var iterations = 0;\n    return new Iterator(function () {\n      while (iterator) {\n        var step = iterator.next();\n        if (step.done !== false) {\n          iterator = stack.pop();\n          continue;\n        }\n        var v = step.value;\n        if (type === ITERATE_ENTRIES) {\n          v = v[1];\n        }\n        if ((!depth || stack.length < depth) && isCollection(v)) {\n          stack.push(iterator);\n          iterator = v.__iterator(type, reverse);\n        } else {\n          return useKeys ? step : iteratorValue(type, iterations++, v, step);\n        }\n      }\n      return iteratorDone();\n    });\n  };\n  return flatSequence;\n}\n\nfunction flatMapFactory(collection, mapper, context) {\n  var coerce = collectionClass(collection);\n  return collection\n    .toSeq()\n    .map(function (v, k) { return coerce(mapper.call(context, v, k, collection)); })\n    .flatten(true);\n}\n\nfunction interposeFactory(collection, separator) {\n  var interposedSequence = makeSequence(collection);\n  interposedSequence.size = collection.size && collection.size * 2 - 1;\n  interposedSequence.__iterateUncached = function (fn, reverse) {\n    var this$1$1 = this;\n\n    var iterations = 0;\n    collection.__iterate(\n      function (v) { return (!iterations || fn(separator, iterations++, this$1$1) !== false) &&\n        fn(v, iterations++, this$1$1) !== false; },\n      reverse\n    );\n    return iterations;\n  };\n  interposedSequence.__iteratorUncached = function (type, reverse) {\n    var iterator = collection.__iterator(ITERATE_VALUES, reverse);\n    var iterations = 0;\n    var step;\n    return new Iterator(function () {\n      if (!step || iterations % 2) {\n        step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n      }\n      return iterations % 2\n        ? iteratorValue(type, iterations++, separator)\n        : iteratorValue(type, iterations++, step.value, step);\n    });\n  };\n  return interposedSequence;\n}\n\nfunction sortFactory(collection, comparator, mapper) {\n  if (!comparator) {\n    comparator = defaultComparator;\n  }\n  var isKeyedCollection = isKeyed(collection);\n  var index = 0;\n  var entries = collection\n    .toSeq()\n    .map(function (v, k) { return [k, v, index++, mapper ? mapper(v, k, collection) : v]; })\n    .valueSeq()\n    .toArray();\n  entries\n    .sort(function (a, b) { return comparator(a[3], b[3]) || a[2] - b[2]; })\n    .forEach(\n      isKeyedCollection\n        ? function (v, i) {\n            entries[i].length = 2;\n          }\n        : function (v, i) {\n            entries[i] = v[1];\n          }\n    );\n  return isKeyedCollection\n    ? KeyedSeq(entries)\n    : isIndexed(collection)\n    ? IndexedSeq(entries)\n    : SetSeq(entries);\n}\n\nfunction maxFactory(collection, comparator, mapper) {\n  if (!comparator) {\n    comparator = defaultComparator;\n  }\n  if (mapper) {\n    var entry = collection\n      .toSeq()\n      .map(function (v, k) { return [v, mapper(v, k, collection)]; })\n      .reduce(function (a, b) { return (maxCompare(comparator, a[1], b[1]) ? b : a); });\n    return entry && entry[0];\n  }\n  return collection.reduce(function (a, b) { return (maxCompare(comparator, a, b) ? b : a); });\n}\n\nfunction maxCompare(comparator, a, b) {\n  var comp = comparator(b, a);\n  // b is considered the new max if the comparator declares them equal, but\n  // they are not equal and b is in fact a nullish value.\n  return (\n    (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) ||\n    comp > 0\n  );\n}\n\nfunction zipWithFactory(keyIter, zipper, iters, zipAll) {\n  var zipSequence = makeSequence(keyIter);\n  var sizes = new ArraySeq(iters).map(function (i) { return i.size; });\n  zipSequence.size = zipAll ? sizes.max() : sizes.min();\n  // Note: this a generic base implementation of __iterate in terms of\n  // __iterator which may be more generically useful in the future.\n  zipSequence.__iterate = function (fn, reverse) {\n    /* generic:\n    var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n    var step;\n    var iterations = 0;\n    while (!(step = iterator.next()).done) {\n      iterations++;\n      if (fn(step.value[1], step.value[0], this) === false) {\n        break;\n      }\n    }\n    return iterations;\n    */\n    // indexed:\n    var iterator = this.__iterator(ITERATE_VALUES, reverse);\n    var step;\n    var iterations = 0;\n    while (!(step = iterator.next()).done) {\n      if (fn(step.value, iterations++, this) === false) {\n        break;\n      }\n    }\n    return iterations;\n  };\n  zipSequence.__iteratorUncached = function (type, reverse) {\n    var iterators = iters.map(\n      function (i) { return ((i = Collection(i)), getIterator(reverse ? i.reverse() : i)); }\n    );\n    var iterations = 0;\n    var isDone = false;\n    return new Iterator(function () {\n      var steps;\n      if (!isDone) {\n        steps = iterators.map(function (i) { return i.next(); });\n        isDone = zipAll ? steps.every(function (s) { return s.done; }) : steps.some(function (s) { return s.done; });\n      }\n      if (isDone) {\n        return iteratorDone();\n      }\n      return iteratorValue(\n        type,\n        iterations++,\n        zipper.apply(\n          null,\n          steps.map(function (s) { return s.value; })\n        )\n      );\n    });\n  };\n  return zipSequence;\n}\n\n// #pragma Helper Functions\n\nfunction reify(iter, seq) {\n  return iter === seq ? iter : isSeq(iter) ? seq : iter.constructor(seq);\n}\n\nfunction validateEntry(entry) {\n  if (entry !== Object(entry)) {\n    throw new TypeError('Expected [K, V] tuple: ' + entry);\n  }\n}\n\nfunction collectionClass(collection) {\n  return isKeyed(collection)\n    ? KeyedCollection\n    : isIndexed(collection)\n    ? IndexedCollection\n    : SetCollection;\n}\n\nfunction makeSequence(collection) {\n  return Object.create(\n    (isKeyed(collection)\n      ? KeyedSeq\n      : isIndexed(collection)\n      ? IndexedSeq\n      : SetSeq\n    ).prototype\n  );\n}\n\nfunction cacheResultThrough() {\n  if (this._iter.cacheResult) {\n    this._iter.cacheResult();\n    this.size = this._iter.size;\n    return this;\n  }\n  return Seq.prototype.cacheResult.call(this);\n}\n\nfunction defaultComparator(a, b) {\n  if (a === undefined && b === undefined) {\n    return 0;\n  }\n\n  if (a === undefined) {\n    return 1;\n  }\n\n  if (b === undefined) {\n    return -1;\n  }\n\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\nfunction arrCopy(arr, offset) {\n  offset = offset || 0;\n  var len = Math.max(0, arr.length - offset);\n  var newArr = new Array(len);\n  for (var ii = 0; ii < len; ii++) {\n    newArr[ii] = arr[ii + offset];\n  }\n  return newArr;\n}\n\nfunction invariant(condition, error) {\n  if (!condition) { throw new Error(error); }\n}\n\nfunction assertNotInfinite(size) {\n  invariant(\n    size !== Infinity,\n    'Cannot perform this action with an infinite size.'\n  );\n}\n\nfunction coerceKeyPath(keyPath) {\n  if (isArrayLike(keyPath) && typeof keyPath !== 'string') {\n    return keyPath;\n  }\n  if (isOrdered(keyPath)) {\n    return keyPath.toArray();\n  }\n  throw new TypeError(\n    'Invalid keyPath: expected Ordered Collection or Array: ' + keyPath\n  );\n}\n\nvar toString = Object.prototype.toString;\n\nfunction isPlainObject(value) {\n  // The base prototype's toString deals with Argument objects and native namespaces like Math\n  if (\n    !value ||\n    typeof value !== 'object' ||\n    toString.call(value) !== '[object Object]'\n  ) {\n    return false;\n  }\n\n  var proto = Object.getPrototypeOf(value);\n  if (proto === null) {\n    return true;\n  }\n\n  // Iteratively going up the prototype chain is needed for cross-realm environments (differing contexts, iframes, etc)\n  var parentProto = proto;\n  var nextProto = Object.getPrototypeOf(proto);\n  while (nextProto !== null) {\n    parentProto = nextProto;\n    nextProto = Object.getPrototypeOf(parentProto);\n  }\n  return parentProto === proto;\n}\n\n/**\n * Returns true if the value is a potentially-persistent data structure, either\n * provided by Immutable.js or a plain Array or Object.\n */\nfunction isDataStructure(value) {\n  return (\n    typeof value === 'object' &&\n    (isImmutable(value) || Array.isArray(value) || isPlainObject(value))\n  );\n}\n\nfunction quoteString(value) {\n  try {\n    return typeof value === 'string' ? JSON.stringify(value) : String(value);\n  } catch (_ignoreError) {\n    return JSON.stringify(value);\n  }\n}\n\nfunction has(collection, key) {\n  return isImmutable(collection)\n    ? collection.has(key)\n    : isDataStructure(collection) && hasOwnProperty.call(collection, key);\n}\n\nfunction get(collection, key, notSetValue) {\n  return isImmutable(collection)\n    ? collection.get(key, notSetValue)\n    : !has(collection, key)\n    ? notSetValue\n    : typeof collection.get === 'function'\n    ? collection.get(key)\n    : collection[key];\n}\n\nfunction shallowCopy(from) {\n  if (Array.isArray(from)) {\n    return arrCopy(from);\n  }\n  var to = {};\n  for (var key in from) {\n    if (hasOwnProperty.call(from, key)) {\n      to[key] = from[key];\n    }\n  }\n  return to;\n}\n\nfunction remove(collection, key) {\n  if (!isDataStructure(collection)) {\n    throw new TypeError(\n      'Cannot update non-data-structure value: ' + collection\n    );\n  }\n  if (isImmutable(collection)) {\n    if (!collection.remove) {\n      throw new TypeError(\n        'Cannot update immutable value without .remove() method: ' + collection\n      );\n    }\n    return collection.remove(key);\n  }\n  if (!hasOwnProperty.call(collection, key)) {\n    return collection;\n  }\n  var collectionCopy = shallowCopy(collection);\n  if (Array.isArray(collectionCopy)) {\n    collectionCopy.splice(key, 1);\n  } else {\n    delete collectionCopy[key];\n  }\n  return collectionCopy;\n}\n\nfunction set(collection, key, value) {\n  if (!isDataStructure(collection)) {\n    throw new TypeError(\n      'Cannot update non-data-structure value: ' + collection\n    );\n  }\n  if (isImmutable(collection)) {\n    if (!collection.set) {\n      throw new TypeError(\n        'Cannot update immutable value without .set() method: ' + collection\n      );\n    }\n    return collection.set(key, value);\n  }\n  if (hasOwnProperty.call(collection, key) && value === collection[key]) {\n    return collection;\n  }\n  var collectionCopy = shallowCopy(collection);\n  collectionCopy[key] = value;\n  return collectionCopy;\n}\n\nfunction updateIn$1(collection, keyPath, notSetValue, updater) {\n  if (!updater) {\n    updater = notSetValue;\n    notSetValue = undefined;\n  }\n  var updatedValue = updateInDeeply(\n    isImmutable(collection),\n    collection,\n    coerceKeyPath(keyPath),\n    0,\n    notSetValue,\n    updater\n  );\n  return updatedValue === NOT_SET ? notSetValue : updatedValue;\n}\n\nfunction updateInDeeply(\n  inImmutable,\n  existing,\n  keyPath,\n  i,\n  notSetValue,\n  updater\n) {\n  var wasNotSet = existing === NOT_SET;\n  if (i === keyPath.length) {\n    var existingValue = wasNotSet ? notSetValue : existing;\n    var newValue = updater(existingValue);\n    return newValue === existingValue ? existing : newValue;\n  }\n  if (!wasNotSet && !isDataStructure(existing)) {\n    throw new TypeError(\n      'Cannot update within non-data-structure value in path [' +\n        keyPath.slice(0, i).map(quoteString) +\n        ']: ' +\n        existing\n    );\n  }\n  var key = keyPath[i];\n  var nextExisting = wasNotSet ? NOT_SET : get(existing, key, NOT_SET);\n  var nextUpdated = updateInDeeply(\n    nextExisting === NOT_SET ? inImmutable : isImmutable(nextExisting),\n    nextExisting,\n    keyPath,\n    i + 1,\n    notSetValue,\n    updater\n  );\n  return nextUpdated === nextExisting\n    ? existing\n    : nextUpdated === NOT_SET\n    ? remove(existing, key)\n    : set(\n        wasNotSet ? (inImmutable ? emptyMap() : {}) : existing,\n        key,\n        nextUpdated\n      );\n}\n\nfunction setIn$1(collection, keyPath, value) {\n  return updateIn$1(collection, keyPath, NOT_SET, function () { return value; });\n}\n\nfunction setIn(keyPath, v) {\n  return setIn$1(this, keyPath, v);\n}\n\nfunction removeIn(collection, keyPath) {\n  return updateIn$1(collection, keyPath, function () { return NOT_SET; });\n}\n\nfunction deleteIn(keyPath) {\n  return removeIn(this, keyPath);\n}\n\nfunction update$1(collection, key, notSetValue, updater) {\n  return updateIn$1(collection, [key], notSetValue, updater);\n}\n\nfunction update(key, notSetValue, updater) {\n  return arguments.length === 1\n    ? key(this)\n    : update$1(this, key, notSetValue, updater);\n}\n\nfunction updateIn(keyPath, notSetValue, updater) {\n  return updateIn$1(this, keyPath, notSetValue, updater);\n}\n\nfunction merge$1() {\n  var iters = [], len = arguments.length;\n  while ( len-- ) iters[ len ] = arguments[ len ];\n\n  return mergeIntoKeyedWith(this, iters);\n}\n\nfunction mergeWith$1(merger) {\n  var iters = [], len = arguments.length - 1;\n  while ( len-- > 0 ) iters[ len ] = arguments[ len + 1 ];\n\n  if (typeof merger !== 'function') {\n    throw new TypeError('Invalid merger function: ' + merger);\n  }\n  return mergeIntoKeyedWith(this, iters, merger);\n}\n\nfunction mergeIntoKeyedWith(collection, collections, merger) {\n  var iters = [];\n  for (var ii = 0; ii < collections.length; ii++) {\n    var collection$1 = KeyedCollection(collections[ii]);\n    if (collection$1.size !== 0) {\n      iters.push(collection$1);\n    }\n  }\n  if (iters.length === 0) {\n    return collection;\n  }\n  if (\n    collection.toSeq().size === 0 &&\n    !collection.__ownerID &&\n    iters.length === 1\n  ) {\n    return collection.constructor(iters[0]);\n  }\n  return collection.withMutations(function (collection) {\n    var mergeIntoCollection = merger\n      ? function (value, key) {\n          update$1(collection, key, NOT_SET, function (oldVal) { return oldVal === NOT_SET ? value : merger(oldVal, value, key); }\n          );\n        }\n      : function (value, key) {\n          collection.set(key, value);\n        };\n    for (var ii = 0; ii < iters.length; ii++) {\n      iters[ii].forEach(mergeIntoCollection);\n    }\n  });\n}\n\nfunction merge(collection) {\n  var sources = [], len = arguments.length - 1;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];\n\n  return mergeWithSources(collection, sources);\n}\n\nfunction mergeWith(merger, collection) {\n  var sources = [], len = arguments.length - 2;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 2 ];\n\n  return mergeWithSources(collection, sources, merger);\n}\n\nfunction mergeDeep$1(collection) {\n  var sources = [], len = arguments.length - 1;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];\n\n  return mergeDeepWithSources(collection, sources);\n}\n\nfunction mergeDeepWith$1(merger, collection) {\n  var sources = [], len = arguments.length - 2;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 2 ];\n\n  return mergeDeepWithSources(collection, sources, merger);\n}\n\nfunction mergeDeepWithSources(collection, sources, merger) {\n  return mergeWithSources(collection, sources, deepMergerWith(merger));\n}\n\nfunction mergeWithSources(collection, sources, merger) {\n  if (!isDataStructure(collection)) {\n    throw new TypeError(\n      'Cannot merge into non-data-structure value: ' + collection\n    );\n  }\n  if (isImmutable(collection)) {\n    return typeof merger === 'function' && collection.mergeWith\n      ? collection.mergeWith.apply(collection, [ merger ].concat( sources ))\n      : collection.merge\n      ? collection.merge.apply(collection, sources)\n      : collection.concat.apply(collection, sources);\n  }\n  var isArray = Array.isArray(collection);\n  var merged = collection;\n  var Collection = isArray ? IndexedCollection : KeyedCollection;\n  var mergeItem = isArray\n    ? function (value) {\n        // Copy on write\n        if (merged === collection) {\n          merged = shallowCopy(merged);\n        }\n        merged.push(value);\n      }\n    : function (value, key) {\n        var hasVal = hasOwnProperty.call(merged, key);\n        var nextVal =\n          hasVal && merger ? merger(merged[key], value, key) : value;\n        if (!hasVal || nextVal !== merged[key]) {\n          // Copy on write\n          if (merged === collection) {\n            merged = shallowCopy(merged);\n          }\n          merged[key] = nextVal;\n        }\n      };\n  for (var i = 0; i < sources.length; i++) {\n    Collection(sources[i]).forEach(mergeItem);\n  }\n  return merged;\n}\n\nfunction deepMergerWith(merger) {\n  function deepMerger(oldValue, newValue, key) {\n    return isDataStructure(oldValue) &&\n      isDataStructure(newValue) &&\n      areMergeable(oldValue, newValue)\n      ? mergeWithSources(oldValue, [newValue], deepMerger)\n      : merger\n      ? merger(oldValue, newValue, key)\n      : newValue;\n  }\n  return deepMerger;\n}\n\n/**\n * It's unclear what the desired behavior is for merging two collections that\n * fall into separate categories between keyed, indexed, or set-like, so we only\n * consider them mergeable if they fall into the same category.\n */\nfunction areMergeable(oldDataStructure, newDataStructure) {\n  var oldSeq = Seq(oldDataStructure);\n  var newSeq = Seq(newDataStructure);\n  // This logic assumes that a sequence can only fall into one of the three\n  // categories mentioned above (since there's no `isSetLike()` method).\n  return (\n    isIndexed(oldSeq) === isIndexed(newSeq) &&\n    isKeyed(oldSeq) === isKeyed(newSeq)\n  );\n}\n\nfunction mergeDeep() {\n  var iters = [], len = arguments.length;\n  while ( len-- ) iters[ len ] = arguments[ len ];\n\n  return mergeDeepWithSources(this, iters);\n}\n\nfunction mergeDeepWith(merger) {\n  var iters = [], len = arguments.length - 1;\n  while ( len-- > 0 ) iters[ len ] = arguments[ len + 1 ];\n\n  return mergeDeepWithSources(this, iters, merger);\n}\n\nfunction mergeIn(keyPath) {\n  var iters = [], len = arguments.length - 1;\n  while ( len-- > 0 ) iters[ len ] = arguments[ len + 1 ];\n\n  return updateIn$1(this, keyPath, emptyMap(), function (m) { return mergeWithSources(m, iters); });\n}\n\nfunction mergeDeepIn(keyPath) {\n  var iters = [], len = arguments.length - 1;\n  while ( len-- > 0 ) iters[ len ] = arguments[ len + 1 ];\n\n  return updateIn$1(this, keyPath, emptyMap(), function (m) { return mergeDeepWithSources(m, iters); }\n  );\n}\n\nfunction withMutations(fn) {\n  var mutable = this.asMutable();\n  fn(mutable);\n  return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n}\n\nfunction asMutable() {\n  return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n}\n\nfunction asImmutable() {\n  return this.__ensureOwner();\n}\n\nfunction wasAltered() {\n  return this.__altered;\n}\n\nvar Map = /*@__PURE__*/(function (KeyedCollection) {\n  function Map(value) {\n    return value === null || value === undefined\n      ? emptyMap()\n      : isMap(value) && !isOrdered(value)\n      ? value\n      : emptyMap().withMutations(function (map) {\n          var iter = KeyedCollection(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function (v, k) { return map.set(k, v); });\n        });\n  }\n\n  if ( KeyedCollection ) Map.__proto__ = KeyedCollection;\n  Map.prototype = Object.create( KeyedCollection && KeyedCollection.prototype );\n  Map.prototype.constructor = Map;\n\n  Map.of = function of () {\n    var keyValues = [], len = arguments.length;\n    while ( len-- ) keyValues[ len ] = arguments[ len ];\n\n    return emptyMap().withMutations(function (map) {\n      for (var i = 0; i < keyValues.length; i += 2) {\n        if (i + 1 >= keyValues.length) {\n          throw new Error('Missing value for key: ' + keyValues[i]);\n        }\n        map.set(keyValues[i], keyValues[i + 1]);\n      }\n    });\n  };\n\n  Map.prototype.toString = function toString () {\n    return this.__toString('Map {', '}');\n  };\n\n  // @pragma Access\n\n  Map.prototype.get = function get (k, notSetValue) {\n    return this._root\n      ? this._root.get(0, undefined, k, notSetValue)\n      : notSetValue;\n  };\n\n  // @pragma Modification\n\n  Map.prototype.set = function set (k, v) {\n    return updateMap(this, k, v);\n  };\n\n  Map.prototype.remove = function remove (k) {\n    return updateMap(this, k, NOT_SET);\n  };\n\n  Map.prototype.deleteAll = function deleteAll (keys) {\n    var collection = Collection(keys);\n\n    if (collection.size === 0) {\n      return this;\n    }\n\n    return this.withMutations(function (map) {\n      collection.forEach(function (key) { return map.remove(key); });\n    });\n  };\n\n  Map.prototype.clear = function clear () {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = 0;\n      this._root = null;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return emptyMap();\n  };\n\n  // @pragma Composition\n\n  Map.prototype.sort = function sort (comparator) {\n    // Late binding\n    return OrderedMap(sortFactory(this, comparator));\n  };\n\n  Map.prototype.sortBy = function sortBy (mapper, comparator) {\n    // Late binding\n    return OrderedMap(sortFactory(this, comparator, mapper));\n  };\n\n  Map.prototype.map = function map (mapper, context) {\n    var this$1$1 = this;\n\n    return this.withMutations(function (map) {\n      map.forEach(function (value, key) {\n        map.set(key, mapper.call(context, value, key, this$1$1));\n      });\n    });\n  };\n\n  // @pragma Mutability\n\n  Map.prototype.__iterator = function __iterator (type, reverse) {\n    return new MapIterator(this, type, reverse);\n  };\n\n  Map.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1$1 = this;\n\n    var iterations = 0;\n    this._root &&\n      this._root.iterate(function (entry) {\n        iterations++;\n        return fn(entry[1], entry[0], this$1$1);\n      }, reverse);\n    return iterations;\n  };\n\n  Map.prototype.__ensureOwner = function __ensureOwner (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    if (!ownerID) {\n      if (this.size === 0) {\n        return emptyMap();\n      }\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n    return makeMap(this.size, this._root, ownerID, this.__hash);\n  };\n\n  return Map;\n}(KeyedCollection));\n\nMap.isMap = isMap;\n\nvar MapPrototype = Map.prototype;\nMapPrototype[IS_MAP_SYMBOL] = true;\nMapPrototype[DELETE] = MapPrototype.remove;\nMapPrototype.removeAll = MapPrototype.deleteAll;\nMapPrototype.setIn = setIn;\nMapPrototype.removeIn = MapPrototype.deleteIn = deleteIn;\nMapPrototype.update = update;\nMapPrototype.updateIn = updateIn;\nMapPrototype.merge = MapPrototype.concat = merge$1;\nMapPrototype.mergeWith = mergeWith$1;\nMapPrototype.mergeDeep = mergeDeep;\nMapPrototype.mergeDeepWith = mergeDeepWith;\nMapPrototype.mergeIn = mergeIn;\nMapPrototype.mergeDeepIn = mergeDeepIn;\nMapPrototype.withMutations = withMutations;\nMapPrototype.wasAltered = wasAltered;\nMapPrototype.asImmutable = asImmutable;\nMapPrototype['@@transducer/init'] = MapPrototype.asMutable = asMutable;\nMapPrototype['@@transducer/step'] = function (result, arr) {\n  return result.set(arr[0], arr[1]);\n};\nMapPrototype['@@transducer/result'] = function (obj) {\n  return obj.asImmutable();\n};\n\n// #pragma Trie Nodes\n\nvar ArrayMapNode = function ArrayMapNode(ownerID, entries) {\n  this.ownerID = ownerID;\n  this.entries = entries;\n};\n\nArrayMapNode.prototype.get = function get (shift, keyHash, key, notSetValue) {\n  var entries = this.entries;\n  for (var ii = 0, len = entries.length; ii < len; ii++) {\n    if (is(key, entries[ii][0])) {\n      return entries[ii][1];\n    }\n  }\n  return notSetValue;\n};\n\nArrayMapNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  var removed = value === NOT_SET;\n\n  var entries = this.entries;\n  var idx = 0;\n  var len = entries.length;\n  for (; idx < len; idx++) {\n    if (is(key, entries[idx][0])) {\n      break;\n    }\n  }\n  var exists = idx < len;\n\n  if (exists ? entries[idx][1] === value : removed) {\n    return this;\n  }\n\n  SetRef(didAlter);\n  (removed || !exists) && SetRef(didChangeSize);\n\n  if (removed && entries.length === 1) {\n    return; // undefined\n  }\n\n  if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n    return createNodes(ownerID, entries, key, value);\n  }\n\n  var isEditable = ownerID && ownerID === this.ownerID;\n  var newEntries = isEditable ? entries : arrCopy(entries);\n\n  if (exists) {\n    if (removed) {\n      idx === len - 1\n        ? newEntries.pop()\n        : (newEntries[idx] = newEntries.pop());\n    } else {\n      newEntries[idx] = [key, value];\n    }\n  } else {\n    newEntries.push([key, value]);\n  }\n\n  if (isEditable) {\n    this.entries = newEntries;\n    return this;\n  }\n\n  return new ArrayMapNode(ownerID, newEntries);\n};\n\nvar BitmapIndexedNode = function BitmapIndexedNode(ownerID, bitmap, nodes) {\n  this.ownerID = ownerID;\n  this.bitmap = bitmap;\n  this.nodes = nodes;\n};\n\nBitmapIndexedNode.prototype.get = function get (shift, keyHash, key, notSetValue) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n  var bit = 1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK);\n  var bitmap = this.bitmap;\n  return (bitmap & bit) === 0\n    ? notSetValue\n    : this.nodes[popCount(bitmap & (bit - 1))].get(\n        shift + SHIFT,\n        keyHash,\n        key,\n        notSetValue\n      );\n};\n\nBitmapIndexedNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n  var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n  var bit = 1 << keyHashFrag;\n  var bitmap = this.bitmap;\n  var exists = (bitmap & bit) !== 0;\n\n  if (!exists && value === NOT_SET) {\n    return this;\n  }\n\n  var idx = popCount(bitmap & (bit - 1));\n  var nodes = this.nodes;\n  var node = exists ? nodes[idx] : undefined;\n  var newNode = updateNode(\n    node,\n    ownerID,\n    shift + SHIFT,\n    keyHash,\n    key,\n    value,\n    didChangeSize,\n    didAlter\n  );\n\n  if (newNode === node) {\n    return this;\n  }\n\n  if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n    return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n  }\n\n  if (\n    exists &&\n    !newNode &&\n    nodes.length === 2 &&\n    isLeafNode(nodes[idx ^ 1])\n  ) {\n    return nodes[idx ^ 1];\n  }\n\n  if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n    return newNode;\n  }\n\n  var isEditable = ownerID && ownerID === this.ownerID;\n  var newBitmap = exists ? (newNode ? bitmap : bitmap ^ bit) : bitmap | bit;\n  var newNodes = exists\n    ? newNode\n      ? setAt(nodes, idx, newNode, isEditable)\n      : spliceOut(nodes, idx, isEditable)\n    : spliceIn(nodes, idx, newNode, isEditable);\n\n  if (isEditable) {\n    this.bitmap = newBitmap;\n    this.nodes = newNodes;\n    return this;\n  }\n\n  return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n};\n\nvar HashArrayMapNode = function HashArrayMapNode(ownerID, count, nodes) {\n  this.ownerID = ownerID;\n  this.count = count;\n  this.nodes = nodes;\n};\n\nHashArrayMapNode.prototype.get = function get (shift, keyHash, key, notSetValue) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n  var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n  var node = this.nodes[idx];\n  return node\n    ? node.get(shift + SHIFT, keyHash, key, notSetValue)\n    : notSetValue;\n};\n\nHashArrayMapNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n  var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n  var removed = value === NOT_SET;\n  var nodes = this.nodes;\n  var node = nodes[idx];\n\n  if (removed && !node) {\n    return this;\n  }\n\n  var newNode = updateNode(\n    node,\n    ownerID,\n    shift + SHIFT,\n    keyHash,\n    key,\n    value,\n    didChangeSize,\n    didAlter\n  );\n  if (newNode === node) {\n    return this;\n  }\n\n  var newCount = this.count;\n  if (!node) {\n    newCount++;\n  } else if (!newNode) {\n    newCount--;\n    if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n      return packNodes(ownerID, nodes, newCount, idx);\n    }\n  }\n\n  var isEditable = ownerID && ownerID === this.ownerID;\n  var newNodes = setAt(nodes, idx, newNode, isEditable);\n\n  if (isEditable) {\n    this.count = newCount;\n    this.nodes = newNodes;\n    return this;\n  }\n\n  return new HashArrayMapNode(ownerID, newCount, newNodes);\n};\n\nvar HashCollisionNode = function HashCollisionNode(ownerID, keyHash, entries) {\n  this.ownerID = ownerID;\n  this.keyHash = keyHash;\n  this.entries = entries;\n};\n\nHashCollisionNode.prototype.get = function get (shift, keyHash, key, notSetValue) {\n  var entries = this.entries;\n  for (var ii = 0, len = entries.length; ii < len; ii++) {\n    if (is(key, entries[ii][0])) {\n      return entries[ii][1];\n    }\n  }\n  return notSetValue;\n};\n\nHashCollisionNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n\n  var removed = value === NOT_SET;\n\n  if (keyHash !== this.keyHash) {\n    if (removed) {\n      return this;\n    }\n    SetRef(didAlter);\n    SetRef(didChangeSize);\n    return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n  }\n\n  var entries = this.entries;\n  var idx = 0;\n  var len = entries.length;\n  for (; idx < len; idx++) {\n    if (is(key, entries[idx][0])) {\n      break;\n    }\n  }\n  var exists = idx < len;\n\n  if (exists ? entries[idx][1] === value : removed) {\n    return this;\n  }\n\n  SetRef(didAlter);\n  (removed || !exists) && SetRef(didChangeSize);\n\n  if (removed && len === 2) {\n    return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n  }\n\n  var isEditable = ownerID && ownerID === this.ownerID;\n  var newEntries = isEditable ? entries : arrCopy(entries);\n\n  if (exists) {\n    if (removed) {\n      idx === len - 1\n        ? newEntries.pop()\n        : (newEntries[idx] = newEntries.pop());\n    } else {\n      newEntries[idx] = [key, value];\n    }\n  } else {\n    newEntries.push([key, value]);\n  }\n\n  if (isEditable) {\n    this.entries = newEntries;\n    return this;\n  }\n\n  return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n};\n\nvar ValueNode = function ValueNode(ownerID, keyHash, entry) {\n  this.ownerID = ownerID;\n  this.keyHash = keyHash;\n  this.entry = entry;\n};\n\nValueNode.prototype.get = function get (shift, keyHash, key, notSetValue) {\n  return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n};\n\nValueNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  var removed = value === NOT_SET;\n  var keyMatch = is(key, this.entry[0]);\n  if (keyMatch ? value === this.entry[1] : removed) {\n    return this;\n  }\n\n  SetRef(didAlter);\n\n  if (removed) {\n    SetRef(didChangeSize);\n    return; // undefined\n  }\n\n  if (keyMatch) {\n    if (ownerID && ownerID === this.ownerID) {\n      this.entry[1] = value;\n      return this;\n    }\n    return new ValueNode(ownerID, this.keyHash, [key, value]);\n  }\n\n  SetRef(didChangeSize);\n  return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n};\n\n// #pragma Iterators\n\nArrayMapNode.prototype.iterate = HashCollisionNode.prototype.iterate =\n  function (fn, reverse) {\n    var entries = this.entries;\n    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n        return false;\n      }\n    }\n  };\n\nBitmapIndexedNode.prototype.iterate = HashArrayMapNode.prototype.iterate =\n  function (fn, reverse) {\n    var nodes = this.nodes;\n    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n      var node = nodes[reverse ? maxIndex - ii : ii];\n      if (node && node.iterate(fn, reverse) === false) {\n        return false;\n      }\n    }\n  };\n\n// eslint-disable-next-line no-unused-vars\nValueNode.prototype.iterate = function (fn, reverse) {\n  return fn(this.entry);\n};\n\nvar MapIterator = /*@__PURE__*/(function (Iterator) {\n  function MapIterator(map, type, reverse) {\n    this._type = type;\n    this._reverse = reverse;\n    this._stack = map._root && mapIteratorFrame(map._root);\n  }\n\n  if ( Iterator ) MapIterator.__proto__ = Iterator;\n  MapIterator.prototype = Object.create( Iterator && Iterator.prototype );\n  MapIterator.prototype.constructor = MapIterator;\n\n  MapIterator.prototype.next = function next () {\n    var type = this._type;\n    var stack = this._stack;\n    while (stack) {\n      var node = stack.node;\n      var index = stack.index++;\n      var maxIndex = (void 0);\n      if (node.entry) {\n        if (index === 0) {\n          return mapIteratorValue(type, node.entry);\n        }\n      } else if (node.entries) {\n        maxIndex = node.entries.length - 1;\n        if (index <= maxIndex) {\n          return mapIteratorValue(\n            type,\n            node.entries[this._reverse ? maxIndex - index : index]\n          );\n        }\n      } else {\n        maxIndex = node.nodes.length - 1;\n        if (index <= maxIndex) {\n          var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n          if (subNode) {\n            if (subNode.entry) {\n              return mapIteratorValue(type, subNode.entry);\n            }\n            stack = this._stack = mapIteratorFrame(subNode, stack);\n          }\n          continue;\n        }\n      }\n      stack = this._stack = this._stack.__prev;\n    }\n    return iteratorDone();\n  };\n\n  return MapIterator;\n}(Iterator));\n\nfunction mapIteratorValue(type, entry) {\n  return iteratorValue(type, entry[0], entry[1]);\n}\n\nfunction mapIteratorFrame(node, prev) {\n  return {\n    node: node,\n    index: 0,\n    __prev: prev,\n  };\n}\n\nfunction makeMap(size, root, ownerID, hash) {\n  var map = Object.create(MapPrototype);\n  map.size = size;\n  map._root = root;\n  map.__ownerID = ownerID;\n  map.__hash = hash;\n  map.__altered = false;\n  return map;\n}\n\nvar EMPTY_MAP;\nfunction emptyMap() {\n  return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n}\n\nfunction updateMap(map, k, v) {\n  var newRoot;\n  var newSize;\n  if (!map._root) {\n    if (v === NOT_SET) {\n      return map;\n    }\n    newSize = 1;\n    newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n  } else {\n    var didChangeSize = MakeRef();\n    var didAlter = MakeRef();\n    newRoot = updateNode(\n      map._root,\n      map.__ownerID,\n      0,\n      undefined,\n      k,\n      v,\n      didChangeSize,\n      didAlter\n    );\n    if (!didAlter.value) {\n      return map;\n    }\n    newSize = map.size + (didChangeSize.value ? (v === NOT_SET ? -1 : 1) : 0);\n  }\n  if (map.__ownerID) {\n    map.size = newSize;\n    map._root = newRoot;\n    map.__hash = undefined;\n    map.__altered = true;\n    return map;\n  }\n  return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n}\n\nfunction updateNode(\n  node,\n  ownerID,\n  shift,\n  keyHash,\n  key,\n  value,\n  didChangeSize,\n  didAlter\n) {\n  if (!node) {\n    if (value === NOT_SET) {\n      return node;\n    }\n    SetRef(didAlter);\n    SetRef(didChangeSize);\n    return new ValueNode(ownerID, keyHash, [key, value]);\n  }\n  return node.update(\n    ownerID,\n    shift,\n    keyHash,\n    key,\n    value,\n    didChangeSize,\n    didAlter\n  );\n}\n\nfunction isLeafNode(node) {\n  return (\n    node.constructor === ValueNode || node.constructor === HashCollisionNode\n  );\n}\n\nfunction mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n  if (node.keyHash === keyHash) {\n    return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n  }\n\n  var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n  var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\n  var newNode;\n  var nodes =\n    idx1 === idx2\n      ? [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)]\n      : ((newNode = new ValueNode(ownerID, keyHash, entry)),\n        idx1 < idx2 ? [node, newNode] : [newNode, node]);\n\n  return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);\n}\n\nfunction createNodes(ownerID, entries, key, value) {\n  if (!ownerID) {\n    ownerID = new OwnerID();\n  }\n  var node = new ValueNode(ownerID, hash(key), [key, value]);\n  for (var ii = 0; ii < entries.length; ii++) {\n    var entry = entries[ii];\n    node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n  }\n  return node;\n}\n\nfunction packNodes(ownerID, nodes, count, excluding) {\n  var bitmap = 0;\n  var packedII = 0;\n  var packedNodes = new Array(count);\n  for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n    var node = nodes[ii];\n    if (node !== undefined && ii !== excluding) {\n      bitmap |= bit;\n      packedNodes[packedII++] = node;\n    }\n  }\n  return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n}\n\nfunction expandNodes(ownerID, nodes, bitmap, including, node) {\n  var count = 0;\n  var expandedNodes = new Array(SIZE);\n  for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n    expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n  }\n  expandedNodes[including] = node;\n  return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n}\n\nfunction popCount(x) {\n  x -= (x >> 1) & 0x55555555;\n  x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n  x = (x + (x >> 4)) & 0x0f0f0f0f;\n  x += x >> 8;\n  x += x >> 16;\n  return x & 0x7f;\n}\n\nfunction setAt(array, idx, val, canEdit) {\n  var newArray = canEdit ? array : arrCopy(array);\n  newArray[idx] = val;\n  return newArray;\n}\n\nfunction spliceIn(array, idx, val, canEdit) {\n  var newLen = array.length + 1;\n  if (canEdit && idx + 1 === newLen) {\n    array[idx] = val;\n    return array;\n  }\n  var newArray = new Array(newLen);\n  var after = 0;\n  for (var ii = 0; ii < newLen; ii++) {\n    if (ii === idx) {\n      newArray[ii] = val;\n      after = -1;\n    } else {\n      newArray[ii] = array[ii + after];\n    }\n  }\n  return newArray;\n}\n\nfunction spliceOut(array, idx, canEdit) {\n  var newLen = array.length - 1;\n  if (canEdit && idx === newLen) {\n    array.pop();\n    return array;\n  }\n  var newArray = new Array(newLen);\n  var after = 0;\n  for (var ii = 0; ii < newLen; ii++) {\n    if (ii === idx) {\n      after = 1;\n    }\n    newArray[ii] = array[ii + after];\n  }\n  return newArray;\n}\n\nvar MAX_ARRAY_MAP_SIZE = SIZE / 4;\nvar MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\nvar MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n\nvar IS_LIST_SYMBOL = '@@__IMMUTABLE_LIST__@@';\n\nfunction isList(maybeList) {\n  return Boolean(maybeList && maybeList[IS_LIST_SYMBOL]);\n}\n\nvar List = /*@__PURE__*/(function (IndexedCollection) {\n  function List(value) {\n    var empty = emptyList();\n    if (value === null || value === undefined) {\n      return empty;\n    }\n    if (isList(value)) {\n      return value;\n    }\n    var iter = IndexedCollection(value);\n    var size = iter.size;\n    if (size === 0) {\n      return empty;\n    }\n    assertNotInfinite(size);\n    if (size > 0 && size < SIZE) {\n      return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n    }\n    return empty.withMutations(function (list) {\n      list.setSize(size);\n      iter.forEach(function (v, i) { return list.set(i, v); });\n    });\n  }\n\n  if ( IndexedCollection ) List.__proto__ = IndexedCollection;\n  List.prototype = Object.create( IndexedCollection && IndexedCollection.prototype );\n  List.prototype.constructor = List;\n\n  List.of = function of (/*...values*/) {\n    return this(arguments);\n  };\n\n  List.prototype.toString = function toString () {\n    return this.__toString('List [', ']');\n  };\n\n  // @pragma Access\n\n  List.prototype.get = function get (index, notSetValue) {\n    index = wrapIndex(this, index);\n    if (index >= 0 && index < this.size) {\n      index += this._origin;\n      var node = listNodeFor(this, index);\n      return node && node.array[index & MASK];\n    }\n    return notSetValue;\n  };\n\n  // @pragma Modification\n\n  List.prototype.set = function set (index, value) {\n    return updateList(this, index, value);\n  };\n\n  List.prototype.remove = function remove (index) {\n    return !this.has(index)\n      ? this\n      : index === 0\n      ? this.shift()\n      : index === this.size - 1\n      ? this.pop()\n      : this.splice(index, 1);\n  };\n\n  List.prototype.insert = function insert (index, value) {\n    return this.splice(index, 0, value);\n  };\n\n  List.prototype.clear = function clear () {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = this._origin = this._capacity = 0;\n      this._level = SHIFT;\n      this._root = this._tail = this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return emptyList();\n  };\n\n  List.prototype.push = function push (/*...values*/) {\n    var values = arguments;\n    var oldSize = this.size;\n    return this.withMutations(function (list) {\n      setListBounds(list, 0, oldSize + values.length);\n      for (var ii = 0; ii < values.length; ii++) {\n        list.set(oldSize + ii, values[ii]);\n      }\n    });\n  };\n\n  List.prototype.pop = function pop () {\n    return setListBounds(this, 0, -1);\n  };\n\n  List.prototype.unshift = function unshift (/*...values*/) {\n    var values = arguments;\n    return this.withMutations(function (list) {\n      setListBounds(list, -values.length);\n      for (var ii = 0; ii < values.length; ii++) {\n        list.set(ii, values[ii]);\n      }\n    });\n  };\n\n  List.prototype.shift = function shift () {\n    return setListBounds(this, 1);\n  };\n\n  // @pragma Composition\n\n  List.prototype.concat = function concat (/*...collections*/) {\n    var arguments$1 = arguments;\n\n    var seqs = [];\n    for (var i = 0; i < arguments.length; i++) {\n      var argument = arguments$1[i];\n      var seq = IndexedCollection(\n        typeof argument !== 'string' && hasIterator(argument)\n          ? argument\n          : [argument]\n      );\n      if (seq.size !== 0) {\n        seqs.push(seq);\n      }\n    }\n    if (seqs.length === 0) {\n      return this;\n    }\n    if (this.size === 0 && !this.__ownerID && seqs.length === 1) {\n      return this.constructor(seqs[0]);\n    }\n    return this.withMutations(function (list) {\n      seqs.forEach(function (seq) { return seq.forEach(function (value) { return list.push(value); }); });\n    });\n  };\n\n  List.prototype.setSize = function setSize (size) {\n    return setListBounds(this, 0, size);\n  };\n\n  List.prototype.map = function map (mapper, context) {\n    var this$1$1 = this;\n\n    return this.withMutations(function (list) {\n      for (var i = 0; i < this$1$1.size; i++) {\n        list.set(i, mapper.call(context, list.get(i), i, this$1$1));\n      }\n    });\n  };\n\n  // @pragma Iteration\n\n  List.prototype.slice = function slice (begin, end) {\n    var size = this.size;\n    if (wholeSlice(begin, end, size)) {\n      return this;\n    }\n    return setListBounds(\n      this,\n      resolveBegin(begin, size),\n      resolveEnd(end, size)\n    );\n  };\n\n  List.prototype.__iterator = function __iterator (type, reverse) {\n    var index = reverse ? this.size : 0;\n    var values = iterateList(this, reverse);\n    return new Iterator(function () {\n      var value = values();\n      return value === DONE\n        ? iteratorDone()\n        : iteratorValue(type, reverse ? --index : index++, value);\n    });\n  };\n\n  List.prototype.__iterate = function __iterate (fn, reverse) {\n    var index = reverse ? this.size : 0;\n    var values = iterateList(this, reverse);\n    var value;\n    while ((value = values()) !== DONE) {\n      if (fn(value, reverse ? --index : index++, this) === false) {\n        break;\n      }\n    }\n    return index;\n  };\n\n  List.prototype.__ensureOwner = function __ensureOwner (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    if (!ownerID) {\n      if (this.size === 0) {\n        return emptyList();\n      }\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n    return makeList(\n      this._origin,\n      this._capacity,\n      this._level,\n      this._root,\n      this._tail,\n      ownerID,\n      this.__hash\n    );\n  };\n\n  return List;\n}(IndexedCollection));\n\nList.isList = isList;\n\nvar ListPrototype = List.prototype;\nListPrototype[IS_LIST_SYMBOL] = true;\nListPrototype[DELETE] = ListPrototype.remove;\nListPrototype.merge = ListPrototype.concat;\nListPrototype.setIn = setIn;\nListPrototype.deleteIn = ListPrototype.removeIn = deleteIn;\nListPrototype.update = update;\nListPrototype.updateIn = updateIn;\nListPrototype.mergeIn = mergeIn;\nListPrototype.mergeDeepIn = mergeDeepIn;\nListPrototype.withMutations = withMutations;\nListPrototype.wasAltered = wasAltered;\nListPrototype.asImmutable = asImmutable;\nListPrototype['@@transducer/init'] = ListPrototype.asMutable = asMutable;\nListPrototype['@@transducer/step'] = function (result, arr) {\n  return result.push(arr);\n};\nListPrototype['@@transducer/result'] = function (obj) {\n  return obj.asImmutable();\n};\n\nvar VNode = function VNode(array, ownerID) {\n  this.array = array;\n  this.ownerID = ownerID;\n};\n\n// TODO: seems like these methods are very similar\n\nVNode.prototype.removeBefore = function removeBefore (ownerID, level, index) {\n  if (index === level ? 1 << level : this.array.length === 0) {\n    return this;\n  }\n  var originIndex = (index >>> level) & MASK;\n  if (originIndex >= this.array.length) {\n    return new VNode([], ownerID);\n  }\n  var removingFirst = originIndex === 0;\n  var newChild;\n  if (level > 0) {\n    var oldChild = this.array[originIndex];\n    newChild =\n      oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n    if (newChild === oldChild && removingFirst) {\n      return this;\n    }\n  }\n  if (removingFirst && !newChild) {\n    return this;\n  }\n  var editable = editableVNode(this, ownerID);\n  if (!removingFirst) {\n    for (var ii = 0; ii < originIndex; ii++) {\n      editable.array[ii] = undefined;\n    }\n  }\n  if (newChild) {\n    editable.array[originIndex] = newChild;\n  }\n  return editable;\n};\n\nVNode.prototype.removeAfter = function removeAfter (ownerID, level, index) {\n  if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n    return this;\n  }\n  var sizeIndex = ((index - 1) >>> level) & MASK;\n  if (sizeIndex >= this.array.length) {\n    return this;\n  }\n\n  var newChild;\n  if (level > 0) {\n    var oldChild = this.array[sizeIndex];\n    newChild =\n      oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n    if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n      return this;\n    }\n  }\n\n  var editable = editableVNode(this, ownerID);\n  editable.array.splice(sizeIndex + 1);\n  if (newChild) {\n    editable.array[sizeIndex] = newChild;\n  }\n  return editable;\n};\n\nvar DONE = {};\n\nfunction iterateList(list, reverse) {\n  var left = list._origin;\n  var right = list._capacity;\n  var tailPos = getTailOffset(right);\n  var tail = list._tail;\n\n  return iterateNodeOrLeaf(list._root, list._level, 0);\n\n  function iterateNodeOrLeaf(node, level, offset) {\n    return level === 0\n      ? iterateLeaf(node, offset)\n      : iterateNode(node, level, offset);\n  }\n\n  function iterateLeaf(node, offset) {\n    var array = offset === tailPos ? tail && tail.array : node && node.array;\n    var from = offset > left ? 0 : left - offset;\n    var to = right - offset;\n    if (to > SIZE) {\n      to = SIZE;\n    }\n    return function () {\n      if (from === to) {\n        return DONE;\n      }\n      var idx = reverse ? --to : from++;\n      return array && array[idx];\n    };\n  }\n\n  function iterateNode(node, level, offset) {\n    var values;\n    var array = node && node.array;\n    var from = offset > left ? 0 : (left - offset) >> level;\n    var to = ((right - offset) >> level) + 1;\n    if (to > SIZE) {\n      to = SIZE;\n    }\n    return function () {\n      while (true) {\n        if (values) {\n          var value = values();\n          if (value !== DONE) {\n            return value;\n          }\n          values = null;\n        }\n        if (from === to) {\n          return DONE;\n        }\n        var idx = reverse ? --to : from++;\n        values = iterateNodeOrLeaf(\n          array && array[idx],\n          level - SHIFT,\n          offset + (idx << level)\n        );\n      }\n    };\n  }\n}\n\nfunction makeList(origin, capacity, level, root, tail, ownerID, hash) {\n  var list = Object.create(ListPrototype);\n  list.size = capacity - origin;\n  list._origin = origin;\n  list._capacity = capacity;\n  list._level = level;\n  list._root = root;\n  list._tail = tail;\n  list.__ownerID = ownerID;\n  list.__hash = hash;\n  list.__altered = false;\n  return list;\n}\n\nvar EMPTY_LIST;\nfunction emptyList() {\n  return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n}\n\nfunction updateList(list, index, value) {\n  index = wrapIndex(list, index);\n\n  if (index !== index) {\n    return list;\n  }\n\n  if (index >= list.size || index < 0) {\n    return list.withMutations(function (list) {\n      index < 0\n        ? setListBounds(list, index).set(0, value)\n        : setListBounds(list, 0, index + 1).set(index, value);\n    });\n  }\n\n  index += list._origin;\n\n  var newTail = list._tail;\n  var newRoot = list._root;\n  var didAlter = MakeRef();\n  if (index >= getTailOffset(list._capacity)) {\n    newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n  } else {\n    newRoot = updateVNode(\n      newRoot,\n      list.__ownerID,\n      list._level,\n      index,\n      value,\n      didAlter\n    );\n  }\n\n  if (!didAlter.value) {\n    return list;\n  }\n\n  if (list.__ownerID) {\n    list._root = newRoot;\n    list._tail = newTail;\n    list.__hash = undefined;\n    list.__altered = true;\n    return list;\n  }\n  return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n}\n\nfunction updateVNode(node, ownerID, level, index, value, didAlter) {\n  var idx = (index >>> level) & MASK;\n  var nodeHas = node && idx < node.array.length;\n  if (!nodeHas && value === undefined) {\n    return node;\n  }\n\n  var newNode;\n\n  if (level > 0) {\n    var lowerNode = node && node.array[idx];\n    var newLowerNode = updateVNode(\n      lowerNode,\n      ownerID,\n      level - SHIFT,\n      index,\n      value,\n      didAlter\n    );\n    if (newLowerNode === lowerNode) {\n      return node;\n    }\n    newNode = editableVNode(node, ownerID);\n    newNode.array[idx] = newLowerNode;\n    return newNode;\n  }\n\n  if (nodeHas && node.array[idx] === value) {\n    return node;\n  }\n\n  if (didAlter) {\n    SetRef(didAlter);\n  }\n\n  newNode = editableVNode(node, ownerID);\n  if (value === undefined && idx === newNode.array.length - 1) {\n    newNode.array.pop();\n  } else {\n    newNode.array[idx] = value;\n  }\n  return newNode;\n}\n\nfunction editableVNode(node, ownerID) {\n  if (ownerID && node && ownerID === node.ownerID) {\n    return node;\n  }\n  return new VNode(node ? node.array.slice() : [], ownerID);\n}\n\nfunction listNodeFor(list, rawIndex) {\n  if (rawIndex >= getTailOffset(list._capacity)) {\n    return list._tail;\n  }\n  if (rawIndex < 1 << (list._level + SHIFT)) {\n    var node = list._root;\n    var level = list._level;\n    while (node && level > 0) {\n      node = node.array[(rawIndex >>> level) & MASK];\n      level -= SHIFT;\n    }\n    return node;\n  }\n}\n\nfunction setListBounds(list, begin, end) {\n  // Sanitize begin & end using this shorthand for ToInt32(argument)\n  // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n  if (begin !== undefined) {\n    begin |= 0;\n  }\n  if (end !== undefined) {\n    end |= 0;\n  }\n  var owner = list.__ownerID || new OwnerID();\n  var oldOrigin = list._origin;\n  var oldCapacity = list._capacity;\n  var newOrigin = oldOrigin + begin;\n  var newCapacity =\n    end === undefined\n      ? oldCapacity\n      : end < 0\n      ? oldCapacity + end\n      : oldOrigin + end;\n  if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n    return list;\n  }\n\n  // If it's going to end after it starts, it's empty.\n  if (newOrigin >= newCapacity) {\n    return list.clear();\n  }\n\n  var newLevel = list._level;\n  var newRoot = list._root;\n\n  // New origin might need creating a higher root.\n  var offsetShift = 0;\n  while (newOrigin + offsetShift < 0) {\n    newRoot = new VNode(\n      newRoot && newRoot.array.length ? [undefined, newRoot] : [],\n      owner\n    );\n    newLevel += SHIFT;\n    offsetShift += 1 << newLevel;\n  }\n  if (offsetShift) {\n    newOrigin += offsetShift;\n    oldOrigin += offsetShift;\n    newCapacity += offsetShift;\n    oldCapacity += offsetShift;\n  }\n\n  var oldTailOffset = getTailOffset(oldCapacity);\n  var newTailOffset = getTailOffset(newCapacity);\n\n  // New size might need creating a higher root.\n  while (newTailOffset >= 1 << (newLevel + SHIFT)) {\n    newRoot = new VNode(\n      newRoot && newRoot.array.length ? [newRoot] : [],\n      owner\n    );\n    newLevel += SHIFT;\n  }\n\n  // Locate or create the new tail.\n  var oldTail = list._tail;\n  var newTail =\n    newTailOffset < oldTailOffset\n      ? listNodeFor(list, newCapacity - 1)\n      : newTailOffset > oldTailOffset\n      ? new VNode([], owner)\n      : oldTail;\n\n  // Merge Tail into tree.\n  if (\n    oldTail &&\n    newTailOffset > oldTailOffset &&\n    newOrigin < oldCapacity &&\n    oldTail.array.length\n  ) {\n    newRoot = editableVNode(newRoot, owner);\n    var node = newRoot;\n    for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n      var idx = (oldTailOffset >>> level) & MASK;\n      node = node.array[idx] = editableVNode(node.array[idx], owner);\n    }\n    node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;\n  }\n\n  // If the size has been reduced, there's a chance the tail needs to be trimmed.\n  if (newCapacity < oldCapacity) {\n    newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n  }\n\n  // If the new origin is within the tail, then we do not need a root.\n  if (newOrigin >= newTailOffset) {\n    newOrigin -= newTailOffset;\n    newCapacity -= newTailOffset;\n    newLevel = SHIFT;\n    newRoot = null;\n    newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n\n    // Otherwise, if the root has been trimmed, garbage collect.\n  } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n    offsetShift = 0;\n\n    // Identify the new top root node of the subtree of the old root.\n    while (newRoot) {\n      var beginIndex = (newOrigin >>> newLevel) & MASK;\n      if ((beginIndex !== newTailOffset >>> newLevel) & MASK) {\n        break;\n      }\n      if (beginIndex) {\n        offsetShift += (1 << newLevel) * beginIndex;\n      }\n      newLevel -= SHIFT;\n      newRoot = newRoot.array[beginIndex];\n    }\n\n    // Trim the new sides of the new root.\n    if (newRoot && newOrigin > oldOrigin) {\n      newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n    }\n    if (newRoot && newTailOffset < oldTailOffset) {\n      newRoot = newRoot.removeAfter(\n        owner,\n        newLevel,\n        newTailOffset - offsetShift\n      );\n    }\n    if (offsetShift) {\n      newOrigin -= offsetShift;\n      newCapacity -= offsetShift;\n    }\n  }\n\n  if (list.__ownerID) {\n    list.size = newCapacity - newOrigin;\n    list._origin = newOrigin;\n    list._capacity = newCapacity;\n    list._level = newLevel;\n    list._root = newRoot;\n    list._tail = newTail;\n    list.__hash = undefined;\n    list.__altered = true;\n    return list;\n  }\n  return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n}\n\nfunction getTailOffset(size) {\n  return size < SIZE ? 0 : ((size - 1) >>> SHIFT) << SHIFT;\n}\n\nvar OrderedMap = /*@__PURE__*/(function (Map) {\n  function OrderedMap(value) {\n    return value === null || value === undefined\n      ? emptyOrderedMap()\n      : isOrderedMap(value)\n      ? value\n      : emptyOrderedMap().withMutations(function (map) {\n          var iter = KeyedCollection(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function (v, k) { return map.set(k, v); });\n        });\n  }\n\n  if ( Map ) OrderedMap.__proto__ = Map;\n  OrderedMap.prototype = Object.create( Map && Map.prototype );\n  OrderedMap.prototype.constructor = OrderedMap;\n\n  OrderedMap.of = function of (/*...values*/) {\n    return this(arguments);\n  };\n\n  OrderedMap.prototype.toString = function toString () {\n    return this.__toString('OrderedMap {', '}');\n  };\n\n  // @pragma Access\n\n  OrderedMap.prototype.get = function get (k, notSetValue) {\n    var index = this._map.get(k);\n    return index !== undefined ? this._list.get(index)[1] : notSetValue;\n  };\n\n  // @pragma Modification\n\n  OrderedMap.prototype.clear = function clear () {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = 0;\n      this._map.clear();\n      this._list.clear();\n      this.__altered = true;\n      return this;\n    }\n    return emptyOrderedMap();\n  };\n\n  OrderedMap.prototype.set = function set (k, v) {\n    return updateOrderedMap(this, k, v);\n  };\n\n  OrderedMap.prototype.remove = function remove (k) {\n    return updateOrderedMap(this, k, NOT_SET);\n  };\n\n  OrderedMap.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1$1 = this;\n\n    return this._list.__iterate(\n      function (entry) { return entry && fn(entry[1], entry[0], this$1$1); },\n      reverse\n    );\n  };\n\n  OrderedMap.prototype.__iterator = function __iterator (type, reverse) {\n    return this._list.fromEntrySeq().__iterator(type, reverse);\n  };\n\n  OrderedMap.prototype.__ensureOwner = function __ensureOwner (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    var newMap = this._map.__ensureOwner(ownerID);\n    var newList = this._list.__ensureOwner(ownerID);\n    if (!ownerID) {\n      if (this.size === 0) {\n        return emptyOrderedMap();\n      }\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      this._map = newMap;\n      this._list = newList;\n      return this;\n    }\n    return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n  };\n\n  return OrderedMap;\n}(Map));\n\nOrderedMap.isOrderedMap = isOrderedMap;\n\nOrderedMap.prototype[IS_ORDERED_SYMBOL] = true;\nOrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\nfunction makeOrderedMap(map, list, ownerID, hash) {\n  var omap = Object.create(OrderedMap.prototype);\n  omap.size = map ? map.size : 0;\n  omap._map = map;\n  omap._list = list;\n  omap.__ownerID = ownerID;\n  omap.__hash = hash;\n  omap.__altered = false;\n  return omap;\n}\n\nvar EMPTY_ORDERED_MAP;\nfunction emptyOrderedMap() {\n  return (\n    EMPTY_ORDERED_MAP ||\n    (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()))\n  );\n}\n\nfunction updateOrderedMap(omap, k, v) {\n  var map = omap._map;\n  var list = omap._list;\n  var i = map.get(k);\n  var has = i !== undefined;\n  var newMap;\n  var newList;\n  if (v === NOT_SET) {\n    // removed\n    if (!has) {\n      return omap;\n    }\n    if (list.size >= SIZE && list.size >= map.size * 2) {\n      newList = list.filter(function (entry, idx) { return entry !== undefined && i !== idx; });\n      newMap = newList\n        .toKeyedSeq()\n        .map(function (entry) { return entry[0]; })\n        .flip()\n        .toMap();\n      if (omap.__ownerID) {\n        newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n      }\n    } else {\n      newMap = map.remove(k);\n      newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n    }\n  } else if (has) {\n    if (v === list.get(i)[1]) {\n      return omap;\n    }\n    newMap = map;\n    newList = list.set(i, [k, v]);\n  } else {\n    newMap = map.set(k, list.size);\n    newList = list.set(list.size, [k, v]);\n  }\n  if (omap.__ownerID) {\n    omap.size = newMap.size;\n    omap._map = newMap;\n    omap._list = newList;\n    omap.__hash = undefined;\n    omap.__altered = true;\n    return omap;\n  }\n  return makeOrderedMap(newMap, newList);\n}\n\nvar IS_STACK_SYMBOL = '@@__IMMUTABLE_STACK__@@';\n\nfunction isStack(maybeStack) {\n  return Boolean(maybeStack && maybeStack[IS_STACK_SYMBOL]);\n}\n\nvar Stack = /*@__PURE__*/(function (IndexedCollection) {\n  function Stack(value) {\n    return value === null || value === undefined\n      ? emptyStack()\n      : isStack(value)\n      ? value\n      : emptyStack().pushAll(value);\n  }\n\n  if ( IndexedCollection ) Stack.__proto__ = IndexedCollection;\n  Stack.prototype = Object.create( IndexedCollection && IndexedCollection.prototype );\n  Stack.prototype.constructor = Stack;\n\n  Stack.of = function of (/*...values*/) {\n    return this(arguments);\n  };\n\n  Stack.prototype.toString = function toString () {\n    return this.__toString('Stack [', ']');\n  };\n\n  // @pragma Access\n\n  Stack.prototype.get = function get (index, notSetValue) {\n    var head = this._head;\n    index = wrapIndex(this, index);\n    while (head && index--) {\n      head = head.next;\n    }\n    return head ? head.value : notSetValue;\n  };\n\n  Stack.prototype.peek = function peek () {\n    return this._head && this._head.value;\n  };\n\n  // @pragma Modification\n\n  Stack.prototype.push = function push (/*...values*/) {\n    var arguments$1 = arguments;\n\n    if (arguments.length === 0) {\n      return this;\n    }\n    var newSize = this.size + arguments.length;\n    var head = this._head;\n    for (var ii = arguments.length - 1; ii >= 0; ii--) {\n      head = {\n        value: arguments$1[ii],\n        next: head,\n      };\n    }\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  };\n\n  Stack.prototype.pushAll = function pushAll (iter) {\n    iter = IndexedCollection(iter);\n    if (iter.size === 0) {\n      return this;\n    }\n    if (this.size === 0 && isStack(iter)) {\n      return iter;\n    }\n    assertNotInfinite(iter.size);\n    var newSize = this.size;\n    var head = this._head;\n    iter.__iterate(function (value) {\n      newSize++;\n      head = {\n        value: value,\n        next: head,\n      };\n    }, /* reverse */ true);\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  };\n\n  Stack.prototype.pop = function pop () {\n    return this.slice(1);\n  };\n\n  Stack.prototype.clear = function clear () {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = 0;\n      this._head = undefined;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return emptyStack();\n  };\n\n  Stack.prototype.slice = function slice (begin, end) {\n    if (wholeSlice(begin, end, this.size)) {\n      return this;\n    }\n    var resolvedBegin = resolveBegin(begin, this.size);\n    var resolvedEnd = resolveEnd(end, this.size);\n    if (resolvedEnd !== this.size) {\n      // super.slice(begin, end);\n      return IndexedCollection.prototype.slice.call(this, begin, end);\n    }\n    var newSize = this.size - resolvedBegin;\n    var head = this._head;\n    while (resolvedBegin--) {\n      head = head.next;\n    }\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  };\n\n  // @pragma Mutability\n\n  Stack.prototype.__ensureOwner = function __ensureOwner (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    if (!ownerID) {\n      if (this.size === 0) {\n        return emptyStack();\n      }\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n    return makeStack(this.size, this._head, ownerID, this.__hash);\n  };\n\n  // @pragma Iteration\n\n  Stack.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1$1 = this;\n\n    if (reverse) {\n      return new ArraySeq(this.toArray()).__iterate(\n        function (v, k) { return fn(v, k, this$1$1); },\n        reverse\n      );\n    }\n    var iterations = 0;\n    var node = this._head;\n    while (node) {\n      if (fn(node.value, iterations++, this) === false) {\n        break;\n      }\n      node = node.next;\n    }\n    return iterations;\n  };\n\n  Stack.prototype.__iterator = function __iterator (type, reverse) {\n    if (reverse) {\n      return new ArraySeq(this.toArray()).__iterator(type, reverse);\n    }\n    var iterations = 0;\n    var node = this._head;\n    return new Iterator(function () {\n      if (node) {\n        var value = node.value;\n        node = node.next;\n        return iteratorValue(type, iterations++, value);\n      }\n      return iteratorDone();\n    });\n  };\n\n  return Stack;\n}(IndexedCollection));\n\nStack.isStack = isStack;\n\nvar StackPrototype = Stack.prototype;\nStackPrototype[IS_STACK_SYMBOL] = true;\nStackPrototype.shift = StackPrototype.pop;\nStackPrototype.unshift = StackPrototype.push;\nStackPrototype.unshiftAll = StackPrototype.pushAll;\nStackPrototype.withMutations = withMutations;\nStackPrototype.wasAltered = wasAltered;\nStackPrototype.asImmutable = asImmutable;\nStackPrototype['@@transducer/init'] = StackPrototype.asMutable = asMutable;\nStackPrototype['@@transducer/step'] = function (result, arr) {\n  return result.unshift(arr);\n};\nStackPrototype['@@transducer/result'] = function (obj) {\n  return obj.asImmutable();\n};\n\nfunction makeStack(size, head, ownerID, hash) {\n  var map = Object.create(StackPrototype);\n  map.size = size;\n  map._head = head;\n  map.__ownerID = ownerID;\n  map.__hash = hash;\n  map.__altered = false;\n  return map;\n}\n\nvar EMPTY_STACK;\nfunction emptyStack() {\n  return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n}\n\nvar IS_SET_SYMBOL = '@@__IMMUTABLE_SET__@@';\n\nfunction isSet(maybeSet) {\n  return Boolean(maybeSet && maybeSet[IS_SET_SYMBOL]);\n}\n\nfunction isOrderedSet(maybeOrderedSet) {\n  return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n}\n\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (\n    !isCollection(b) ||\n    (a.size !== undefined && b.size !== undefined && a.size !== b.size) ||\n    (a.__hash !== undefined &&\n      b.__hash !== undefined &&\n      a.__hash !== b.__hash) ||\n    isKeyed(a) !== isKeyed(b) ||\n    isIndexed(a) !== isIndexed(b) ||\n    isOrdered(a) !== isOrdered(b)\n  ) {\n    return false;\n  }\n\n  if (a.size === 0 && b.size === 0) {\n    return true;\n  }\n\n  var notAssociative = !isAssociative(a);\n\n  if (isOrdered(a)) {\n    var entries = a.entries();\n    return (\n      b.every(function (v, k) {\n        var entry = entries.next().value;\n        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n      }) && entries.next().done\n    );\n  }\n\n  var flipped = false;\n\n  if (a.size === undefined) {\n    if (b.size === undefined) {\n      if (typeof a.cacheResult === 'function') {\n        a.cacheResult();\n      }\n    } else {\n      flipped = true;\n      var _ = a;\n      a = b;\n      b = _;\n    }\n  }\n\n  var allEqual = true;\n  var bSize = b.__iterate(function (v, k) {\n    if (\n      notAssociative\n        ? !a.has(v)\n        : flipped\n        ? !is(v, a.get(k, NOT_SET))\n        : !is(a.get(k, NOT_SET), v)\n    ) {\n      allEqual = false;\n      return false;\n    }\n  });\n\n  return allEqual && a.size === bSize;\n}\n\nfunction mixin(ctor, methods) {\n  var keyCopier = function (key) {\n    ctor.prototype[key] = methods[key];\n  };\n  Object.keys(methods).forEach(keyCopier);\n  Object.getOwnPropertySymbols &&\n    Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n  return ctor;\n}\n\nfunction toJS(value) {\n  if (!value || typeof value !== 'object') {\n    return value;\n  }\n  if (!isCollection(value)) {\n    if (!isDataStructure(value)) {\n      return value;\n    }\n    value = Seq(value);\n  }\n  if (isKeyed(value)) {\n    var result$1 = {};\n    value.__iterate(function (v, k) {\n      result$1[k] = toJS(v);\n    });\n    return result$1;\n  }\n  var result = [];\n  value.__iterate(function (v) {\n    result.push(toJS(v));\n  });\n  return result;\n}\n\nvar Set = /*@__PURE__*/(function (SetCollection) {\n  function Set(value) {\n    return value === null || value === undefined\n      ? emptySet()\n      : isSet(value) && !isOrdered(value)\n      ? value\n      : emptySet().withMutations(function (set) {\n          var iter = SetCollection(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function (v) { return set.add(v); });\n        });\n  }\n\n  if ( SetCollection ) Set.__proto__ = SetCollection;\n  Set.prototype = Object.create( SetCollection && SetCollection.prototype );\n  Set.prototype.constructor = Set;\n\n  Set.of = function of (/*...values*/) {\n    return this(arguments);\n  };\n\n  Set.fromKeys = function fromKeys (value) {\n    return this(KeyedCollection(value).keySeq());\n  };\n\n  Set.intersect = function intersect (sets) {\n    sets = Collection(sets).toArray();\n    return sets.length\n      ? SetPrototype.intersect.apply(Set(sets.pop()), sets)\n      : emptySet();\n  };\n\n  Set.union = function union (sets) {\n    sets = Collection(sets).toArray();\n    return sets.length\n      ? SetPrototype.union.apply(Set(sets.pop()), sets)\n      : emptySet();\n  };\n\n  Set.prototype.toString = function toString () {\n    return this.__toString('Set {', '}');\n  };\n\n  // @pragma Access\n\n  Set.prototype.has = function has (value) {\n    return this._map.has(value);\n  };\n\n  // @pragma Modification\n\n  Set.prototype.add = function add (value) {\n    return updateSet(this, this._map.set(value, value));\n  };\n\n  Set.prototype.remove = function remove (value) {\n    return updateSet(this, this._map.remove(value));\n  };\n\n  Set.prototype.clear = function clear () {\n    return updateSet(this, this._map.clear());\n  };\n\n  // @pragma Composition\n\n  Set.prototype.map = function map (mapper, context) {\n    var this$1$1 = this;\n\n    // keep track if the set is altered by the map function\n    var didChanges = false;\n\n    var newMap = updateSet(\n      this,\n      this._map.mapEntries(function (ref) {\n        var v = ref[1];\n\n        var mapped = mapper.call(context, v, v, this$1$1);\n\n        if (mapped !== v) {\n          didChanges = true;\n        }\n\n        return [mapped, mapped];\n      }, context)\n    );\n\n    return didChanges ? newMap : this;\n  };\n\n  Set.prototype.union = function union () {\n    var iters = [], len = arguments.length;\n    while ( len-- ) iters[ len ] = arguments[ len ];\n\n    iters = iters.filter(function (x) { return x.size !== 0; });\n    if (iters.length === 0) {\n      return this;\n    }\n    if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n      return this.constructor(iters[0]);\n    }\n    return this.withMutations(function (set) {\n      for (var ii = 0; ii < iters.length; ii++) {\n        SetCollection(iters[ii]).forEach(function (value) { return set.add(value); });\n      }\n    });\n  };\n\n  Set.prototype.intersect = function intersect () {\n    var iters = [], len = arguments.length;\n    while ( len-- ) iters[ len ] = arguments[ len ];\n\n    if (iters.length === 0) {\n      return this;\n    }\n    iters = iters.map(function (iter) { return SetCollection(iter); });\n    var toRemove = [];\n    this.forEach(function (value) {\n      if (!iters.every(function (iter) { return iter.includes(value); })) {\n        toRemove.push(value);\n      }\n    });\n    return this.withMutations(function (set) {\n      toRemove.forEach(function (value) {\n        set.remove(value);\n      });\n    });\n  };\n\n  Set.prototype.subtract = function subtract () {\n    var iters = [], len = arguments.length;\n    while ( len-- ) iters[ len ] = arguments[ len ];\n\n    if (iters.length === 0) {\n      return this;\n    }\n    iters = iters.map(function (iter) { return SetCollection(iter); });\n    var toRemove = [];\n    this.forEach(function (value) {\n      if (iters.some(function (iter) { return iter.includes(value); })) {\n        toRemove.push(value);\n      }\n    });\n    return this.withMutations(function (set) {\n      toRemove.forEach(function (value) {\n        set.remove(value);\n      });\n    });\n  };\n\n  Set.prototype.sort = function sort (comparator) {\n    // Late binding\n    return OrderedSet(sortFactory(this, comparator));\n  };\n\n  Set.prototype.sortBy = function sortBy (mapper, comparator) {\n    // Late binding\n    return OrderedSet(sortFactory(this, comparator, mapper));\n  };\n\n  Set.prototype.wasAltered = function wasAltered () {\n    return this._map.wasAltered();\n  };\n\n  Set.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1$1 = this;\n\n    return this._map.__iterate(function (k) { return fn(k, k, this$1$1); }, reverse);\n  };\n\n  Set.prototype.__iterator = function __iterator (type, reverse) {\n    return this._map.__iterator(type, reverse);\n  };\n\n  Set.prototype.__ensureOwner = function __ensureOwner (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    var newMap = this._map.__ensureOwner(ownerID);\n    if (!ownerID) {\n      if (this.size === 0) {\n        return this.__empty();\n      }\n      this.__ownerID = ownerID;\n      this._map = newMap;\n      return this;\n    }\n    return this.__make(newMap, ownerID);\n  };\n\n  return Set;\n}(SetCollection));\n\nSet.isSet = isSet;\n\nvar SetPrototype = Set.prototype;\nSetPrototype[IS_SET_SYMBOL] = true;\nSetPrototype[DELETE] = SetPrototype.remove;\nSetPrototype.merge = SetPrototype.concat = SetPrototype.union;\nSetPrototype.withMutations = withMutations;\nSetPrototype.asImmutable = asImmutable;\nSetPrototype['@@transducer/init'] = SetPrototype.asMutable = asMutable;\nSetPrototype['@@transducer/step'] = function (result, arr) {\n  return result.add(arr);\n};\nSetPrototype['@@transducer/result'] = function (obj) {\n  return obj.asImmutable();\n};\n\nSetPrototype.__empty = emptySet;\nSetPrototype.__make = makeSet;\n\nfunction updateSet(set, newMap) {\n  if (set.__ownerID) {\n    set.size = newMap.size;\n    set._map = newMap;\n    return set;\n  }\n  return newMap === set._map\n    ? set\n    : newMap.size === 0\n    ? set.__empty()\n    : set.__make(newMap);\n}\n\nfunction makeSet(map, ownerID) {\n  var set = Object.create(SetPrototype);\n  set.size = map ? map.size : 0;\n  set._map = map;\n  set.__ownerID = ownerID;\n  return set;\n}\n\nvar EMPTY_SET;\nfunction emptySet() {\n  return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n}\n\n/**\n * Returns a lazy seq of nums from start (inclusive) to end\n * (exclusive), by step, where start defaults to 0, step to 1, and end to\n * infinity. When start is equal to end, returns empty list.\n */\nvar Range = /*@__PURE__*/(function (IndexedSeq) {\n  function Range(start, end, step) {\n    if (!(this instanceof Range)) {\n      return new Range(start, end, step);\n    }\n    invariant(step !== 0, 'Cannot step a Range by 0');\n    start = start || 0;\n    if (end === undefined) {\n      end = Infinity;\n    }\n    step = step === undefined ? 1 : Math.abs(step);\n    if (end < start) {\n      step = -step;\n    }\n    this._start = start;\n    this._end = end;\n    this._step = step;\n    this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n    if (this.size === 0) {\n      if (EMPTY_RANGE) {\n        return EMPTY_RANGE;\n      }\n      EMPTY_RANGE = this;\n    }\n  }\n\n  if ( IndexedSeq ) Range.__proto__ = IndexedSeq;\n  Range.prototype = Object.create( IndexedSeq && IndexedSeq.prototype );\n  Range.prototype.constructor = Range;\n\n  Range.prototype.toString = function toString () {\n    if (this.size === 0) {\n      return 'Range []';\n    }\n    return (\n      'Range [ ' +\n      this._start +\n      '...' +\n      this._end +\n      (this._step !== 1 ? ' by ' + this._step : '') +\n      ' ]'\n    );\n  };\n\n  Range.prototype.get = function get (index, notSetValue) {\n    return this.has(index)\n      ? this._start + wrapIndex(this, index) * this._step\n      : notSetValue;\n  };\n\n  Range.prototype.includes = function includes (searchValue) {\n    var possibleIndex = (searchValue - this._start) / this._step;\n    return (\n      possibleIndex >= 0 &&\n      possibleIndex < this.size &&\n      possibleIndex === Math.floor(possibleIndex)\n    );\n  };\n\n  Range.prototype.slice = function slice (begin, end) {\n    if (wholeSlice(begin, end, this.size)) {\n      return this;\n    }\n    begin = resolveBegin(begin, this.size);\n    end = resolveEnd(end, this.size);\n    if (end <= begin) {\n      return new Range(0, 0);\n    }\n    return new Range(\n      this.get(begin, this._end),\n      this.get(end, this._end),\n      this._step\n    );\n  };\n\n  Range.prototype.indexOf = function indexOf (searchValue) {\n    var offsetValue = searchValue - this._start;\n    if (offsetValue % this._step === 0) {\n      var index = offsetValue / this._step;\n      if (index >= 0 && index < this.size) {\n        return index;\n      }\n    }\n    return -1;\n  };\n\n  Range.prototype.lastIndexOf = function lastIndexOf (searchValue) {\n    return this.indexOf(searchValue);\n  };\n\n  Range.prototype.__iterate = function __iterate (fn, reverse) {\n    var size = this.size;\n    var step = this._step;\n    var value = reverse ? this._start + (size - 1) * step : this._start;\n    var i = 0;\n    while (i !== size) {\n      if (fn(value, reverse ? size - ++i : i++, this) === false) {\n        break;\n      }\n      value += reverse ? -step : step;\n    }\n    return i;\n  };\n\n  Range.prototype.__iterator = function __iterator (type, reverse) {\n    var size = this.size;\n    var step = this._step;\n    var value = reverse ? this._start + (size - 1) * step : this._start;\n    var i = 0;\n    return new Iterator(function () {\n      if (i === size) {\n        return iteratorDone();\n      }\n      var v = value;\n      value += reverse ? -step : step;\n      return iteratorValue(type, reverse ? size - ++i : i++, v);\n    });\n  };\n\n  Range.prototype.equals = function equals (other) {\n    return other instanceof Range\n      ? this._start === other._start &&\n          this._end === other._end &&\n          this._step === other._step\n      : deepEqual(this, other);\n  };\n\n  return Range;\n}(IndexedSeq));\n\nvar EMPTY_RANGE;\n\nfunction getIn$1(collection, searchKeyPath, notSetValue) {\n  var keyPath = coerceKeyPath(searchKeyPath);\n  var i = 0;\n  while (i !== keyPath.length) {\n    collection = get(collection, keyPath[i++], NOT_SET);\n    if (collection === NOT_SET) {\n      return notSetValue;\n    }\n  }\n  return collection;\n}\n\nfunction getIn(searchKeyPath, notSetValue) {\n  return getIn$1(this, searchKeyPath, notSetValue);\n}\n\nfunction hasIn$1(collection, keyPath) {\n  return getIn$1(collection, keyPath, NOT_SET) !== NOT_SET;\n}\n\nfunction hasIn(searchKeyPath) {\n  return hasIn$1(this, searchKeyPath);\n}\n\nfunction toObject() {\n  assertNotInfinite(this.size);\n  var object = {};\n  this.__iterate(function (v, k) {\n    object[k] = v;\n  });\n  return object;\n}\n\n// Note: all of these methods are deprecated.\nCollection.isIterable = isCollection;\nCollection.isKeyed = isKeyed;\nCollection.isIndexed = isIndexed;\nCollection.isAssociative = isAssociative;\nCollection.isOrdered = isOrdered;\n\nCollection.Iterator = Iterator;\n\nmixin(Collection, {\n  // ### Conversion to other types\n\n  toArray: function toArray() {\n    assertNotInfinite(this.size);\n    var array = new Array(this.size || 0);\n    var useTuples = isKeyed(this);\n    var i = 0;\n    this.__iterate(function (v, k) {\n      // Keyed collections produce an array of tuples.\n      array[i++] = useTuples ? [k, v] : v;\n    });\n    return array;\n  },\n\n  toIndexedSeq: function toIndexedSeq() {\n    return new ToIndexedSequence(this);\n  },\n\n  toJS: function toJS$1() {\n    return toJS(this);\n  },\n\n  toKeyedSeq: function toKeyedSeq() {\n    return new ToKeyedSequence(this, true);\n  },\n\n  toMap: function toMap() {\n    // Use Late Binding here to solve the circular dependency.\n    return Map(this.toKeyedSeq());\n  },\n\n  toObject: toObject,\n\n  toOrderedMap: function toOrderedMap() {\n    // Use Late Binding here to solve the circular dependency.\n    return OrderedMap(this.toKeyedSeq());\n  },\n\n  toOrderedSet: function toOrderedSet() {\n    // Use Late Binding here to solve the circular dependency.\n    return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n  },\n\n  toSet: function toSet() {\n    // Use Late Binding here to solve the circular dependency.\n    return Set(isKeyed(this) ? this.valueSeq() : this);\n  },\n\n  toSetSeq: function toSetSeq() {\n    return new ToSetSequence(this);\n  },\n\n  toSeq: function toSeq() {\n    return isIndexed(this)\n      ? this.toIndexedSeq()\n      : isKeyed(this)\n      ? this.toKeyedSeq()\n      : this.toSetSeq();\n  },\n\n  toStack: function toStack() {\n    // Use Late Binding here to solve the circular dependency.\n    return Stack(isKeyed(this) ? this.valueSeq() : this);\n  },\n\n  toList: function toList() {\n    // Use Late Binding here to solve the circular dependency.\n    return List(isKeyed(this) ? this.valueSeq() : this);\n  },\n\n  // ### Common JavaScript methods and properties\n\n  toString: function toString() {\n    return '[Collection]';\n  },\n\n  __toString: function __toString(head, tail) {\n    if (this.size === 0) {\n      return head + tail;\n    }\n    return (\n      head +\n      ' ' +\n      this.toSeq().map(this.__toStringMapper).join(', ') +\n      ' ' +\n      tail\n    );\n  },\n\n  // ### ES6 Collection methods (ES6 Array and Map)\n\n  concat: function concat() {\n    var values = [], len = arguments.length;\n    while ( len-- ) values[ len ] = arguments[ len ];\n\n    return reify(this, concatFactory(this, values));\n  },\n\n  includes: function includes(searchValue) {\n    return this.some(function (value) { return is(value, searchValue); });\n  },\n\n  entries: function entries() {\n    return this.__iterator(ITERATE_ENTRIES);\n  },\n\n  every: function every(predicate, context) {\n    assertNotInfinite(this.size);\n    var returnValue = true;\n    this.__iterate(function (v, k, c) {\n      if (!predicate.call(context, v, k, c)) {\n        returnValue = false;\n        return false;\n      }\n    });\n    return returnValue;\n  },\n\n  filter: function filter(predicate, context) {\n    return reify(this, filterFactory(this, predicate, context, true));\n  },\n\n  find: function find(predicate, context, notSetValue) {\n    var entry = this.findEntry(predicate, context);\n    return entry ? entry[1] : notSetValue;\n  },\n\n  forEach: function forEach(sideEffect, context) {\n    assertNotInfinite(this.size);\n    return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n  },\n\n  join: function join(separator) {\n    assertNotInfinite(this.size);\n    separator = separator !== undefined ? '' + separator : ',';\n    var joined = '';\n    var isFirst = true;\n    this.__iterate(function (v) {\n      isFirst ? (isFirst = false) : (joined += separator);\n      joined += v !== null && v !== undefined ? v.toString() : '';\n    });\n    return joined;\n  },\n\n  keys: function keys() {\n    return this.__iterator(ITERATE_KEYS);\n  },\n\n  map: function map(mapper, context) {\n    return reify(this, mapFactory(this, mapper, context));\n  },\n\n  reduce: function reduce$1(reducer, initialReduction, context) {\n    return reduce(\n      this,\n      reducer,\n      initialReduction,\n      context,\n      arguments.length < 2,\n      false\n    );\n  },\n\n  reduceRight: function reduceRight(reducer, initialReduction, context) {\n    return reduce(\n      this,\n      reducer,\n      initialReduction,\n      context,\n      arguments.length < 2,\n      true\n    );\n  },\n\n  reverse: function reverse() {\n    return reify(this, reverseFactory(this, true));\n  },\n\n  slice: function slice(begin, end) {\n    return reify(this, sliceFactory(this, begin, end, true));\n  },\n\n  some: function some(predicate, context) {\n    return !this.every(not(predicate), context);\n  },\n\n  sort: function sort(comparator) {\n    return reify(this, sortFactory(this, comparator));\n  },\n\n  values: function values() {\n    return this.__iterator(ITERATE_VALUES);\n  },\n\n  // ### More sequential methods\n\n  butLast: function butLast() {\n    return this.slice(0, -1);\n  },\n\n  isEmpty: function isEmpty() {\n    return this.size !== undefined ? this.size === 0 : !this.some(function () { return true; });\n  },\n\n  count: function count(predicate, context) {\n    return ensureSize(\n      predicate ? this.toSeq().filter(predicate, context) : this\n    );\n  },\n\n  countBy: function countBy(grouper, context) {\n    return countByFactory(this, grouper, context);\n  },\n\n  equals: function equals(other) {\n    return deepEqual(this, other);\n  },\n\n  entrySeq: function entrySeq() {\n    var collection = this;\n    if (collection._cache) {\n      // We cache as an entries array, so we can just return the cache!\n      return new ArraySeq(collection._cache);\n    }\n    var entriesSequence = collection.toSeq().map(entryMapper).toIndexedSeq();\n    entriesSequence.fromEntrySeq = function () { return collection.toSeq(); };\n    return entriesSequence;\n  },\n\n  filterNot: function filterNot(predicate, context) {\n    return this.filter(not(predicate), context);\n  },\n\n  findEntry: function findEntry(predicate, context, notSetValue) {\n    var found = notSetValue;\n    this.__iterate(function (v, k, c) {\n      if (predicate.call(context, v, k, c)) {\n        found = [k, v];\n        return false;\n      }\n    });\n    return found;\n  },\n\n  findKey: function findKey(predicate, context) {\n    var entry = this.findEntry(predicate, context);\n    return entry && entry[0];\n  },\n\n  findLast: function findLast(predicate, context, notSetValue) {\n    return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n  },\n\n  findLastEntry: function findLastEntry(predicate, context, notSetValue) {\n    return this.toKeyedSeq()\n      .reverse()\n      .findEntry(predicate, context, notSetValue);\n  },\n\n  findLastKey: function findLastKey(predicate, context) {\n    return this.toKeyedSeq().reverse().findKey(predicate, context);\n  },\n\n  first: function first(notSetValue) {\n    return this.find(returnTrue, null, notSetValue);\n  },\n\n  flatMap: function flatMap(mapper, context) {\n    return reify(this, flatMapFactory(this, mapper, context));\n  },\n\n  flatten: function flatten(depth) {\n    return reify(this, flattenFactory(this, depth, true));\n  },\n\n  fromEntrySeq: function fromEntrySeq() {\n    return new FromEntriesSequence(this);\n  },\n\n  get: function get(searchKey, notSetValue) {\n    return this.find(function (_, key) { return is(key, searchKey); }, undefined, notSetValue);\n  },\n\n  getIn: getIn,\n\n  groupBy: function groupBy(grouper, context) {\n    return groupByFactory(this, grouper, context);\n  },\n\n  has: function has(searchKey) {\n    return this.get(searchKey, NOT_SET) !== NOT_SET;\n  },\n\n  hasIn: hasIn,\n\n  isSubset: function isSubset(iter) {\n    iter = typeof iter.includes === 'function' ? iter : Collection(iter);\n    return this.every(function (value) { return iter.includes(value); });\n  },\n\n  isSuperset: function isSuperset(iter) {\n    iter = typeof iter.isSubset === 'function' ? iter : Collection(iter);\n    return iter.isSubset(this);\n  },\n\n  keyOf: function keyOf(searchValue) {\n    return this.findKey(function (value) { return is(value, searchValue); });\n  },\n\n  keySeq: function keySeq() {\n    return this.toSeq().map(keyMapper).toIndexedSeq();\n  },\n\n  last: function last(notSetValue) {\n    return this.toSeq().reverse().first(notSetValue);\n  },\n\n  lastKeyOf: function lastKeyOf(searchValue) {\n    return this.toKeyedSeq().reverse().keyOf(searchValue);\n  },\n\n  max: function max(comparator) {\n    return maxFactory(this, comparator);\n  },\n\n  maxBy: function maxBy(mapper, comparator) {\n    return maxFactory(this, comparator, mapper);\n  },\n\n  min: function min(comparator) {\n    return maxFactory(\n      this,\n      comparator ? neg(comparator) : defaultNegComparator\n    );\n  },\n\n  minBy: function minBy(mapper, comparator) {\n    return maxFactory(\n      this,\n      comparator ? neg(comparator) : defaultNegComparator,\n      mapper\n    );\n  },\n\n  rest: function rest() {\n    return this.slice(1);\n  },\n\n  skip: function skip(amount) {\n    return amount === 0 ? this : this.slice(Math.max(0, amount));\n  },\n\n  skipLast: function skipLast(amount) {\n    return amount === 0 ? this : this.slice(0, -Math.max(0, amount));\n  },\n\n  skipWhile: function skipWhile(predicate, context) {\n    return reify(this, skipWhileFactory(this, predicate, context, true));\n  },\n\n  skipUntil: function skipUntil(predicate, context) {\n    return this.skipWhile(not(predicate), context);\n  },\n\n  sortBy: function sortBy(mapper, comparator) {\n    return reify(this, sortFactory(this, comparator, mapper));\n  },\n\n  take: function take(amount) {\n    return this.slice(0, Math.max(0, amount));\n  },\n\n  takeLast: function takeLast(amount) {\n    return this.slice(-Math.max(0, amount));\n  },\n\n  takeWhile: function takeWhile(predicate, context) {\n    return reify(this, takeWhileFactory(this, predicate, context));\n  },\n\n  takeUntil: function takeUntil(predicate, context) {\n    return this.takeWhile(not(predicate), context);\n  },\n\n  update: function update(fn) {\n    return fn(this);\n  },\n\n  valueSeq: function valueSeq() {\n    return this.toIndexedSeq();\n  },\n\n  // ### Hashable Object\n\n  hashCode: function hashCode() {\n    return this.__hash || (this.__hash = hashCollection(this));\n  },\n\n  // ### Internal\n\n  // abstract __iterate(fn, reverse)\n\n  // abstract __iterator(type, reverse)\n});\n\nvar CollectionPrototype = Collection.prototype;\nCollectionPrototype[IS_COLLECTION_SYMBOL] = true;\nCollectionPrototype[ITERATOR_SYMBOL] = CollectionPrototype.values;\nCollectionPrototype.toJSON = CollectionPrototype.toArray;\nCollectionPrototype.__toStringMapper = quoteString;\nCollectionPrototype.inspect = CollectionPrototype.toSource = function () {\n  return this.toString();\n};\nCollectionPrototype.chain = CollectionPrototype.flatMap;\nCollectionPrototype.contains = CollectionPrototype.includes;\n\nmixin(KeyedCollection, {\n  // ### More sequential methods\n\n  flip: function flip() {\n    return reify(this, flipFactory(this));\n  },\n\n  mapEntries: function mapEntries(mapper, context) {\n    var this$1$1 = this;\n\n    var iterations = 0;\n    return reify(\n      this,\n      this.toSeq()\n        .map(function (v, k) { return mapper.call(context, [k, v], iterations++, this$1$1); })\n        .fromEntrySeq()\n    );\n  },\n\n  mapKeys: function mapKeys(mapper, context) {\n    var this$1$1 = this;\n\n    return reify(\n      this,\n      this.toSeq()\n        .flip()\n        .map(function (k, v) { return mapper.call(context, k, v, this$1$1); })\n        .flip()\n    );\n  },\n});\n\nvar KeyedCollectionPrototype = KeyedCollection.prototype;\nKeyedCollectionPrototype[IS_KEYED_SYMBOL] = true;\nKeyedCollectionPrototype[ITERATOR_SYMBOL] = CollectionPrototype.entries;\nKeyedCollectionPrototype.toJSON = toObject;\nKeyedCollectionPrototype.__toStringMapper = function (v, k) { return quoteString(k) + ': ' + quoteString(v); };\n\nmixin(IndexedCollection, {\n  // ### Conversion to other types\n\n  toKeyedSeq: function toKeyedSeq() {\n    return new ToKeyedSequence(this, false);\n  },\n\n  // ### ES6 Collection methods (ES6 Array and Map)\n\n  filter: function filter(predicate, context) {\n    return reify(this, filterFactory(this, predicate, context, false));\n  },\n\n  findIndex: function findIndex(predicate, context) {\n    var entry = this.findEntry(predicate, context);\n    return entry ? entry[0] : -1;\n  },\n\n  indexOf: function indexOf(searchValue) {\n    var key = this.keyOf(searchValue);\n    return key === undefined ? -1 : key;\n  },\n\n  lastIndexOf: function lastIndexOf(searchValue) {\n    var key = this.lastKeyOf(searchValue);\n    return key === undefined ? -1 : key;\n  },\n\n  reverse: function reverse() {\n    return reify(this, reverseFactory(this, false));\n  },\n\n  slice: function slice(begin, end) {\n    return reify(this, sliceFactory(this, begin, end, false));\n  },\n\n  splice: function splice(index, removeNum /*, ...values*/) {\n    var numArgs = arguments.length;\n    removeNum = Math.max(removeNum || 0, 0);\n    if (numArgs === 0 || (numArgs === 2 && !removeNum)) {\n      return this;\n    }\n    // If index is negative, it should resolve relative to the size of the\n    // collection. However size may be expensive to compute if not cached, so\n    // only call count() if the number is in fact negative.\n    index = resolveBegin(index, index < 0 ? this.count() : this.size);\n    var spliced = this.slice(0, index);\n    return reify(\n      this,\n      numArgs === 1\n        ? spliced\n        : spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))\n    );\n  },\n\n  // ### More collection methods\n\n  findLastIndex: function findLastIndex(predicate, context) {\n    var entry = this.findLastEntry(predicate, context);\n    return entry ? entry[0] : -1;\n  },\n\n  first: function first(notSetValue) {\n    return this.get(0, notSetValue);\n  },\n\n  flatten: function flatten(depth) {\n    return reify(this, flattenFactory(this, depth, false));\n  },\n\n  get: function get(index, notSetValue) {\n    index = wrapIndex(this, index);\n    return index < 0 ||\n      this.size === Infinity ||\n      (this.size !== undefined && index > this.size)\n      ? notSetValue\n      : this.find(function (_, key) { return key === index; }, undefined, notSetValue);\n  },\n\n  has: function has(index) {\n    index = wrapIndex(this, index);\n    return (\n      index >= 0 &&\n      (this.size !== undefined\n        ? this.size === Infinity || index < this.size\n        : this.indexOf(index) !== -1)\n    );\n  },\n\n  interpose: function interpose(separator) {\n    return reify(this, interposeFactory(this, separator));\n  },\n\n  interleave: function interleave(/*...collections*/) {\n    var collections = [this].concat(arrCopy(arguments));\n    var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, collections);\n    var interleaved = zipped.flatten(true);\n    if (zipped.size) {\n      interleaved.size = zipped.size * collections.length;\n    }\n    return reify(this, interleaved);\n  },\n\n  keySeq: function keySeq() {\n    return Range(0, this.size);\n  },\n\n  last: function last(notSetValue) {\n    return this.get(-1, notSetValue);\n  },\n\n  skipWhile: function skipWhile(predicate, context) {\n    return reify(this, skipWhileFactory(this, predicate, context, false));\n  },\n\n  zip: function zip(/*, ...collections */) {\n    var collections = [this].concat(arrCopy(arguments));\n    return reify(this, zipWithFactory(this, defaultZipper, collections));\n  },\n\n  zipAll: function zipAll(/*, ...collections */) {\n    var collections = [this].concat(arrCopy(arguments));\n    return reify(this, zipWithFactory(this, defaultZipper, collections, true));\n  },\n\n  zipWith: function zipWith(zipper /*, ...collections */) {\n    var collections = arrCopy(arguments);\n    collections[0] = this;\n    return reify(this, zipWithFactory(this, zipper, collections));\n  },\n});\n\nvar IndexedCollectionPrototype = IndexedCollection.prototype;\nIndexedCollectionPrototype[IS_INDEXED_SYMBOL] = true;\nIndexedCollectionPrototype[IS_ORDERED_SYMBOL] = true;\n\nmixin(SetCollection, {\n  // ### ES6 Collection methods (ES6 Array and Map)\n\n  get: function get(value, notSetValue) {\n    return this.has(value) ? value : notSetValue;\n  },\n\n  includes: function includes(value) {\n    return this.has(value);\n  },\n\n  // ### More sequential methods\n\n  keySeq: function keySeq() {\n    return this.valueSeq();\n  },\n});\n\nvar SetCollectionPrototype = SetCollection.prototype;\nSetCollectionPrototype.has = CollectionPrototype.includes;\nSetCollectionPrototype.contains = SetCollectionPrototype.includes;\nSetCollectionPrototype.keys = SetCollectionPrototype.values;\n\n// Mixin subclasses\n\nmixin(KeyedSeq, KeyedCollectionPrototype);\nmixin(IndexedSeq, IndexedCollectionPrototype);\nmixin(SetSeq, SetCollectionPrototype);\n\n// #pragma Helper functions\n\nfunction reduce(collection, reducer, reduction, context, useFirst, reverse) {\n  assertNotInfinite(collection.size);\n  collection.__iterate(function (v, k, c) {\n    if (useFirst) {\n      useFirst = false;\n      reduction = v;\n    } else {\n      reduction = reducer.call(context, reduction, v, k, c);\n    }\n  }, reverse);\n  return reduction;\n}\n\nfunction keyMapper(v, k) {\n  return k;\n}\n\nfunction entryMapper(v, k) {\n  return [k, v];\n}\n\nfunction not(predicate) {\n  return function () {\n    return !predicate.apply(this, arguments);\n  };\n}\n\nfunction neg(predicate) {\n  return function () {\n    return -predicate.apply(this, arguments);\n  };\n}\n\nfunction defaultZipper() {\n  return arrCopy(arguments);\n}\n\nfunction defaultNegComparator(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\nfunction hashCollection(collection) {\n  if (collection.size === Infinity) {\n    return 0;\n  }\n  var ordered = isOrdered(collection);\n  var keyed = isKeyed(collection);\n  var h = ordered ? 1 : 0;\n  var size = collection.__iterate(\n    keyed\n      ? ordered\n        ? function (v, k) {\n            h = (31 * h + hashMerge(hash(v), hash(k))) | 0;\n          }\n        : function (v, k) {\n            h = (h + hashMerge(hash(v), hash(k))) | 0;\n          }\n      : ordered\n      ? function (v) {\n          h = (31 * h + hash(v)) | 0;\n        }\n      : function (v) {\n          h = (h + hash(v)) | 0;\n        }\n  );\n  return murmurHashOfSize(size, h);\n}\n\nfunction murmurHashOfSize(size, h) {\n  h = imul(h, 0xcc9e2d51);\n  h = imul((h << 15) | (h >>> -15), 0x1b873593);\n  h = imul((h << 13) | (h >>> -13), 5);\n  h = ((h + 0xe6546b64) | 0) ^ size;\n  h = imul(h ^ (h >>> 16), 0x85ebca6b);\n  h = imul(h ^ (h >>> 13), 0xc2b2ae35);\n  h = smi(h ^ (h >>> 16));\n  return h;\n}\n\nfunction hashMerge(a, b) {\n  return (a ^ (b + 0x9e3779b9 + (a << 6) + (a >> 2))) | 0; // int\n}\n\nvar OrderedSet = /*@__PURE__*/(function (Set) {\n  function OrderedSet(value) {\n    return value === null || value === undefined\n      ? emptyOrderedSet()\n      : isOrderedSet(value)\n      ? value\n      : emptyOrderedSet().withMutations(function (set) {\n          var iter = SetCollection(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function (v) { return set.add(v); });\n        });\n  }\n\n  if ( Set ) OrderedSet.__proto__ = Set;\n  OrderedSet.prototype = Object.create( Set && Set.prototype );\n  OrderedSet.prototype.constructor = OrderedSet;\n\n  OrderedSet.of = function of (/*...values*/) {\n    return this(arguments);\n  };\n\n  OrderedSet.fromKeys = function fromKeys (value) {\n    return this(KeyedCollection(value).keySeq());\n  };\n\n  OrderedSet.prototype.toString = function toString () {\n    return this.__toString('OrderedSet {', '}');\n  };\n\n  return OrderedSet;\n}(Set));\n\nOrderedSet.isOrderedSet = isOrderedSet;\n\nvar OrderedSetPrototype = OrderedSet.prototype;\nOrderedSetPrototype[IS_ORDERED_SYMBOL] = true;\nOrderedSetPrototype.zip = IndexedCollectionPrototype.zip;\nOrderedSetPrototype.zipWith = IndexedCollectionPrototype.zipWith;\nOrderedSetPrototype.zipAll = IndexedCollectionPrototype.zipAll;\n\nOrderedSetPrototype.__empty = emptyOrderedSet;\nOrderedSetPrototype.__make = makeOrderedSet;\n\nfunction makeOrderedSet(map, ownerID) {\n  var set = Object.create(OrderedSetPrototype);\n  set.size = map ? map.size : 0;\n  set._map = map;\n  set.__ownerID = ownerID;\n  return set;\n}\n\nvar EMPTY_ORDERED_SET;\nfunction emptyOrderedSet() {\n  return (\n    EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()))\n  );\n}\n\nfunction throwOnInvalidDefaultValues(defaultValues) {\n  if (isRecord(defaultValues)) {\n    throw new Error(\n      'Can not call `Record` with an immutable Record as default values. Use a plain javascript object instead.'\n    );\n  }\n\n  if (isImmutable(defaultValues)) {\n    throw new Error(\n      'Can not call `Record` with an immutable Collection as default values. Use a plain javascript object instead.'\n    );\n  }\n\n  if (defaultValues === null || typeof defaultValues !== 'object') {\n    throw new Error(\n      'Can not call `Record` with a non-object as default values. Use a plain javascript object instead.'\n    );\n  }\n}\n\nvar Record = function Record(defaultValues, name) {\n  var hasInitialized;\n\n  throwOnInvalidDefaultValues(defaultValues);\n\n  var RecordType = function Record(values) {\n    var this$1$1 = this;\n\n    if (values instanceof RecordType) {\n      return values;\n    }\n    if (!(this instanceof RecordType)) {\n      return new RecordType(values);\n    }\n    if (!hasInitialized) {\n      hasInitialized = true;\n      var keys = Object.keys(defaultValues);\n      var indices = (RecordTypePrototype._indices = {});\n      // Deprecated: left to attempt not to break any external code which\n      // relies on a ._name property existing on record instances.\n      // Use Record.getDescriptiveName() instead\n      RecordTypePrototype._name = name;\n      RecordTypePrototype._keys = keys;\n      RecordTypePrototype._defaultValues = defaultValues;\n      for (var i = 0; i < keys.length; i++) {\n        var propName = keys[i];\n        indices[propName] = i;\n        if (RecordTypePrototype[propName]) {\n          /* eslint-disable no-console */\n          typeof console === 'object' &&\n            console.warn &&\n            console.warn(\n              'Cannot define ' +\n                recordName(this) +\n                ' with property \"' +\n                propName +\n                '\" since that property name is part of the Record API.'\n            );\n          /* eslint-enable no-console */\n        } else {\n          setProp(RecordTypePrototype, propName);\n        }\n      }\n    }\n    this.__ownerID = undefined;\n    this._values = List().withMutations(function (l) {\n      l.setSize(this$1$1._keys.length);\n      KeyedCollection(values).forEach(function (v, k) {\n        l.set(this$1$1._indices[k], v === this$1$1._defaultValues[k] ? undefined : v);\n      });\n    });\n    return this;\n  };\n\n  var RecordTypePrototype = (RecordType.prototype =\n    Object.create(RecordPrototype));\n  RecordTypePrototype.constructor = RecordType;\n\n  if (name) {\n    RecordType.displayName = name;\n  }\n\n  return RecordType;\n};\n\nRecord.prototype.toString = function toString () {\n  var str = recordName(this) + ' { ';\n  var keys = this._keys;\n  var k;\n  for (var i = 0, l = keys.length; i !== l; i++) {\n    k = keys[i];\n    str += (i ? ', ' : '') + k + ': ' + quoteString(this.get(k));\n  }\n  return str + ' }';\n};\n\nRecord.prototype.equals = function equals (other) {\n  return (\n    this === other || (other && recordSeq(this).equals(recordSeq(other)))\n  );\n};\n\nRecord.prototype.hashCode = function hashCode () {\n  return recordSeq(this).hashCode();\n};\n\n// @pragma Access\n\nRecord.prototype.has = function has (k) {\n  return this._indices.hasOwnProperty(k);\n};\n\nRecord.prototype.get = function get (k, notSetValue) {\n  if (!this.has(k)) {\n    return notSetValue;\n  }\n  var index = this._indices[k];\n  var value = this._values.get(index);\n  return value === undefined ? this._defaultValues[k] : value;\n};\n\n// @pragma Modification\n\nRecord.prototype.set = function set (k, v) {\n  if (this.has(k)) {\n    var newValues = this._values.set(\n      this._indices[k],\n      v === this._defaultValues[k] ? undefined : v\n    );\n    if (newValues !== this._values && !this.__ownerID) {\n      return makeRecord(this, newValues);\n    }\n  }\n  return this;\n};\n\nRecord.prototype.remove = function remove (k) {\n  return this.set(k);\n};\n\nRecord.prototype.clear = function clear () {\n  var newValues = this._values.clear().setSize(this._keys.length);\n\n  return this.__ownerID ? this : makeRecord(this, newValues);\n};\n\nRecord.prototype.wasAltered = function wasAltered () {\n  return this._values.wasAltered();\n};\n\nRecord.prototype.toSeq = function toSeq () {\n  return recordSeq(this);\n};\n\nRecord.prototype.toJS = function toJS$1 () {\n  return toJS(this);\n};\n\nRecord.prototype.entries = function entries () {\n  return this.__iterator(ITERATE_ENTRIES);\n};\n\nRecord.prototype.__iterator = function __iterator (type, reverse) {\n  return recordSeq(this).__iterator(type, reverse);\n};\n\nRecord.prototype.__iterate = function __iterate (fn, reverse) {\n  return recordSeq(this).__iterate(fn, reverse);\n};\n\nRecord.prototype.__ensureOwner = function __ensureOwner (ownerID) {\n  if (ownerID === this.__ownerID) {\n    return this;\n  }\n  var newValues = this._values.__ensureOwner(ownerID);\n  if (!ownerID) {\n    this.__ownerID = ownerID;\n    this._values = newValues;\n    return this;\n  }\n  return makeRecord(this, newValues, ownerID);\n};\n\nRecord.isRecord = isRecord;\nRecord.getDescriptiveName = recordName;\nvar RecordPrototype = Record.prototype;\nRecordPrototype[IS_RECORD_SYMBOL] = true;\nRecordPrototype[DELETE] = RecordPrototype.remove;\nRecordPrototype.deleteIn = RecordPrototype.removeIn = deleteIn;\nRecordPrototype.getIn = getIn;\nRecordPrototype.hasIn = CollectionPrototype.hasIn;\nRecordPrototype.merge = merge$1;\nRecordPrototype.mergeWith = mergeWith$1;\nRecordPrototype.mergeIn = mergeIn;\nRecordPrototype.mergeDeep = mergeDeep;\nRecordPrototype.mergeDeepWith = mergeDeepWith;\nRecordPrototype.mergeDeepIn = mergeDeepIn;\nRecordPrototype.setIn = setIn;\nRecordPrototype.update = update;\nRecordPrototype.updateIn = updateIn;\nRecordPrototype.withMutations = withMutations;\nRecordPrototype.asMutable = asMutable;\nRecordPrototype.asImmutable = asImmutable;\nRecordPrototype[ITERATOR_SYMBOL] = RecordPrototype.entries;\nRecordPrototype.toJSON = RecordPrototype.toObject =\n  CollectionPrototype.toObject;\nRecordPrototype.inspect = RecordPrototype.toSource = function () {\n  return this.toString();\n};\n\nfunction makeRecord(likeRecord, values, ownerID) {\n  var record = Object.create(Object.getPrototypeOf(likeRecord));\n  record._values = values;\n  record.__ownerID = ownerID;\n  return record;\n}\n\nfunction recordName(record) {\n  return record.constructor.displayName || record.constructor.name || 'Record';\n}\n\nfunction recordSeq(record) {\n  return keyedSeqFromValue(record._keys.map(function (k) { return [k, record.get(k)]; }));\n}\n\nfunction setProp(prototype, name) {\n  try {\n    Object.defineProperty(prototype, name, {\n      get: function () {\n        return this.get(name);\n      },\n      set: function (value) {\n        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n        this.set(name, value);\n      },\n    });\n  } catch (error) {\n    // Object.defineProperty failed. Probably IE8.\n  }\n}\n\n/**\n * Returns a lazy Seq of `value` repeated `times` times. When `times` is\n * undefined, returns an infinite sequence of `value`.\n */\nvar Repeat = /*@__PURE__*/(function (IndexedSeq) {\n  function Repeat(value, times) {\n    if (!(this instanceof Repeat)) {\n      return new Repeat(value, times);\n    }\n    this._value = value;\n    this.size = times === undefined ? Infinity : Math.max(0, times);\n    if (this.size === 0) {\n      if (EMPTY_REPEAT) {\n        return EMPTY_REPEAT;\n      }\n      EMPTY_REPEAT = this;\n    }\n  }\n\n  if ( IndexedSeq ) Repeat.__proto__ = IndexedSeq;\n  Repeat.prototype = Object.create( IndexedSeq && IndexedSeq.prototype );\n  Repeat.prototype.constructor = Repeat;\n\n  Repeat.prototype.toString = function toString () {\n    if (this.size === 0) {\n      return 'Repeat []';\n    }\n    return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n  };\n\n  Repeat.prototype.get = function get (index, notSetValue) {\n    return this.has(index) ? this._value : notSetValue;\n  };\n\n  Repeat.prototype.includes = function includes (searchValue) {\n    return is(this._value, searchValue);\n  };\n\n  Repeat.prototype.slice = function slice (begin, end) {\n    var size = this.size;\n    return wholeSlice(begin, end, size)\n      ? this\n      : new Repeat(\n          this._value,\n          resolveEnd(end, size) - resolveBegin(begin, size)\n        );\n  };\n\n  Repeat.prototype.reverse = function reverse () {\n    return this;\n  };\n\n  Repeat.prototype.indexOf = function indexOf (searchValue) {\n    if (is(this._value, searchValue)) {\n      return 0;\n    }\n    return -1;\n  };\n\n  Repeat.prototype.lastIndexOf = function lastIndexOf (searchValue) {\n    if (is(this._value, searchValue)) {\n      return this.size;\n    }\n    return -1;\n  };\n\n  Repeat.prototype.__iterate = function __iterate (fn, reverse) {\n    var size = this.size;\n    var i = 0;\n    while (i !== size) {\n      if (fn(this._value, reverse ? size - ++i : i++, this) === false) {\n        break;\n      }\n    }\n    return i;\n  };\n\n  Repeat.prototype.__iterator = function __iterator (type, reverse) {\n    var this$1$1 = this;\n\n    var size = this.size;\n    var i = 0;\n    return new Iterator(function () { return i === size\n        ? iteratorDone()\n        : iteratorValue(type, reverse ? size - ++i : i++, this$1$1._value); }\n    );\n  };\n\n  Repeat.prototype.equals = function equals (other) {\n    return other instanceof Repeat\n      ? is(this._value, other._value)\n      : deepEqual(other);\n  };\n\n  return Repeat;\n}(IndexedSeq));\n\nvar EMPTY_REPEAT;\n\nfunction fromJS(value, converter) {\n  return fromJSWith(\n    [],\n    converter || defaultConverter,\n    value,\n    '',\n    converter && converter.length > 2 ? [] : undefined,\n    { '': value }\n  );\n}\n\nfunction fromJSWith(stack, converter, value, key, keyPath, parentValue) {\n  if (\n    typeof value !== 'string' &&\n    !isImmutable(value) &&\n    (isArrayLike(value) || hasIterator(value) || isPlainObject(value))\n  ) {\n    if (~stack.indexOf(value)) {\n      throw new TypeError('Cannot convert circular structure to Immutable');\n    }\n    stack.push(value);\n    keyPath && key !== '' && keyPath.push(key);\n    var converted = converter.call(\n      parentValue,\n      key,\n      Seq(value).map(function (v, k) { return fromJSWith(stack, converter, v, k, keyPath, value); }\n      ),\n      keyPath && keyPath.slice()\n    );\n    stack.pop();\n    keyPath && keyPath.pop();\n    return converted;\n  }\n  return value;\n}\n\nfunction defaultConverter(k, v) {\n  // Effectively the opposite of \"Collection.toSeq()\"\n  return isIndexed(v) ? v.toList() : isKeyed(v) ? v.toMap() : v.toSet();\n}\n\nvar version = \"4.0.0\";\n\nvar Immutable = {\n  version: version,\n\n  Collection: Collection,\n  // Note: Iterable is deprecated\n  Iterable: Collection,\n\n  Seq: Seq,\n  Map: Map,\n  OrderedMap: OrderedMap,\n  List: List,\n  Stack: Stack,\n  Set: Set,\n  OrderedSet: OrderedSet,\n\n  Record: Record,\n  Range: Range,\n  Repeat: Repeat,\n\n  is: is,\n  fromJS: fromJS,\n  hash: hash,\n\n  isImmutable: isImmutable,\n  isCollection: isCollection,\n  isKeyed: isKeyed,\n  isIndexed: isIndexed,\n  isAssociative: isAssociative,\n  isOrdered: isOrdered,\n  isValueObject: isValueObject,\n  isPlainObject: isPlainObject,\n  isSeq: isSeq,\n  isList: isList,\n  isMap: isMap,\n  isOrderedMap: isOrderedMap,\n  isStack: isStack,\n  isSet: isSet,\n  isOrderedSet: isOrderedSet,\n  isRecord: isRecord,\n\n  get: get,\n  getIn: getIn$1,\n  has: has,\n  hasIn: hasIn$1,\n  merge: merge,\n  mergeDeep: mergeDeep$1,\n  mergeWith: mergeWith,\n  mergeDeepWith: mergeDeepWith$1,\n  remove: remove,\n  removeIn: removeIn,\n  set: set,\n  setIn: setIn$1,\n  update: update$1,\n  updateIn: updateIn$1,\n};\n\n// Note: Iterable is deprecated\nvar Iterable = Collection;\n\nexport default Immutable;\nexport { Collection, Iterable, List, Map, OrderedMap, OrderedSet, Range, Record, Repeat, Seq, Set, Stack, fromJS, get, getIn$1 as getIn, has, hasIn$1 as hasIn, hash, is, isAssociative, isCollection, isImmutable, isIndexed, isKeyed, isList, isMap, isOrdered, isOrderedMap, isOrderedSet, isPlainObject, isRecord, isSeq, isSet, isStack, isValueObject, merge, mergeDeep$1 as mergeDeep, mergeDeepWith$1 as mergeDeepWith, mergeWith, remove, removeIn, set, setIn$1 as setIn, update$1 as update, updateIn$1 as updateIn, version };\n","import { TileGrid } from \"./TileGrid\";\nimport { Set, is, hash, List } from \"immutable\";\n\nclass Tile {\n  constructor(readonly colour: TileColour, readonly shape: TileShape) {}\n\n  toString(): string {\n    return `Tile(${this.colour}, ${this.shape})`;\n  }\n\n  equals(other: unknown): boolean {\n    const o = other as Tile;\n    return o && is(o.colour, this.colour) && is(o.shape, this.shape);\n  }\n\n  hashCode(): number {\n    return hash(this.colour.toString()) + hash(this.shape.toString());\n  }\n}\n\nclass PositionedTile {\n  constructor(readonly tile: Tile, readonly position: Position) {}\n\n  static from(\n    position: Position,\n    colour: TileColour,\n    shape: TileShape\n  ): PositionedTile {\n    return new PositionedTile(new Tile(colour, shape), position);\n  }\n\n  get colour(): TileColour {\n    return this.tile.colour;\n  }\n\n  get shape(): TileShape {\n    return this.tile.shape;\n  }\n\n  toString(): string {\n    return `(${this.tile.toString()}, ${this.position.toString()})`;\n  }\n\n  equals(other: unknown): boolean {\n    const o = other as PositionedTile;\n    return o && is(o.position, this.position) && is(o.tile, this.tile);\n  }\n\n  hashCode(): number {\n    return this.tile.hashCode() + this.position.hashCode();\n  }\n}\n\nclass Position {\n  public static ZERO: Position = new Position(0, 0);\n\n  constructor(readonly x: number, readonly y: number) {}\n\n  public static below(pos: Position): Position {\n    return new Position(pos.x, pos.y - 1);\n  }\n\n  public static above(pos: Position): Position {\n    return new Position(pos.x, pos.y + 1);\n  }\n\n  public static left(pos: Position): Position {\n    return new Position(pos.x - 1, pos.y);\n  }\n\n  public static right(pos: Position): Position {\n    return new Position(pos.x + 1, pos.y);\n  }\n\n  minus(other: Position): Position {\n    return new Position(this.x - other.x, this.y - other.y);\n  }\n\n  plus(other: Position): Position {\n    return new Position(this.x + other.x, this.y + other.y);\n  }\n\n  toString(): string {\n    return `(${this.x}, ${this.y})`;\n  }\n\n  equals(other: unknown): boolean {\n    const o = other as Position;\n    return o && o.x === this.x && o.y === this.y;\n  }\n\n  hashCode(): number {\n    return hash(this.x) + hash(this.y);\n  }\n}\n\nclass Rect {\n  constructor(\n    readonly position: Position,\n    readonly width: number,\n    readonly height: number\n  ) {}\n\n  contains(position: Position): boolean {\n    return (\n      position.x >= this.position.x &&\n      position.x <= this.position.x + this.width &&\n      position.y >= this.position.y &&\n      position.y <= this.position.y + this.height\n    );\n  }\n\n  middle(): Position {\n    return new Position(\n      this.position.x + this.width / 2,\n      this.position.y + this.height / 2\n    );\n  }\n\n  toString(): string {\n    return `(${this.position.toString()}, width=${this.width}, height=${\n      this.height\n    })`;\n  }\n\n  equals(other: unknown): boolean {\n    const o = other as Rect;\n    return (\n      o &&\n      o.position.equals(this.position) &&\n      o.width === this.width &&\n      o.height === this.height\n    );\n  }\n\n  hashCode(): number {\n    return this.position.hashCode() + hash(this.width) + hash(this.height);\n  }\n}\n\ninterface PlacementOnEmptyGridMustBeAtOrigin {\n  type: \"PlacementOnEmptyGridMustBeAtOrigin\";\n}\n\ninterface PlacingOverCurrentlyPlacedTiles {\n  type: \"PlacingOverCurrentlyPlacedTiles\";\n  tiles: Set<PositionedTile>;\n}\n\ninterface DuplicatePlacement {\n  type: \"DuplicatePlacement\";\n  tiles: Set<PositionedTile>;\n}\n\ninterface CreatesInvalidLines {\n  type: \"CreatesInvalidLines\";\n  lines: Set<List<PositionedTile>>;\n}\n\ninterface AllPlacedTilesMustBeInALine {\n  type: \"AllPlacedTilesMustBeInALine\";\n}\n\ninterface Success {\n  type: \"Success\";\n  tileGrid: TileGrid;\n  score: number;\n}\n\ntype PlacementResult =\n  | PlacementOnEmptyGridMustBeAtOrigin\n  | PlacingOverCurrentlyPlacedTiles\n  | DuplicatePlacement\n  | CreatesInvalidLines\n  | AllPlacedTilesMustBeInALine\n  | Success;\n\nfunction prettyPrint(placementResult: PlacementResult): string {\n  switch (placementResult.type) {\n    case \"Success\":\n      return `${placementResult.type} (tile grid size ${placementResult.tileGrid.size})`;\n    case \"PlacingOverCurrentlyPlacedTiles\":\n      return `${placementResult.type} (${placementResult.tiles})`;\n    case \"PlacementOnEmptyGridMustBeAtOrigin\":\n      return `${placementResult.type}`;\n    case \"DuplicatePlacement\":\n      return `${placementResult.type} (${placementResult.tiles})`;\n    case \"CreatesInvalidLines\":\n      return `${placementResult.type} (${placementResult.lines})`;\n    case \"AllPlacedTilesMustBeInALine\":\n      return `${placementResult.type}`;\n  }\n}\n\nenum TileColour {\n  Yellow = \"yellow\",\n  Red = \"red\",\n  Purple = \"purple\",\n  Orange = \"orange\",\n  Green = \"green\",\n  Blue = \"blue\",\n}\n\nenum TileShape {\n  One = \"one\",\n  Two = \"two\",\n  Three = \"three\",\n  Four = \"four\",\n  Five = \"five\",\n  Six = \"six\",\n}\n\nexport {\n  PositionedTile,\n  Position,\n  Tile,\n  TileShape,\n  PlacementResult,\n  TileColour,\n  PlacementOnEmptyGridMustBeAtOrigin,\n  PlacingOverCurrentlyPlacedTiles,\n  DuplicatePlacement,\n  CreatesInvalidLines,\n  AllPlacedTilesMustBeInALine,\n  Success,\n  Rect,\n  prettyPrint,\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.20';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      if (iteratees.length) {\n        iteratees = arrayMap(iteratees, function(iteratee) {\n          if (isArray(iteratee)) {\n            return function(value) {\n              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n            }\n          }\n          return iteratee;\n        });\n      } else {\n        iteratees = [identity];\n      }\n\n      var index = -1;\n      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n          return object;\n        }\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      var low = 0,\n          high = array == null ? 0 : array.length;\n      if (high === 0) {\n        return 0;\n      }\n\n      value = iteratee(value);\n      var valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     *\n     * // Combining several predicates using `_.overEvery` or `_.overSome`.\n     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n     * // => objects for ['fred', 'barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 30 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n      // and escape the comment, thus injecting code that gets evaled.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/\\s/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     *\n     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])\n     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","export function loadImage(src: string): HTMLImageElement {\n  const img = new Image();\n  img.src = src;\n  return img;\n}\n","import { Position, Tile, TileColour, TileShape } from \"./domain\";\nimport { forIn } from \"lodash\";\nimport { loadImage } from \"./utility\";\n\nfunction loadImageCache(): Map<TileColour, Map<TileShape, HTMLImageElement>> {\n  let colours: Map<TileColour, Map<TileShape, HTMLImageElement>> = new Map();\n\n  forIn(TileColour, (colourValue, _) => {\n    let shapes: Map<TileShape, HTMLImageElement> = new Map();\n    forIn(TileShape, (shapeValue, _) => {\n      const src = `./images/${shapeValue.toString()}-${colourValue.toString()}.png`;\n      shapes.set(shapeValue, loadImage(src));\n    });\n    colours.set(colourValue, shapes);\n  });\n\n  return colours;\n}\n\nconst imageCache: Map<string, Map<string, HTMLImageElement>> = loadImageCache();\n\nconst emptyTileImage = loadImage(\"./images/empty-tile.png\");\nconst blankTileImage = loadImage(\"./images/blank-tile.png\");\nconst hoverTileImage = loadImage(\"./images/hover-tile.png\");\nconst activeTileImage = loadImage(\"./images/active-tile.png\");\n\nconst symWidth = emptyTileImage.width / 2;\nconst symHeight = emptyTileImage.height / 2;\n\nconst PADDING = 10;\n\nexport class TileGraphics {\n  static drawEmptyTile(\n    context: CanvasRenderingContext2D,\n    position: Position\n  ): void {\n    context.drawImage(\n      emptyTileImage,\n      position.x,\n      position.y,\n      emptyTileImage.width,\n      emptyTileImage.height\n    );\n  }\n\n  static get tileWidth(): number {\n    return emptyTileImage.width;\n  }\n\n  static get tileHeight(): number {\n    return emptyTileImage.height;\n  }\n\n  static drawHoverTile(\n    context: CanvasRenderingContext2D,\n    position: Position,\n    tile: Tile\n  ): void {\n    this.drawTile(context, position, tile, hoverTileImage);\n  }\n\n  static drawInactiveTile(\n    context: CanvasRenderingContext2D,\n    position: Position,\n    tile: Tile\n  ): void {\n    this.drawTile(context, position, tile, blankTileImage);\n  }\n\n  static drawActiveTile(\n    context: CanvasRenderingContext2D,\n    position: Position,\n    tile: Tile\n  ): void {\n    this.drawTile(context, position, tile, activeTileImage);\n  }\n\n  private static drawTile(\n    context: CanvasRenderingContext2D,\n    position: Position,\n    tile: Tile,\n    tileBackground: HTMLImageElement\n  ): void {\n    context.drawImage(\n      tileBackground,\n      position.x,\n      position.y,\n      blankTileImage.width,\n      blankTileImage.height\n    );\n    const inner = imageCache\n      .get(tile.colour)\n      ?.get(tile.shape) as HTMLImageElement;\n\n    if (inner) {\n      context.drawImage(\n        inner,\n        position.x + symWidth / 2,\n        position.y + symHeight / 2,\n        symWidth,\n        symHeight\n      );\n    }\n  }\n\n  static screenCoords(pos: Position, mid: Position): Position {\n    const tileX = pos.x * TileGraphics.tileWidth + pos.x * PADDING;\n    const tileY = pos.y * TileGraphics.tileHeight + pos.y * PADDING;\n    return new Position(mid.x + tileX, mid.y + tileY);\n  }\n\n  static positionFromScreen(screen: Position, mid: Position): Position {\n    const tileX = (screen.x - mid.x) / (TileGraphics.tileWidth + PADDING);\n    const tileY = (screen.y - mid.y) / (TileGraphics.tileHeight + PADDING);\n    return new Position(Math.floor(tileX), Math.floor(tileY));\n  }\n}\n","import { Position, Rect, Tile } from \"./domain\";\nimport { TileGraphics } from \"./TileGraphics\";\nimport { loadImage } from \"./utility\";\nimport { is, List, Map } from \"immutable\";\nimport { GameState } from \"./GameState\";\nimport { LiteralUnion } from \"prettier\";\n\nconst panelStartImage = loadImage(\"./images/panel-start.png\");\nconst PANEL_START_IMAGE_WIDTH = 26;\nexport const PANEL_HEIGHT = 129;\nconst PANEL_END_IMAGE_WIDTH = 26;\nconst PANEL_ITEMS = 6;\nconst PADDING = 5;\nconst panelEndImage = loadImage(\"./images/panel-end.png\");\nconst panelRepaet = loadImage(\"./images/panel-repeat.png\");\n\nconst PANEL_WIDTH =\n  PANEL_START_IMAGE_WIDTH +\n  PADDING +\n  PANEL_ITEMS * TileGraphics.tileWidth +\n  (PANEL_ITEMS - 1) * PADDING +\n  PADDING +\n  PANEL_END_IMAGE_WIDTH;\n\nconst PANEL_REPEAT_IMAGE_WIDTH =\n  PANEL_WIDTH - PANEL_START_IMAGE_WIDTH - PANEL_END_IMAGE_WIDTH;\n\nexport class PanelGraphics {\n  private position: Position;\n\n  private newPosition(state: GameState) {\n    return new Position(\n      state.canvasRect.width / 2 - PANEL_WIDTH / 2,\n      state.canvasRect.height - PADDING - PANEL_HEIGHT\n    );\n  }\n\n  constructor(state: GameState) {\n    this.position = this.newPosition(state);\n  }\n\n  private tileRects(state: GameState): Map<number, Rect> {\n    const tileY =\n      this.position.y +\n      panelStartImage.height / 2 -\n      TileGraphics.tileHeight / 2;\n\n    const startTileX = this.position.x + panelStartImage.width + PADDING;\n\n    return Map<number, Rect>(\n      state.hand.map((_, i) => {\n        const tileX = startTileX + i * TileGraphics.tileWidth + i * PADDING;\n        const tilePosition = new Position(tileX, tileY);\n        return [\n          i,\n          new Rect(\n            tilePosition,\n            TileGraphics.tileWidth,\n            TileGraphics.tileHeight\n          ),\n        ];\n      })\n    );\n  }\n\n  updateGameState(state: GameState): void {\n    this.position = this.newPosition(state);\n    const tileRects = this.tileRects(state);\n\n    var newHover: number | undefined;\n\n    const mousePosition = state.mousePosition;\n    if (mousePosition) {\n      tileRects.forEach((rect, i) => {\n        if (rect.contains(mousePosition)) {\n          newHover = i;\n          return false;\n        }\n      });\n    }\n\n    state.mouseEvents.forEach((e) => {\n      if (e.type == \"MouseClick\") {\n        tileRects.forEach((rect, i) => {\n          if (rect.contains(e.position)) {\n            state.setPanelTileActive(\n              i,\n              !state.panelActiveTileIndicies.contains(i)\n            );\n            return false;\n          }\n        });\n      }\n    });\n\n    state.panelHoverTileIndex = newHover;\n  }\n\n  draw(context: CanvasRenderingContext2D, state: GameState): void {\n    this.drawPanel(context);\n    const tileRects = this.tileRects(state);\n\n    state.hand.map((tile, i) => {\n      const rect = tileRects.get(i);\n      if (rect) {\n        if (state.panelActiveTileIndicies.contains(i)) {\n          TileGraphics.drawActiveTile(context, rect.position, tile);\n        } else if (\n          state.panelHoverTileIndex != undefined &&\n          is(state.panelHoverTileIndex, i)\n        ) {\n          TileGraphics.drawHoverTile(context, rect.position, tile);\n        } else {\n          TileGraphics.drawInactiveTile(context, rect.position, tile);\n        }\n      }\n    });\n  }\n\n  private drawPanel(context: CanvasRenderingContext2D): void {\n    const position = this.position;\n\n    context.drawImage(\n      panelStartImage,\n      position.x,\n      position.y - PADDING,\n      PANEL_START_IMAGE_WIDTH,\n      PANEL_HEIGHT\n    );\n\n    context.drawImage(\n      panelEndImage,\n      position.x + PANEL_WIDTH - PANEL_END_IMAGE_WIDTH,\n      position.y - PADDING,\n      PANEL_END_IMAGE_WIDTH,\n      PANEL_HEIGHT\n    );\n\n    context.drawImage(\n      panelRepaet,\n      position.x + PANEL_START_IMAGE_WIDTH,\n      position.y - PADDING,\n      PANEL_REPEAT_IMAGE_WIDTH,\n      PANEL_HEIGHT\n    );\n  }\n}\n","import { Position, Rect } from \"./domain\";\nimport { GameState } from \"./GameState\";\nimport { MouseDrag } from \"./Mouse\";\nimport { TileGraphics } from \"./TileGraphics\";\n\nexport class TileGridGraphics {\n  private mid: Position;\n  private effectiveMid: Position;\n\n  constructor(readonly tileGridRect: Rect) {\n    this.mid = tileGridRect.middle();\n    this.effectiveMid = tileGridRect.middle();\n  }\n\n  private updateDragging(gameState: GameState): void {\n    const delta = (e: MouseDrag) => e.from.minus(e.to);\n    gameState.mouseEvents.forEach((e) => {\n      if (e.type == \"MouseDrag\") {\n        this.mid = this.mid.minus(delta(e));\n      }\n    });\n\n    this.effectiveMid = this.mid;\n\n    if (gameState.mouseDragInProgress) {\n      this.effectiveMid = this.mid.minus(delta(gameState.mouseDragInProgress));\n    }\n  }\n\n  private updatePressedPositions(gameState: GameState): void {\n    const tilePositionsPressed = new Array<Position>();\n    gameState.mouseEvents.forEach((e) => {\n      if (e.type == \"MouseClick\") {\n        if (this.tileGridRect.contains(e.position)) {\n          const xy = TileGraphics.positionFromScreen(\n            e.position,\n            this.effectiveMid\n          );\n          tilePositionsPressed.push(xy);\n        }\n      }\n    });\n\n    gameState.tilePositionsPressed = tilePositionsPressed;\n  }\n\n  updateGameState(state: GameState): void {\n    this.updateDragging(state);\n    this.updatePressedPositions(state);\n  }\n\n  draw(context: CanvasRenderingContext2D, state: GameState): void {\n    for (const pt of state.tileGrid.values) {\n      const coords = TileGraphics.screenCoords(pt.position, this.effectiveMid);\n      TileGraphics.drawInactiveTile(context, coords, pt.tile);\n    }\n  }\n}\n","import { List } from \"immutable\";\nimport { forIn } from \"lodash\";\nimport { Tile, TileColour, TileShape } from \"./domain\";\n\nexport class TileBag {\n  constructor(private readonly contents: List<Tile>) {}\n\n  take(n: number): [List<Tile>, TileBag] {\n    const took = this.contents.take(n);\n    return [took, new TileBag(this.contents.skip(n))];\n  }\n\n  private static everyTile(): List<Tile> {\n    return List<Tile>().withMutations((mutable) => {\n      forIn(TileColour, (colour, _) => {\n        forIn(TileShape, (shape, _) => {\n          mutable.push(new Tile(colour, shape));\n        });\n      });\n    });\n  }\n\n  static full(): TileBag {\n    const list = this.everyTile()\n      .concat(this.everyTile())\n      .concat(this.everyTile());\n\n    return new TileBag(list.sortBy(Math.random));\n  }\n}\n","export const THUNK_SYMBOL: unique symbol = Symbol('thunk');\n\nexport interface Thunk<T> extends Function {\n  __THUNK__: typeof THUNK_SYMBOL;\n  (): T;\n}\n\nexport type ThunkOrValue<T> = T | Thunk<T>;\n\nexport type UnwrapThunkDeep<T> = {\n  0: T extends Thunk<infer U> ? UnwrapThunkDeep<U> : T;\n}[\n  T extends ThunkOrValue<T> ? 0 : never\n];\n\nexport const isThunk = <T>(value: any): value is Thunk<T> => {\n  return typeof value === 'function' && value.__THUNK__ === THUNK_SYMBOL;\n};\n\nexport const toThunk = <R>(fn: () => R): Thunk<R> => {\n  const thunk = () => fn();\n  thunk.__THUNK__ = THUNK_SYMBOL;\n  return thunk;\n};\n","import { ArgumentTypes } from './types';\nimport {\n  Thunk,\n  UnwrapThunkDeep,\n  isThunk,\n  toThunk,\n  ThunkOrValue,\n} from './thunk';\n\nexport type UnwrapPromise<T> = T extends Promise<infer U> ? Exclude<U, Promise<T>> : T;\n\nexport type Unbox<T> = UnwrapThunkDeep<UnwrapPromise<T>>;\n\nexport type Cont<A extends any[], R> = (...args: A) => Thunk<Unbox<R>>;\n\nexport interface Trampoline<F extends ((...args: any[]) => any)> {\n  (...args: ArgumentTypes<F>): Unbox<ReturnType<F>>;\n  cont: Cont<ArgumentTypes<F>, ReturnType<F>>;\n}\n\nexport interface TrampolineAsync<F extends ((...args: any[]) => any)> {\n  (...args: ArgumentTypes<F>): Promise<Unbox<ReturnType<F>>>;\n  cont: Cont<ArgumentTypes<F>, ReturnType<F>>;\n}\n\nexport const trampoline = <F extends ((...args: any[]) => any)>(fn: F): Trampoline<F> => {\n  const cont = (...args: ArgumentTypes<F>) => toThunk(() => fn(...args));\n\n  return Object.assign(\n    (...args: ArgumentTypes<F>): Unbox<ReturnType<F>> => {\n      let result: ThunkOrValue<ReturnType<F>> = fn(...args);\n\n      while (isThunk<ReturnType<F>>(result)) {\n        result = result();\n      }\n\n      return result;\n    },\n    { cont },\n  );\n};\n\nexport const trampolineAsync = <F extends ((...args: any[]) => any)>(fn: F): TrampolineAsync<F> => {\n  const cont = (...args: ArgumentTypes<F>) => toThunk(() => fn(...args));\n\n  return Object.assign(\n    async (...args: ArgumentTypes<F>): Promise<Unbox<ReturnType<F>>> => {\n      let result: ThunkOrValue<ReturnType<F>> = await fn(...args);\n\n      while (isThunk<ReturnType<F>>(result)) {\n        result = await result();\n      }\n\n      return result;\n    },\n    { cont },\n  );\n};\n","export * from './thunk';\nexport * from './trampoline';\n","import { trampoline, ThunkOrValue } from \"trampoline-ts\";\nimport {\n  PlacementOnEmptyGridMustBeAtOrigin,\n  PlacementResult,\n  Position,\n  PositionedTile,\n} from \"./domain\";\n\nimport { Set, List, is } from \"immutable\";\n\nfunction neighbours(\n  grid: TileGrid,\n  position: Position,\n  direction: (p: Position) => Position\n): List<PositionedTile> | undefined {\n  const inner = trampoline(\n    (\n      p: Position,\n      acc: List<PositionedTile> | undefined\n    ): ThunkOrValue<List<PositionedTile> | undefined> => {\n      const tile = grid.at(p);\n\n      if (tile) {\n        if (acc) {\n          return inner.cont(direction(p), acc.push(tile));\n        } else {\n          return inner.cont(direction(p), List.of(tile));\n        }\n      } else {\n        return acc;\n      }\n    }\n  );\n\n  return inner(direction(position), undefined);\n}\n\nfunction buildLine(\n  before: List<PositionedTile> | undefined,\n  elem: PositionedTile,\n  after: List<PositionedTile> | undefined\n): List<PositionedTile> | undefined {\n  if (before) {\n    return before.push(elem).concat(after ?? List());\n  } else if (after) {\n    return List.of(elem).concat(after);\n  } else {\n    return undefined;\n  }\n}\n\nfunction isValidLine(line: List<PositionedTile>): boolean {\n  const distinctColours = Set(line.map((t) => t.colour)).size;\n  const distinctShapes = Set(line.map((t) => t.shape)).size;\n\n  if (distinctColours === 1) {\n    return distinctShapes === line.size;\n  } else if (distinctShapes === 1) {\n    return distinctColours === line.size;\n  } else {\n    return false;\n  }\n}\n\nexport function allLines(\n  grid: TileGrid,\n  placements: Set<PositionedTile>\n): Set<List<PositionedTile>> {\n  return placements\n    .flatMap((placement) => {\n      const l = neighbours(grid, placement.position, Position.left);\n      const r = neighbours(grid, placement.position, Position.right);\n      const a = neighbours(grid, placement.position, Position.above);\n      const b = neighbours(grid, placement.position, Position.below);\n\n      const l1 = buildLine(l, placement, r) ?? List();\n      const l2 = buildLine(a, placement, b) ?? List();\n\n      return List.of(l1, l2).filter((l) => l.size > 0);\n    })\n    .toSet();\n}\n\nfunction scoreLine(line: Set<PositionedTile>): number {\n  if (line.size === 6) {\n    return 12;\n  } else {\n    return line.size;\n  }\n}\n\nfunction scoreLines(lines: Set<List<PositionedTile>>): number {\n  const deduped = lines.map((l) => l.toSet());\n  return deduped\n    .toList()\n    .map(scoreLine)\n    .reduce((acc, n) => acc + n, 0);\n}\n\nexport class TileGrid {\n  private elems: Map<string, PositionedTile>;\n\n  private constructor(elems: Map<string, PositionedTile>) {\n    this.elems = elems;\n    this.elems.values;\n  }\n\n  public static empty(): TileGrid {\n    return new TileGrid(new Map());\n  }\n\n  private mapKey(position: Position): string {\n    return `${position.x},${position.y}`;\n  }\n\n  get values(): IterableIterator<PositionedTile> {\n    return this.elems.values();\n  }\n\n  place(placements: Set<PositionedTile>): PlacementResult {\n    const overlapping = placements.filter((p) =>\n      this.elems.has(this.mapKey(p.position))\n    );\n    if (overlapping.size > 0) {\n      return { type: \"PlacingOverCurrentlyPlacedTiles\", tiles: overlapping };\n    }\n\n    if (\n      this.elems.size === 0 &&\n      !placements.some((p) => p.position.equals(new Position(0, 0)))\n    ) {\n      return { type: \"PlacementOnEmptyGridMustBeAtOrigin\" };\n    }\n\n    const dupes = placements.filter(\n      (p) => placements.filter((p2) => is(p, p2)).size > 1\n    );\n\n    if (dupes.size > 0) {\n      return { type: \"DuplicatePlacement\", tiles: dupes };\n    }\n\n    //viable enough to try to construct the grid\n    const m = new Map<string, PositionedTile>();\n    this.elems.forEach((v, k) => m.set(k, v));\n    placements.forEach((pt) => m.set(this.mapKey(pt.position), pt));\n    const res = new TileGrid(m);\n\n    const lines = allLines(res, placements);\n    const invalidLines = lines.filter((l) => !isValidLine(l));\n\n    if (!invalidLines.isEmpty()) {\n      return { type: \"CreatesInvalidLines\", lines: invalidLines };\n    }\n\n    const singleTilePlacedOnEmpty = this.size === 0 && placements.size === 1;\n\n    if (\n      !lines.some((l) => placements.every((p) => l.some((pt) => is(p, pt)))) &&\n      !singleTilePlacedOnEmpty\n    ) {\n      return { type: \"AllPlacedTilesMustBeInALine\" };\n    }\n\n    const score = singleTilePlacedOnEmpty ? 1 : scoreLines(lines);\n\n    return { type: \"Success\", tileGrid: res, score: score };\n  }\n\n  at(pos: Position): PositionedTile | undefined {\n    return this.elems.get(this.mapKey(pos));\n  }\n\n  get size(): number {\n    return this.elems.size;\n  }\n}\n","import { List, Set } from \"immutable\";\nimport {\n  Position,\n  PositionedTile,\n  Rect,\n  Success,\n  Tile,\n  TileColour,\n  TileShape,\n} from \"./domain\";\nimport { MouseClickOrDrag, MouseDrag } from \"./Mouse\";\nimport { TileBag } from \"./TileBag\";\nimport { TileGrid } from \"./TileGrid\";\n\nexport class GameState {\n  constructor(\n    public hand: List<Tile>,\n    public tileBag: TileBag,\n    public canvasRect: Rect,\n    public tileGrid: TileGrid,\n    public tileGridInProgress: TileGrid,\n    public tileGridApplied: TileGrid,\n    public mousePosition: Position | undefined,\n    public mouseEvents: Array<MouseClickOrDrag>,\n    public tilePositionsPressed: Array<Position>,\n    public currentPlacementSet: Set<PositionedTile>,\n    public pressedButtonTags: Set<string>,\n    public enabledButtonTags: Set<string>,\n    public panelActiveTileIndicies: Set<number>,\n    public score: number,\n    public currentPlacementScore: number,\n    public mouseDragInProgress: MouseDrag | undefined,\n    public panelHoverTileIndex: number | undefined\n  ) {}\n\n  setButtonEnabled(tag: string, isEnabled: boolean): void {\n    if (isEnabled) this.enabledButtonTags = this.enabledButtonTags.add(tag);\n    else this.enabledButtonTags = this.enabledButtonTags.remove(tag);\n  }\n\n  setButtonPressed(tag: string, isPressed: boolean): void {\n    if (isPressed) this.pressedButtonTags = this.pressedButtonTags.add(tag);\n    else this.pressedButtonTags = this.pressedButtonTags.remove(tag);\n  }\n\n  setPanelTileActive(index: number, isActive: boolean): void {\n    if (isActive)\n      this.panelActiveTileIndicies = this.panelActiveTileIndicies.add(index);\n    else\n      this.panelActiveTileIndicies = this.panelActiveTileIndicies.remove(index);\n  }\n\n  static initial(canvasRect: Rect): GameState {\n    const tgResult = TileGrid.empty().place(\n      Set.of(\n        new PositionedTile(\n          new Tile(TileColour.Blue, TileShape.Four),\n          new Position(0, 0)\n        )\n      )\n    ) as Success;\n\n    var [hand, tileBag] = TileBag.full().take(6);\n\n    return new GameState(\n      hand,\n      tileBag,\n      canvasRect,\n      tgResult.tileGrid,\n      tgResult.tileGrid,\n      tgResult.tileGrid,\n      new Position(0, 0),\n      [],\n      [],\n      Set.of(),\n      Set.of(),\n      Set.of(),\n      Set.of(),\n      1,\n      0,\n      undefined,\n      undefined\n    );\n  }\n}\n","import { Position } from \"./domain\";\nimport { GameState } from \"./GameState\";\n\nexport interface MouseClick {\n  type: \"MouseClick\";\n  position: Position;\n}\n\nexport interface MouseDrag {\n  type: \"MouseDrag\";\n  from: Position;\n  to: Position;\n}\n\nexport type MouseClickOrDrag = MouseClick | MouseDrag;\n\nexport class Mouse {\n  private mousePosition: Position | undefined;\n  private mouseDownCounter: number | undefined;\n\n  private isDragging: boolean = false;\n  private mouseDragStart: Position | undefined;\n\n  private events = Array<MouseClickOrDrag>();\n\n  private isMouseDown(): boolean {\n    return this.mouseDownCounter != undefined && this.mouseDownCounter != 0;\n  }\n\n  static updateMouseUp(mouse: Mouse): () => void {\n    return () => {\n      const downBefore = mouse.isMouseDown();\n\n      mouse.mouseDownCounter = (mouse.mouseDownCounter ?? 0) - 1;\n\n      const currentPos = mouse.mousePosition;\n\n      if (\n        mouse.isDragging &&\n        currentPos &&\n        mouse.mouseDragStart &&\n        downBefore &&\n        !mouse.isMouseDown()\n      ) {\n        mouse.isDragging = false;\n        const e: MouseDrag = {\n          type: \"MouseDrag\",\n          from: mouse.mouseDragStart,\n          to: currentPos,\n        };\n        mouse.events.push(e);\n        mouse.mouseDragStart = undefined;\n      } else if (currentPos && downBefore && !mouse.isMouseDown()) {\n        const e: MouseClick = {\n          type: \"MouseClick\",\n          position: currentPos,\n        };\n        mouse.mouseDragStart = undefined;\n        mouse.events.push(e);\n      }\n    };\n  }\n\n  static updateMouseDown(mouse: Mouse): () => void {\n    return () => {\n      const downBefore = mouse.isMouseDown();\n      mouse.mouseDownCounter = (mouse.mouseDownCounter ?? 0) + 1;\n      if (\n        !downBefore &&\n        mouse.isMouseDown() &&\n        mouse.mousePosition &&\n        mouse.mouseDragStart == undefined\n      ) {\n        mouse.mouseDragStart = mouse.mousePosition;\n      }\n    };\n  }\n\n  static updateMousePosition(mouse: Mouse): (e: MouseEvent) => void {\n    return (e) => {\n      mouse.mousePosition = new Position(e.pageX, e.pageY);\n\n      if (\n        mouse.isMouseDown() &&\n        mouse.mouseDragStart &&\n        mouse.mousePosition &&\n        !mouse.isDragging\n      ) {\n        const dx = Math.abs(mouse.mouseDragStart.x - mouse.mousePosition.x);\n        const dy = Math.abs(mouse.mouseDragStart.y - mouse.mousePosition.y);\n\n        if (dx > 5 || dy > 5) {\n          mouse.isDragging = true;\n        }\n      }\n    };\n  }\n\n  updateGameState(state: GameState): void {\n    state.mousePosition = this.mousePosition;\n    state.mouseEvents = this.events;\n    if (this.isDragging && state.mousePosition && this.mouseDragStart) {\n      const e: MouseDrag = {\n        type: \"MouseDrag\",\n        from: this.mouseDragStart,\n        to: state.mousePosition,\n      };\n      state.mouseDragInProgress = e;\n    } else {\n      state.mouseDragInProgress = undefined;\n    }\n    this.events = [];\n  }\n}\n","import { PositionedTile, prettyPrint } from \"./domain\";\nimport { GameState } from \"./GameState\";\nimport { Set } from \"immutable\";\nimport { acceptButton, cancelButton, swapButton } from \"../index\";\n\nfunction isValidPlacement(\n  gameState: GameState,\n  placements: Set<PositionedTile>\n): boolean {\n  const newTg = gameState.tileGridApplied.place(placements);\n\n  if (newTg) {\n    switch (newTg.type) {\n      case \"Success\":\n        gameState.tileGridInProgress = newTg.tileGrid;\n        gameState.currentPlacementScore = newTg.score;\n        return true;\n      default:\n        console.log(`oh no, can't do that: ${prettyPrint(newTg)}`);\n        break;\n    }\n  } else {\n    console.log(\"newTg or tileGridGraphics is null\");\n  }\n  return false;\n}\n\nexport class GameLogic {\n  public static updateGameState(gameState: GameState): void {\n    const singleActiveTile:\n      | number\n      | undefined = gameState.panelActiveTileIndicies.first();\n    if (singleActiveTile != undefined) {\n      const activeTile = gameState.hand.get(singleActiveTile);\n      if (activeTile) {\n        gameState.tilePositionsPressed.forEach((p) => {\n          const newPlacement = gameState.currentPlacementSet.add(\n            new PositionedTile(activeTile, p)\n          );\n          if (isValidPlacement(gameState, newPlacement)) {\n            const newHand = gameState.hand.remove(singleActiveTile);\n            gameState.panelActiveTileIndicies = Set.of();\n            gameState.hand = newHand;\n            gameState.currentPlacementSet = newPlacement;\n          }\n        });\n      }\n    }\n\n    if (gameState.pressedButtonTags.contains(acceptButton.tag)) {\n      gameState.tileGridApplied = gameState.tileGridInProgress;\n\n      const toTake = gameState.currentPlacementSet.size;\n\n      const [toAdd, newBag] = gameState.tileBag.take(toTake);\n      gameState.hand = gameState.hand.concat(toAdd);\n      gameState.tileBag = newBag;\n      gameState.score = gameState.score + gameState.currentPlacementScore;\n      gameState.currentPlacementScore = 0;\n      gameState.currentPlacementSet = Set.of();\n    } else if (\n      gameState.pressedButtonTags.contains(swapButton.tag) &&\n      !gameState.panelActiveTileIndicies.isEmpty()\n    ) {\n      const [toAdd, newBag] = gameState.tileBag.take(\n        gameState.panelActiveTileIndicies.size\n      );\n\n      const newHand = gameState.hand\n        .filterNot((_, i) => gameState.panelActiveTileIndicies.contains(i))\n        .concat(toAdd);\n      gameState.hand = newHand;\n      gameState.tileBag = newBag;\n      gameState.panelActiveTileIndicies = Set.of();\n    } else if (\n      gameState.pressedButtonTags.contains(cancelButton.tag) &&\n      !gameState.currentPlacementSet.isEmpty()\n    ) {\n      const newHand = gameState.hand.concat(\n        gameState.currentPlacementSet.map((p) => p.tile)\n      );\n      gameState.hand = newHand;\n      gameState.tileGridInProgress = gameState.tileGridApplied;\n      gameState.currentPlacementSet = Set.of();\n    }\n\n    const placementButtonsEnabled = !gameState.currentPlacementSet.isEmpty();\n\n    gameState.setButtonEnabled(acceptButton.tag, placementButtonsEnabled);\n    gameState.setButtonEnabled(cancelButton.tag, placementButtonsEnabled);\n    gameState.setButtonEnabled(\n      swapButton.tag,\n      !gameState.panelActiveTileIndicies.isEmpty() &&\n        gameState.currentPlacementSet.isEmpty()\n    );\n\n    gameState.tileGrid = gameState.currentPlacementSet.isEmpty()\n      ? gameState.tileGridApplied\n      : gameState.tileGridInProgress;\n  }\n}\n","import { Position, Rect } from \"./domain\";\nimport { GameLogic } from \"./GameLogic\";\nimport { GameState } from \"./GameState\";\n\nexport class Button {\n  private currentImage: HTMLImageElement;\n  private rect: Rect;\n\n  constructor(\n    readonly position: Position,\n    readonly inactive: HTMLImageElement,\n    readonly hover: HTMLImageElement,\n    readonly tag: string\n  ) {\n    this.currentImage = inactive;\n    this.rect = new Rect(position, inactive.width, inactive.height);\n  }\n\n  updateGameState(gameState: GameState): void {\n    var hovering = false;\n    var isClicked = false;\n\n    if (gameState.mousePosition) {\n      gameState.mouseEvents.forEach((e) => {\n        if (e.type == \"MouseClick\" && this.rect.contains(e.position)) {\n          isClicked = true;\n          return false;\n        }\n      });\n\n      hovering = this.rect.contains(gameState.mousePosition);\n    }\n\n    const enabled = gameState.enabledButtonTags.contains(this.tag);\n\n    this.currentImage =\n      hovering && !isClicked && enabled ? this.hover : this.inactive;\n\n    gameState.setButtonPressed(this.tag, isClicked && enabled);\n  }\n\n  draw(context: CanvasRenderingContext2D, gameState: GameState) {\n    const opacity = gameState.enabledButtonTags.contains(this.tag) ? 1.0 : 0.4;\n    context.save();\n    context.globalAlpha = opacity;\n    context.drawImage(this.currentImage, this.position.x, this.position.y);\n    context.restore();\n  }\n}\n","import { Position } from \"./domain\";\nimport { GameState } from \"./GameState\";\n\nexport class Score {\n  constructor(readonly position: Position) {}\n\n  draw(context: CanvasRenderingContext2D, gameState: GameState) {\n    context.save();\n    context.font = \"48px serif\";\n    const score = gameState.score.toString();\n    context.textBaseline = \"top\";\n    context.fillStyle = \"black\";\n    context.fillText(score, this.position.x, this.position.y);\n\n    if (gameState.currentPlacementScore > 0) {\n      const scoreWidth = context.measureText(score).width;\n      const additionalScore = ` + ${gameState.currentPlacementScore}`;\n      context.fillStyle = \"blue\";\n      context.fillText(\n        additionalScore,\n        this.position.x + scoreWidth,\n        this.position.y\n      );\n    }\n\n    context.restore();\n  }\n}\n","import { Rect } from \"./tiles/domain\";\n\nimport _ from \"lodash\";\nimport { Position } from \"./tiles/domain\";\nimport { PanelGraphics, PANEL_HEIGHT } from \"./tiles/PanelGraphics\";\nimport { TileGridGraphics } from \"./tiles/TileGridGraphics\";\nimport { GameState } from \"./tiles/GameState\";\nimport { Mouse } from \"./tiles/Mouse\";\nimport { GameLogic } from \"./tiles/GameLogic\";\nimport { loadImage } from \"./tiles/utility\";\nimport { Button } from \"./tiles/Button\";\nimport { Score } from \"./tiles/Score\";\n\nconst canvas = document.querySelector(\"#game\") as HTMLCanvasElement;\nconst context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\n\nconst canvasRect = new Rect(new Position(0, 0), canvas.width, canvas.height);\n\nconst gameState: GameState = GameState.initial(canvasRect);\n\nconst tileGridRect = new Rect(\n  new Position(10, 10),\n  canvasRect.width,\n  canvasRect.height - PANEL_HEIGHT - 10\n);\n\nvar panel: PanelGraphics | undefined;\n\nvar tileGrid: TileGridGraphics | undefined;\n\nconst mouse: Mouse = new Mouse();\n\ndocument.addEventListener(\"mousedown\", Mouse.updateMouseDown(mouse));\ndocument.addEventListener(\"mouseup\", Mouse.updateMouseUp(mouse));\ndocument.addEventListener(\"mousemove\", Mouse.updateMousePosition(mouse));\n\nconst acceptInactive = loadImage(\"./images/accept-inactive.png\");\nconst acceptHover = loadImage(\"./images/accept-hover.png\");\n\nconst swapInactive = loadImage(\"./images/swap-inactive.png\");\nconst swapHover = loadImage(\"./images/swap-hover.png\");\n\nconst cancelInactive = loadImage(\"./images/cancel-inactive.png\");\nconst cancelHover = loadImage(\"./images/cancel-hover.png\");\n\nexport const acceptButton = new Button(\n  new Position(canvasRect.width - acceptInactive.width - 10, 10),\n  acceptInactive,\n  acceptHover,\n  \"accept\"\n);\n\nexport const swapButton = new Button(\n  acceptButton.position.plus(new Position(0, acceptInactive.height + 10)),\n  swapInactive,\n  swapHover,\n  \"swap\"\n);\n\nexport const cancelButton = new Button(\n  swapButton.position.plus(new Position(0, swapInactive.height + 10)),\n  cancelInactive,\n  cancelHover,\n  \"cancel\"\n);\n\nconst score: Score = new Score(new Position(10, 10));\n\nfunction gameLoop(context: CanvasRenderingContext2D) {\n  context.fillStyle = \"red\";\n  context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n\n  if (!panel) {\n    panel = new PanelGraphics(gameState);\n  }\n  if (!tileGrid) {\n    tileGrid = new TileGridGraphics(tileGridRect);\n  }\n\n  mouse.updateGameState(gameState);\n  panel.updateGameState(gameState);\n  tileGrid.updateGameState(gameState);\n  acceptButton.updateGameState(gameState);\n  swapButton.updateGameState(gameState);\n  cancelButton.updateGameState(gameState);\n  GameLogic.updateGameState(gameState);\n\n  tileGrid.draw(context, gameState);\n  panel.draw(context, gameState);\n  acceptButton.draw(context, gameState);\n  swapButton.draw(context, gameState);\n  cancelButton.draw(context, gameState);\n  score.draw(context, gameState);\n\n  requestAnimationFrame(() => gameLoop(context));\n}\n\ngameLoop(context);\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}